{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/random.js","webpack:///./src/utils/contenttitleutils.js","webpack:///./src/mixins/helpers/linkwithroom.js","webpack:///./src/assets/images/logos/logo-long-light.png","webpack:///./src/player/index.js","webpack:///./src/utils/fetchutils.js","webpack:///./src/store/actions.js","webpack:///./src/store/state.js","webpack:///./src/store/mutations.js","webpack:///./src/store/getters.js","webpack:///./src/socket.js","webpack:///./src/store/modules/synclounge/eventhandlers.js","webpack:///./src/utils/combineurl.js","webpack:///./src/store/modules/synclounge/actions.js","webpack:///./src/store/modules/synclounge/state.js","webpack:///./src/store/modules/synclounge/mutations.js","webpack:///./src/store/modules/synclounge/getters.js","webpack:///./src/store/modules/synclounge/index.js","webpack:///./src/store/modules/settings/actions.js","webpack:///./src/store/modules/settings/state.js","webpack:///./src/store/modules/settings/mutations.js","webpack:///./src/store/modules/settings/getters.js","webpack:///./src/store/modules/settings/index.js","webpack:///./src/utils/promiseutils.js","webpack:///./src/utils/lightlodash.js","webpack:///./src/store/modules/plex/actions.js","webpack:///./src/store/modules/plex/state.js","webpack:///./src/store/modules/plex/mutations.js","webpack:///./src/store/modules/plex/getters.js","webpack:///./src/store/modules/plex/index.js","webpack:///./src/store/modules/plexclients/actions.js","webpack:///./src/store/modules/plexclients/state.js","webpack:///./src/store/modules/plexclients/mutations.js","webpack:///./src/store/modules/plexclients/getters.js","webpack:///./src/store/modules/plexclients/index.js","webpack:///./src/utils/weightedrandomchoice.js","webpack:///./src/store/modules/plexservers/mediascoring.js","webpack:///./src/store/modules/plexservers/actions.js","webpack:///./src/store/modules/plexservers/state.js","webpack:///./src/store/modules/plexservers/mutations.js","webpack:///./src/store/modules/plexservers/getters.js","webpack:///./src/store/modules/plexservers/index.js","webpack:///./src/utils/deferredpromise.js","webpack:///./src/utils/streams.js","webpack:///./src/utils/videoclock.js","webpack:///./src/store/modules/slplayer/subtitleActions.js","webpack:///./src/store/modules/slplayer/actions.js","webpack:///./src/store/modules/slplayer/state.js","webpack:///./src/store/modules/slplayer/mutations.js","webpack:///./src/utils/mediasupport.js","webpack:///./src/store/modules/slplayer/qualities.js","webpack:///./src/store/modules/slplayer/getters.js","webpack:///./src/store/modules/slplayer/index.js","webpack:///./src/store/modules/index.js","webpack:///./src/store/index.js","webpack:///./src/utils/subtitleutils.js","webpack:///./src/utils/streamingprotocols.js","webpack:///./src/plugins/vuetify.js","webpack:///./src/App.vue?3953","webpack:///src/App.vue","webpack:///./src/App.vue?3359","webpack:///./src/App.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/assets/sounds/notification_simple-01.wav","webpack:///./src/player/constants.js","webpack:///./src/mixins/helpers/contentlink.js","webpack:///./src/player/state.js","webpack:///./src/mixins/redirection.js","webpack:///./src/assets/images/logos/logo-small-light.png","webpack:///./src/mixins/clipboard.js","webpack:///./src/mixins/linkwithroom.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","MAX_CHARSET_SIZE","alphanumericCharacters","max","randomAlphanumericString","randomString","numUint16Elements","Math","ceil","array","Uint16Array","crypto","getRandomValues","digit","newChar","roomIdLength","getRandomRoomId","plexIdLength","getRandomPlexId","reasonWord","section","actor","director","getTitle","metadata","fullTitle","title","parentTitle","grandparentTitle","getSecondaryTitle","year","childCount","leafCount","index","parentIndex","getCombinedTitle","getReasonTitle","reason","reasonTitle","linkWithRoom","getters","params","rest","room","server","areControlsShown","getOverlay","getControls","enabled_","getControlsContainer","getControlsOffset","fallbackHeight","getPlayer","getMediaElement","offsetHeight","getControlsOffsetWithVisibility","isPaused","paused","isPresentationPaused","isSeeking","isBuffering","isPlaying","getCurrentTime","currentTime","getCurrentTimeMs","getDurationMs","duration","getVolume","volume","setVolume","play","pause","isTimeInBufferedRange","timeMs","bufferedTimeRange","buffered","start","end","isMediaElementAttached","addEventListener","args","removeEventListener","addMediaElementEventListener","removeMediaElementEventListener","waitForMediaElementEvent","signal","pr","catch","once","cancelTrickPlay","load","unload","getPlaybackRate","setPlaybackRate","rate","playbackRate","setCurrentTimeMs","getSmallPlayButton","getElementsByClassName","getBigPlayButton","getDimensions","videoWidth","videoHeight","offsetWidth","insertElementBeforeVideo","element","parent","insertBefore","destroy","async","savedOverlay","setPlayer","setOverlay","makeUrl","url","URLSearchParams","safeFetch","response","fetch","ok","statusText","queryFetch","queryParams","init","fetchText","text","fetchJson","headers","Accept","json","fetchXmlAndTransform","xmlutils","default","parse","fetchBodyReader","body","getReader","RESET","commit","DISPLAY_NOTIFICATION","FETCH_CONFIG","dispatch","config","color","NAVIGATE_HOME","GET_NAVIGATE_HOME","state","version","process","repositoryUrl","discordUrl","background","configuration","isLeftSidebarOpen","isRightSidebarOpen","upNextPostPlayData","activeMetadata","snackbarMessage","snackbarOpen","navigateToPlayer","browser","detect","navigateHome","isLibraryListView","assign","stateFactory","SET_BACKGROUND","SET_LEFT_SIDEBAR_OPEN","open","SET_RIGHT_SIDEBAR_OPEN","TOGGLE_RIGHT_SIDEBAR_OPEN","SET_UP_NEXT_POST_PLAY_DATA","SET_ACTIVE_METADATA","SET_SNACKBAR_MESSAGE","SET_SNACKBAR_OPEN","SET_NAVIGATE_TO_PLAYER","navigate","SET_CONFIGURATION","SET_NAVIGATE_HOME","TOGGLE_LIBRARY_LIST_VIEW","GET_RELEASE_URL","GET_BACKGROUND","GET_UP_NEXT_POST_PLAY_DATA","GET_CONFIG","GET_ACTIVE_METADATA","GET_SNACKBAR_MESSAGE","GET_SNACKBAR_OPEN","GET_NAVIGATE_TO_PLAYER","GET_BROWSER","IS_LIBRARY_LIST_VIEW","socket","options","io","connect","close","emit","eventName","on","handler","waitForEvent","isConnected","connected","getId","id","HANDLE_SET_PARTY_PAUSING_ENABLED","senderId","GET_HOST_ID","HANDLE_SET_AUTO_HOST_ENABLED","HANDLE_USER_JOINED","updatedAt","Date","now","username","HANDLE_USER_LEFT","newHostId","GET_USER","HANDLE_NEW_HOST","hostId","HANDLE_DISCONNECT","log","root","HANDLE_RECONNECT","HANDLE_SLPING","context","secret","HANDLE_PLAYER_STATE_UPDATE","HANDLE_MEDIA_UPDATE","time","media","makeHost","HANDLE_SYNC_FLEXIBILITY_UPDATE","HANDLE_PARTY_PAUSE","isPause","HANDLE_KICKED","combineUrl","base","fixedBase","charAt","URL","combineRelativeUrlParts","path","notificationAudio","Audio","notificationSound","CONNECT_AND_JOIN_ROOM","SET_AND_CONNECT_AND_JOIN_ROOM","DISCONNECT_IF_CONNECTED","ESTABLISH_SOCKET_CONNECTION","currentUrl","location","pathname","origin","properBase","GET_SERVER","toString","transports","JOIN_ROOM","rootGetters","joinPlayerData","roomId","GET_ROOM","desiredUsername","GET_DISPLAY_USERNAME","desiredPartyPausingEnabled","IS_PARTY_PAUSING_ENABLED","desiredAutoHostEnabled","IS_AUTO_HOST_ENABLED","thumb","syncFlexibility","success","JOIN_ROOM_AND_INIT","user","users","isPartyPausingEnabled","isAutoHostEnabled","fromEntries","entries","map","socketid","playerProduct","product","DISCONNECT","SEND_MESSAGE","msg","GET_SOCKET_ID","TRANSFER_HOST","SEND_SET_PARTY_PAUSING_ENABLED","SEND_SET_AUTO_HOST_ENABLED","sendPartyPause","AM_I_HOST","slPlayerClientId","FETCH_SERVERS_HEALTH","controller","AbortController","abort","socket_server_health_timeout","results","allSettled","servers","latency","aliveServerHealths","filter","status","ADD_EVENT_HANDLERS","makeHandler","action","registerListener","CANCEL_UPNEXT","GET_UPNEXT_TIMEOUT_ID","DISPLAY_UPNEXT","debug","Metadata","playQueueSelectedItemOffset","SCHEDULE_UPNEXT","playerState","Number","isNaN","timeUntilUpnextTrigger","synclounge_upnext_trigger_time_from_end","CALC_IS_IN_UPNEXT_REGION","PROCESS_UPNEXT","GET_UP_NEXT_TRIGGERED","PROCESS_PLAYER_STATE_UPDATE","noSync","PROCESS_MEDIA_UPDATE","userInitiated","ADD_MESSAGE_AND_CACHE_AND_NOTIFY","ARE_SOUND_NOTIFICATIONS_ENABLED","ARE_NOTIFICATIONS_ENABLED","Notification","permission","requestPermission","GET_MESSAGES_USER_CACHE_USER","icon","ADD_MESSAGE_AND_CACHE","CANCEL_IN_PROGRESS_SYNC","GET_SYNC_CANCEL_TOKEN","MANUAL_SYNC","adjustedHostTime","GET_ADJUSTED_HOST_TIME","offset","GET_HOST_USER","token","CAF","cancelToken","cancelSignal","warn","SYNC_MEDIA_AND_PLAYER_STATE","_SYNC_MEDIA_AND_PLAYER_STATE","timeline","bestMatch","SYNC_PLAYER_STATE","_SYNC_PLAYER_STATE","PLAY_MEDIA_AND_SYNC_TIME","mediaIndex","machineIdentifier","REQUEST_ALLOW_NOTIFICATIONS","CHANGE_NOTIFICATIONS_ENABLED","enabled","SEND_SYNC_FLEXIBILITY_UPDATE","UPDATE_SYNC_FLEXIBILITY","IS_IN_ROOM","KICK_USER","ctx","DISCONNECT_AND_NAVIGATE_HOME","eventhandlers","socketId","messagesUserCache","messages","serversHealth","syncCancelToken","isInRoom","upnextTimeoutId","upNextTriggered","areNotificationsEnabled","areSoundNotificationsEnabled","SET_USERS","SET_ROOM","SET_IS_PARTY_PAUSING_ENABLED","isEnabled","SET_IS_AUTO_HOST_ENABLED","ADD_MESSAGE","CLEAR_MESSAGES","SET_SERVERS_HEALTH","healths","SET_SERVER","SET_SYNC_CANCEL_TOKEN","SET_IS_IN_ROOM","SET_SOCKET_ID","SET_USER","Vue","set","SET_MESSAGES_USER_CACHE","SET_MESSAGES_USER_CACHE_USER","SET_HOST_ID","DELETE_USER","delete","SET_USER_PLAYER_STATE","SET_USER_MEDIA","SET_USER_SYNC_FLEXIBILITY","SET_UPNEXT_TIMEOUT_ID","SET_UP_NEXT_TRIGGERED","triggered","SET_ARE_NOTIFICATIONS_ENABLED","SET_ARE_SOUND_NOTIFICATIONS_ENABLED","loadToNumber","healthScore","health","GET_USERS","GET_MESSAGES","rootState","default_party_pause_enabled","default_auto_host_enabled","GET_SERVERS_HEALTH","GET_SERVER_HEALTH","GET_SERVER_HEALTH_SCORES","GET_BEST_SERVER","reduce","prev","curr","default_are_notification_enabled","default_are_sound_notification_enabled","namespaced","mutations","actions","autoplay","clientPollInterval","syncMode","customServerUrl","slPlayerQuality","slPlayerVolume","slPlayerForceTranscode","altUsername","autoSkipIntro","SET_AUTOPLAY","SET_SLPLAYERFORCETRANSCODE","force","SET_CLIENTPOLLINTERVAL","interval","SET_SYNCFLEXIBILITY","flexibility","SET_SYNCMODE","SET_ALTUSERNAME","alt","SET_CUSTOM_SERVER_URL","SET_SLPLAYERQUALITY","quality","SET_SLPLAYERVOLUME","SET_AUTO_SKIP_INTRO","autoSkip","GET_AUTOPLAY","default_slplayer_autoplay","GET_CLIENTPOLLINTERVAL","default_client_poll_interval","GET_SYNCMODE","default_sync_mode","GET_SYNCFLEXIBILITY","default_sync_flexability","GET_SLPLAYERQUALITY","default_slplayer_quality","GET_SLPLAYERVOLUME","default_slplayer_volume","GET_SLPLAYERFORCETRANSCODE","default_slplayer_force_transcode","GET_ALTUSERNAME","GET_AUTO_SKIP_INTRO","default_auto_skip_intro","any","val","reasons","firstResolved","difference","arrays","a","b","includes","intersection","randomInt","lower","min","upper","floor","random","FETCH_PLEX_INIT_AUTH","strong","method","GET_PLEX_INITIAL_AUTH_PARAMS","REQUEST_PLEX_AUTH_TOKEN","authToken","FETCH_PLEX_USER","GET_PLEX_BASE_PARAMS","includeSubscriptions","includeProviders","includeSettings","includeSharedSettings","_FETCH_PLEX_DEVICES","areDevicesCached","oldClientIds","clientId","oldServersIds","devices","includeHttps","includeRelay","device","provides","indexOf","chosenConnection","connections","accessToken","libraries","clientIdentifier","manualConnection","staleClientIds","forEach","staleServerIds","serverId","FETCH_PLEX_DEVICES","GET_DEVICE_FETCH_PROMISE","fetchPromise","FETCH_PLEX_DEVICES_IF_NEEDED","TEST_PLEX_CONNECTION","connection","uri","FIND_WORKING_CONNECTION","workingConnection","promiseutils","FIND_WORKING_CONNECTION_PREFERRED","nonRelayConnections","relay","secureConnections","protocol","conn","insecureConnections","relayConnections","relayConnection","deviceFetchPromise","plexAuthToken","SET_ARE_DEVICES_CACHED","cached","SET_DEVICE_FETCH_PROMISE","SET_PLEX_USER","SET_PLEX_AUTH_TOKEN","capitalizeFirstLetter","string","toUpperCase","IS_UNAUTHORIZED","GET_PLEX_AUTH_TOKEN","IS_USER_AUTHORIZED","GET_PLEX_DEVICE_NAME","GET_PLEX_PRODUCT_HEADER","GET_PLEX_DEVICE_DEVICE_HEADER","os","GET_PLEX_DEVICE_NAME_HEADER","GET_PLEX_PLATFORM_HEADER","GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER","screen","availWidth","availHeight","width","height","GET_CLIENT_IDENTIFIER","GET_PLEX_TOKEN_PARAMS","GET_PLEX_AUTH_URL","urlParams","clientID","GET_PLEX_USER","IS_AUTHENTICATION_TYPE_NONE","IS_PLEX_USER_AUTHORIZED","authentication","email","authorized","mechanism","FIND_AND_SET_CONNECTION","FIND_CONNECTION","GET_PLEX_CLIENT","combinedSignal","signalRace","TEST_PLEX_CLIENT_CONNECTION","wait","PLAY_MEDIA","ratingKey","GET_CHOSEN_CLIENT_ID","round","commandId","GET_COMMAND_ID","address","port","containerKey","GET_ACTIVE_PLAY_QUEUE","playQueueID","RESERVE_COMMAND_ID","SEND_CLIENT_REQUEST_WITH_URI","commandID","SEND_CLIENT_REQUEST","SEND_CHOSEN_CLIENT_REQUEST","FETCH_CHOSEN_CLIENT_TIMELINE","startedAt","videoTimeline","MediaContainer","Timeline","find","parseInt","playQueueItemID","UPDATE_PLEX_CLIENT_TIMELINE","GET_PLEX_CLIENT_TIMELINE","GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM","abs","GET_ADJUSTED_PLEX_CLIENT_POLL_DATA","plex_client_time_delta_state_change_threshold","GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER","serverName","GET_ACTIVE_SERVER_ID","contentTitleUtils","GET_ACTIVE_MEDIA_METADATA","POLL_PLEX_CLIENT","currentCommandId","GET_LAST_PLAY_MEDIA_COMMAND_ID","FETCH_TIMELINE_POLL_DATA_CACHE","FETCH_TIMELINE_POLL_DATA","FETCH_JOIN_PLAYER_DATA","GET_ACTIVE_MEDIA_POLL_METADATA","GET_CHOSEN_CLIENT","UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID","GET_PLEX_CLIENT_TIMELINE_COMMAND_ID","SYNC","playerPollData","absDifference","paused_sync_flexibility","GET_LATENCY","slplayer_soft_seek_threshold","PRESS_PLAY","PRESS_PAUSE","PRESS_STOP","SEEK_TO","seekToMs","SKIP_AHEAD","skip_ahead_time","elapsed","delay","UPDATE_ACTIVE_PLAY_QUEUE","UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM","FETCH_METADATA_OF_PLAY_QUEUE_ITEM","playQueueItem","source","regex","match","PLAY_NEXT","viewOffset","START_CLIENT_POLLER_IF_NEEDED","GET_CLIENT_POLLER_CANCEL_TOKEN","main","CANCEL_CLIENT_POLLER_IF_NEEDED","RELOAD_ACTIVE_MEDIA_METADATA","clients","platform","labels","lastSeenAt","toISOString","chosenClientId","activeMediaMetadata","activeServerId","activePlayQueue","activePlayQueueMachineIdentifier","plexClientTimeline","plexClientTimelineCommmandId","previousSyncTimelineCommandId","clientPollerCancelToken","lastPlayMediaCommandId","ADD_PLEX_CLIENT","client","DELETE_PLEX_CLIENT","SET_CHOSEN_CLIENT_ID","SET_PLEX_CLIENT_TIMELINE","SET_ACTIVE_MEDIA_METADATA","SET_ACTIVE_SERVER_ID","SET_COMMAND_ID","INCREMENT_COMMAND_ID","SET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID","SET_CLIENT_CHOSEN_CONNECTION","SET_PLEX_CLIENT_TIMELINE_COMMAND_ID","SET_ACTIVE_PLAY_QUEUE","queue","SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER","INCREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET","DECREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET","SET_CLIENT_POLLER_CANCEL_TOKEN","SET_LAST_PLAY_MEDIA_COMMAND_ID","SET_LATENCY","UPDATE_SLPLAYER_LAST_SEEN_TO_NOW","GET_PLEX_CLIENT_IDS","keys","GET_PLEX_CLIENT_IDS_SORTED_BY_LAST_SEEN","values","sort","localeCompare","GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID","ALREADY_SYNCED_ON_CURRENT_TIMELINE","ACTIVE_PLAY_QUEUE_NEXT_ITEM_EXISTS","size","ACTIVE_PLAY_QUEUE_PREVIOUS_ITEM_EXISTS","IS_THIS_MEDIA_PLAYING","GET_ACTIVE_MEDIA_METADATA_MARKERS","Marker","GET_ACTIVE_MEDIA_METADATA_INTRO_MARKER","marker","prefixSum","arr","x","weightedRandomChoice","choices","weights","sum","acc","el","weightsPrefixSum","rand","findIndex","scoreMedia","hostTimeline","titleScore","stringSimilarity","compareTwoStrings","parentTitleScore","grandparentTitleScore","typeScore","playQueueParams","own","includeChapters","includeMarkers","includeGeolocation","includeExternalMedia","searchHubs","FETCH_RANDOM_SECTION_ID","sectionId","GET_SERVER_LIBRARY_SIZES","FETCH_RANDOM_SERVER","GET_CONNECTABLE_SERVER_SIZES","FETCH_RANDOM_LIBRARY_ITEM","randomItemIndex","GET_SERVER_LIBRARY_SIZE","item","FETCH_RANDOM_ITEM","chosenServerId","chosenSectionId","FETCH_PLEX_SERVER","GET_PLEX_SERVER","QUERY_PLEX_SERVER","SEARCH_PLEX_SERVER","query","FETCH_PLEX_METADATA","includeConcerts","includeExtras","includeOnDeck","includePopularLeaves","includePreferences","includeStations","asyncAugmentMetadata","asyncRefreshLocalMediaAgent","asyncRefreshAnalysis","checkFiles","SEARCH_UNBLOCKED_PLEX_SERVERS","GET_UNBLOCKED_PLEX_SERVER_IDS","flatMap","FIND_BEST_MEDIA_MATCH","IS_PLEX_SERVER_UNBLOCKED","bestResult","score","current","FETCH_ON_DECK","FETCH_ALL_LIBRARIES","Directory","library","FETCH_RECENTLY_ADDED_MEDIA","FETCH_CHILDREN_CONTAINER","excludeAllLeaves","child","librarySectionID","FETCH_MEDIA_CHILDREN","FETCH_RELATED","count","Hub","excludeFields","FETCH_LIBRARY_ALL","includeCollections","includeAdvanced","includeMeta","FETCH_LIBRARY_CONTENTS","FETCH_LIBRARY_SIZE","totalSize","CREATE_PLAY_QUEUE","continuous","repeat","FETCH_PLAY_QUEUE","MARK_WATCHED","identifier","UPDATE_STREAM","SET_MEDIA_AS_BACKGROUND","GET_MEDIA_BACKGROUND_URL","FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE","SEARCH_PLEX_SERVER_HUB","extra","lastServerId","blockedServerIds","SET_LAST_SERVER_ID","ADD_PLEX_SERVER","DELETE_PLEX_SERVER","SET_BLOCKED_SERVER_IDS","blockedIds","GET_PLEX_SERVERS","GET_PLEX_SERVER_IDS","GET_BLOCKED_SERVER_IDS","GET_CONNECTABLE_PLEX_SERVER_IDS","GET_LAST_SERVER_ID","GET_LAST_SERVER","DOES_USER_HAVE_AUTHORIZED_SERVER","GET_MEDIA_IMAGE_URL","mediaUrl","blur","upscale","minSize","art","GET_SERVER_SIZE","Deferred","res","rej","freeze","makeReaderDecoder","encoding","reader","decoder","TextDecoder","ignoreBOM","readAndDecode","done","read","decode","stream","fetchLineGenerator","readerDecoder","buffer","firstNewlineIndex","substring","substr","extractValue","nextPromise","resiliantStreamFactory","asyncGenerator","nextLine","next","VideoClock","constructor","video","autoClock","this","_autoClock","seeking","setRate","enable","disable","toggle","setEnabled","listener","videoClock","subtitleRenderer","assAbortController","handleStreamError","assPromise","CACHE_ORIGINAL_SUBTITLE_RESOLUTION","GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE","GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE","ass","properties","resolutionX","resolutionY","SYNCHRONIZE_SUBTITLE_CLOCK","GET_OR_MAKE_VIDEO_CLOCK","libjass","renderers","AutoClock","GET_SUBTITLE_OFFSET","PUBLISH_SUBTITLE_POSITION","styles","_alignment","GET_SUBTITLE_POSITION","PUBLISH_SUBTITLE_COLOR","defaultStyle","_primaryColor","hexToLibjassColor","GET_SUBTITLE_COLOR","_outlineColor","getBestOutlineColor","PUBLISH_SUBTITLE_SIZE","assProperties","GET_SUBTITLE_SIZE","RERENDER_SUBTITLE_CONTAINER","bottomOffset","ratio","subsWrapperWidth","subsWrapperHeight","subsWrapperLeft","subsWrapperTop","resize","DESTROY_ASS","_ass","_dialogues","_attachments","MAKE_ASS","GET_SUBTITLE_BASE_URL","GET_DECISION_AND_START_PARAMS","useSrtParser","CAN_DIRECT_PLAY_SUBTITLES","GET_SUBTITLE_STREAM","codec","GET_SELECTED_SUBTITLE_STREAM","parser","SrtStreamParser","StreamParser","minimalASS","INIT_SUBTITLE_RENDERER","WebRenderer","subtitleSettings","libjassSubsWrapper","SET_SUBTITLE_URL","DESTROY_SUBTITLES","_manualClock","_eventListeners","clear","remove","CHANGE_SUBTITLE_COLOR","CHANGE_SUBTITLE_POSITION","position","CHANGE_SUBTITLE_SIZE","CHANGE_SUBTITLE_OFFSET","offsetIncrement","MAKE_TIMELINE_PARAMS","GET_PLAYER_STATE","hasMDE","GET_X_PLEX_SESSION_ID","GET_PART_PARAMS","FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK","GET_MASK_PLAYER_STATE","GET_OFFSET_MS","SEND_PLEX_DECISION_REQUEST","GET_DECISION_URL","CHANGE_MAX_VIDEO_BITRATE","bitrate","CHANGE_AUDIO_STREAM","audioStreamID","GET_PART_URL","CHANGE_SUBTITLE_STREAM","subtitleStreamID","CHANGE_MEDIA_INDEX","UPDATE_PLAYER_SRC_AND_KEEP_TIME","CHANGE_SUBTITLES","IS_USING_NATIVE_SUBTITLES","CHANGE_PLAYER_SRC","GET_FORCE_TRANSCODE_RETRY","GET_FORCE_TRANSCODE","SEND_PLEX_TIMELINE_UPDATE","extraParams","GET_TIMELINE_URL","HANDLE_PLAYER_PLAYING","HANDLE_PLAYER_PAUSE","GET_PLAYER_DESTROY_CANCEL_TOKEN","HANDLE_PLAYER_BUFFERING","buffering","HANDLE_PLAYER_VOLUME_CHANGE","HANDLE_PLAYER_CLICK","classList","contains","HANDLE_SEEKING","HANDLE_SEEKED","HANDLE_PICTURE_IN_PICTURE_CHANGE","pictureInPictureElement","IS_IN_PICTURE_IN_PICTURE","HANDLE_ERROR","SOFT_SEEK","PROCESS_STATE_UPDATE_ON_PLAYER_EVENT","SPEED_SEEK","currentTimeMs","sign","slplayer_speed_sync_rate","timeUntilSynced","aborted","NORMAL_SEEK","timeoutToken","slplayer_seek_timeout","anySignal","SPEED_OR_NORMAL_SEEK","slplayer_speed_sync_max_diff","START_PERIODIC_PLEX_TIMELINE_UPDATE","slplayer_plex_timeline_update_interval","START_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL","setInterval","slplayer_controls_visible_checker_interval","CHANGE_PLAYER_STATE","plexTimelineUpdatePromise","LOAD_PLAYER_SRC","GET_SRC_URL","NAVIGATE_AND_INITIALIZE_PLAYER","deferred","INIT_PLAYER_STATE","GET_PLAYER_INITIALIZED_DEFERRED_PROMISE","CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE","GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN","DESTROY_PLAYER_STATE","REGISTER_PLAYER_EVENTS","bufferingListener","clickListener","errorListener","UNREGISTER_PLAYER_EVENTS","GET_BUFFERING_EVENT_LISTENER","GET_CLICK_EVENT_LISTENER","GET_ERROR_EVENT_LISTENER","PLAY_PAUSE_VIDEO","SEND_PARTY_PLAY_PAUSE","PLAY_PREVIOUS","PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM","continuing","SKIP_INTRO","introEnd","endTimeOffset","subtitleActions","session","xplexsessionId","plexDecision","offsetMs","playerControlsShown","playerControlsShownInterval","bufferingEventListener","clickEventListener","errorEventListener","plexTimelineUpdaterCancelToken","playerDestroyCancelToken","isPlayerInitialized","playerInitializedDeferredPromise","maskPlayerState","isInPictureInPicture","originalSubtitleResolutionXCache","originalSubtitleResolutionYCache","subtitleSize","subtitleSizes","Normal","subtitlePosition","subtitlePositions","Bottom","subtitleColor","subtitleColors","White","subtitleOffset","streamingProtocol","forceTranscodeRetry","SET_PLAYER_STATE","SET_SESSION","SET_OFFSET_MS","SET_MEDIA_INDEX","SET_PLEX_DECISION","decision","UPDATE_PLAYER_CONTROLS_SHOWN","shown","SET_PLAYER_CONTROLS_SHOWN_INTERVAL","STOP_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL","clearInterval","SET_BUFFERING_EVENT_LISTENER","SET_CLICK_EVENT_LISTENER","SET_ERROR_EVENT_LISTENER","SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN","SET_PLAYER_DESTROY_CANCEL_TOKEN","SET_IS_PLAYER_INITIALIZED","isInitialized","SET_PLAYER_INITIALIZED_DEFERRED_PROMISE","SET_MASK_PLAYER_STATE","mask","SET_IS_IN_PICTURE_IN_PICTURE","isIn","SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE","resolution","SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE","SET_SUBTITLE_SIZE","SET_SUBTITLE_POSITION","SET_SUBTITLE_COLOR","SET_SUBTITLE_OFFSET","SET_STREAMING_PROTOCOL","SET_FORCE_TRANSCODE_RETRY","h264Profiles","unknown","simple","high","422","high10","444","extended","scalablebase","scalablehigh","multiviewhigh","stereohigh","constrainedbase","ucconstrainedhigh","ucscalableconstrainedbase","ucscalableconstrainedhigh","getH264Mime","videoProfile","level","profile","toLowerCase","ppcc","padStart","padEnd","ee","isVideoSupported","MediaSource","isTypeSupported","aacProfiles","lc","ssr","ltp","sbr","scalable","ps","getAACMime","aacProfileNum","isAudioSupported","supportedContainers","isContainerSupported","container","makeQualityTemplate","label","maxVideoBitrate","qualities","buggyChromeBitrate","GET_PLEX_DECISION","IS_IN_BUGGY_CHROME_STATE","Media","GET_MEDIA_INDEX","GET_STREAMING_PROTOCOL","GET_PLEX_SERVER_ACCESS_TOKEN","GET_PLEX_SERVER_URL","GET_PLEX_SERVER_LOCATION","publicAddressMatches","GET_PART_ID","Part","GET_DECISION_PART","IS_DECISION_DIRECT_PLAY","GET_SRC_PATH","protocolExtension","GET_PART","GET_STREAMS","Stream","streamType","selected","SHOULD_FORCE_BURN_SUBTITLES","CAN_DIRECT_PLAY","videoStream","audioStreams","anyAudioSupported","some","GET_DECISION_STREAMS","GET_SUBTITLE_STREAMS","Array","of","concat","displayTitle","GET_AUDIO_STREAMS","GET_MEDIA_LIST","videoResolution","GET_QUALITIES","GET_AUDIO_STREAM_ID","selectedAudioStream","GET_SUBTITLE_STREAM_ID","GET_RELATIVE_THUMB_URL","grandparentThumb","GET_THUMB_URL","GET_TITLE","contenttitleutils","GET_SECONDARY_TITLE","GET_PLEX_PROFILE_EXTRAS","GET_SUBTITLE_PARAMS","subtitles","advancedSubtitles","partIndex","fastSeek","directPlay","directStream","audioBoost","addDebugOverlay","autoAdjustQuality","directStreamAudio","mediaBufferSize","ARE_PLAYER_CONTROLS_SHOWN","IS_PLAYER_INITIALIZED","burn","IS_SUBTITLE_STREAM_NATIVE_SIDECAR","file","synclounge","plex","plexclients","plexservers","settings","slplayer","use","Vuex","persistedState","createPersistedState","paths","store","Store","strict","plugins","preciseOutlines","Top","Middle","Tiny","Small","Large","Huge","Yellow","Black","Cyan","Blue","Green","Magenta","Red","Gray","relativeLuminanceW3C","R8bit","G8bit","B8bit","RsRGB","GsRGB","BsRGB","R","G","B","L","red","green","blue","aRgbHex","hex","parts","Color","streamingProtocols","dash","hls","Vuetify","icons","iconfont","theme","dark","customProperties","themes","primary","render","_vm","_h","$createElement","_c","_self","attrs","staticStyle","scopedSlots","_u","fn","proxy","smallLogoMedia","staticClass","_e","$event","copyToClipboard","inviteUrl","_v","toggleFullScreen","_l","_s","ref","_g","_b","bgHeight","backgroundLoad","backgroundError","sheetColor","staticRenderFns","components","TheSidebarLeft","TheUpnextDialog","TheNowPlayingChip","DonateDialog","TheAppBarCrumbs","mixins","numBackgroundErrors","computed","$route","meta","showAppBarExtension","$vuetify","breakpoint","thresholds","xs","application","top","invitePart","$router","watch","redirectToMediaPage","onFullScreenChange","methods","numBackgroundFailures","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","component","VApp","VAppBar","VAppBarNavIcon","VBtn","VCol","VContainer","VIcon","VImg","VMain","VProgressCircular","VRow","VSheet","VSnackbar","VSpacer","VToolbarItems","VToolbar","Router","searchBar","rightSidebar","rightSidebarButton","routes","requiresAuth","redirect","requiresNoAuth","requiresPlexToken","props","redirectAfterAuth","protected","appBarView","VueChatScroll","errorHandler","isEqualIfExpectedTrue","expected","got","doesServerMatch","router","beforeEach","to","from","autojoin","matched","record","fullPath","vuetify","h","App","$mount","contentLink","player","overlay","newPlayer","newOverlay","$store","cssText","isString","String","legacyCopy","JSON","stringify","textarea","style","navigator","userAgent","contentEditable","readOnly","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","setSelectionRange","select","execCommand","clipboard","writeText"],"mappings":"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","file":"js/app-legacy.97bb7d54.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \"-legacy.\" + {\"chunk-0c5f3f74\":\"edac0611\",\"chunk-2d0c8842\":\"8575d0ae\",\"chunk-2e970619\":\"6b0cbca0\",\"chunk-302d318c\":\"c4771f26\",\"chunk-151b74e4\":\"139deb66\",\"chunk-25fafa0f\":\"9424cdd9\",\"chunk-5a6d5fba\":\"92614d03\",\"chunk-f1283e9c\":\"76481e43\",\"chunk-dd69c2f2\":\"ae1ed097\",\"chunk-7ea287e8\":\"52efb18e\",\"chunk-b26fb844\":\"2ae4e9d8\",\"chunk-84836d94\":\"0c4b8b6f\",\"chunk-2d0ba926\":\"40cc4906\",\"chunk-2d0c7b5d\":\"6061f5c4\",\"chunk-2d0c9594\":\"7df27969\",\"chunk-2d213179\":\"c1c00c48\",\"chunk-2d222010\":\"b42b526b\",\"chunk-61fa40e0\":\"f1305b9a\",\"chunk-6459bb05\":\"77da16cd\",\"chunk-6890e64e\":\"dfa71331\",\"chunk-784fb0b8\":\"ff794876\",\"chunk-91dca3f0\":\"4c0d7103\",\"chunk-039f81d5\":\"a5d6e818\",\"chunk-966029d8\":\"b4850594\",\"chunk-aa532ff8\":\"a124223f\",\"chunk-28086afd\":\"4279f236\",\"chunk-7d3c7b07\":\"cc59877d\",\"chunk-b7cda9fa\":\"fbeb3503\",\"chunk-b8319b1e\":\"91eaf2ca\",\"chunk-692a6e88\":\"4ca1210e\",\"chunk-d79830a2\":\"b889e251\",\"chunk-2527183e\":\"50a423ef\",\"chunk-4c36f41e\":\"874e3efc\",\"chunk-2d21da11\":\"5043fee1\",\"chunk-6996c7bd\":\"6ca23327\",\"chunk-0a2cc99c\":\"7e58c409\",\"chunk-2662bc6a\":\"fe857fa3\",\"chunk-2d0baccc\":\"cb9565b4\",\"chunk-2d0ea162\":\"e96dda62\",\"chunk-62684a9c\":\"9e499094\",\"chunk-2d0f0840\":\"f05b3ec7\",\"chunk-2d0e9600\":\"eb9d1042\",\"chunk-34b3058d\":\"dbe8ef01\",\"chunk-4677f8af\":\"0376acd3\",\"chunk-5ba7f638\":\"f9c45669\",\"chunk-791a9f1d\":\"9b52fcac\",\"chunk-64f970f0\":\"c61d4c01\",\"chunk-235f86fc\":\"13b84c8f\",\"chunk-eb8e3864\":\"a653eddc\",\"chunk-0f07cb5d\":\"b4c01bdf\",\"chunk-2d0bdbb9\":\"da447ae6\",\"chunk-41b9c3f9\":\"d4cb5118\",\"chunk-1d4021b4\":\"4a70edc2\",\"chunk-52ac3bfe\":\"b4a4e640\",\"chunk-fff59462\":\"b38dbcfa\",\"chunk-67ac9a98\":\"c4451138\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0c5f3f74\":1,\"chunk-2e970619\":1,\"chunk-302d318c\":1,\"chunk-151b74e4\":1,\"chunk-25fafa0f\":1,\"chunk-5a6d5fba\":1,\"chunk-f1283e9c\":1,\"chunk-dd69c2f2\":1,\"chunk-7ea287e8\":1,\"chunk-b26fb844\":1,\"chunk-84836d94\":1,\"chunk-6459bb05\":1,\"chunk-784fb0b8\":1,\"chunk-039f81d5\":1,\"chunk-966029d8\":1,\"chunk-aa532ff8\":1,\"chunk-28086afd\":1,\"chunk-7d3c7b07\":1,\"chunk-b7cda9fa\":1,\"chunk-b8319b1e\":1,\"chunk-692a6e88\":1,\"chunk-d79830a2\":1,\"chunk-2527183e\":1,\"chunk-4c36f41e\":1,\"chunk-6996c7bd\":1,\"chunk-0a2cc99c\":1,\"chunk-2662bc6a\":1,\"chunk-62684a9c\":1,\"chunk-34b3058d\":1,\"chunk-4677f8af\":1,\"chunk-5ba7f638\":1,\"chunk-791a9f1d\":1,\"chunk-64f970f0\":1,\"chunk-235f86fc\":1,\"chunk-eb8e3864\":1,\"chunk-0f07cb5d\":1,\"chunk-41b9c3f9\":1,\"chunk-1d4021b4\":1,\"chunk-52ac3bfe\":1,\"chunk-fff59462\":1,\"chunk-67ac9a98\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0c5f3f74\":\"81b2a921\",\"chunk-2d0c8842\":\"31d6cfe0\",\"chunk-2e970619\":\"ef1bbbac\",\"chunk-302d318c\":\"ef1bbbac\",\"chunk-151b74e4\":\"fd56734d\",\"chunk-25fafa0f\":\"db1478cd\",\"chunk-5a6d5fba\":\"dff54012\",\"chunk-f1283e9c\":\"babf8163\",\"chunk-dd69c2f2\":\"48590adb\",\"chunk-7ea287e8\":\"b3bc8438\",\"chunk-b26fb844\":\"82e5f3f2\",\"chunk-84836d94\":\"6d0822e7\",\"chunk-2d0ba926\":\"31d6cfe0\",\"chunk-2d0c7b5d\":\"31d6cfe0\",\"chunk-2d0c9594\":\"31d6cfe0\",\"chunk-2d213179\":\"31d6cfe0\",\"chunk-2d222010\":\"31d6cfe0\",\"chunk-61fa40e0\":\"31d6cfe0\",\"chunk-6459bb05\":\"e0fe7b8a\",\"chunk-6890e64e\":\"31d6cfe0\",\"chunk-784fb0b8\":\"5d57faa0\",\"chunk-91dca3f0\":\"31d6cfe0\",\"chunk-039f81d5\":\"fdbb189c\",\"chunk-966029d8\":\"fdddcb9e\",\"chunk-aa532ff8\":\"7d887a01\",\"chunk-28086afd\":\"672f62b2\",\"chunk-7d3c7b07\":\"05026a29\",\"chunk-b7cda9fa\":\"f528ff13\",\"chunk-b8319b1e\":\"ca2c4df4\",\"chunk-692a6e88\":\"51b275e5\",\"chunk-d79830a2\":\"8eac1839\",\"chunk-2527183e\":\"404be123\",\"chunk-4c36f41e\":\"f831ae51\",\"chunk-2d21da11\":\"31d6cfe0\",\"chunk-6996c7bd\":\"74c61c5f\",\"chunk-0a2cc99c\":\"3b5bfe6e\",\"chunk-2662bc6a\":\"f831ae51\",\"chunk-2d0baccc\":\"31d6cfe0\",\"chunk-2d0ea162\":\"31d6cfe0\",\"chunk-62684a9c\":\"698e6059\",\"chunk-2d0f0840\":\"31d6cfe0\",\"chunk-2d0e9600\":\"31d6cfe0\",\"chunk-34b3058d\":\"5c8076a7\",\"chunk-4677f8af\":\"a075366f\",\"chunk-5ba7f638\":\"53b022d7\",\"chunk-791a9f1d\":\"e02cf3b7\",\"chunk-64f970f0\":\"c5a96224\",\"chunk-235f86fc\":\"fdddcb9e\",\"chunk-eb8e3864\":\"8a0da11f\",\"chunk-0f07cb5d\":\"23b9284a\",\"chunk-2d0bdbb9\":\"31d6cfe0\",\"chunk-41b9c3f9\":\"8a0da11f\",\"chunk-1d4021b4\":\"52d61794\",\"chunk-52ac3bfe\":\"6961f5c7\",\"chunk-fff59462\":\"fd2ec502\",\"chunk-67ac9a98\":\"6961f5c7\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// References:\n// https://crypto.stackexchange.com/questions/8826/map-bytes-to-number\n// https://crypto.stackexchange.com/a/5721\n// https://dimitri.xyz/random-ints-from-random-bits/\n\nconst MAX_CHARSET_SIZE = 0x10000;\nconst alphanumericCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst max = MAX_CHARSET_SIZE - (MAX_CHARSET_SIZE % alphanumericCharacters.length);\n\nexport const randomAlphanumericString = (length) => {\n  let randomString = '';\n  const numUint16Elements = Math.ceil(1.1 * length);\n\n  while (randomString.length < length) {\n    const array = new Uint16Array(numUint16Elements);\n    window.crypto.getRandomValues(array);\n\n    for (let i = 0; i < array.length && randomString.length < length; i += 1) {\n      const digit = array[i];\n      if (digit <= max) {\n        const newChar = alphanumericCharacters[digit % alphanumericCharacters.length];\n        randomString += newChar;\n      }\n    }\n  }\n\n  return randomString;\n};\n\nconst roomIdLength = 5;\n\nexport const getRandomRoomId = () => randomAlphanumericString(roomIdLength);\n\nconst plexIdLength = 24;\n\nexport const getRandomPlexId = () => randomAlphanumericString(plexIdLength);\n","const reasonWord = {\n  section: 'in',\n  actor: 'with',\n  director: 'by',\n};\n\nexport default {\n  getTitle: (metadata, fullTitle) => {\n    switch (metadata.type) {\n      case 'movie':\n        return metadata.title;\n\n      case 'show':\n        return metadata.title;\n\n      case 'season':\n        return fullTitle\n          ? metadata.parentTitle\n          : metadata.title;\n\n      case 'episode':\n        return fullTitle\n          ? metadata.title\n          : metadata.grandparentTitle;\n\n      default:\n        return metadata.title;\n    }\n  },\n\n  getSecondaryTitle: (metadata, fullTitle) => {\n    switch (metadata.type) {\n      case 'movie':\n        return metadata.year;\n\n      case 'show':\n        return `${metadata.childCount} ${metadata.childCount === 1 ? 'season' : 'seasons'}`;\n\n      case 'season':\n        return fullTitle\n          ? metadata.title\n          : `${metadata.leafCount} episodes`;\n\n      case 'episode':\n        return fullTitle\n          ? `Episode ${metadata.index}`\n          : `S${\n            metadata.parentIndex\n          }E${\n            metadata.index\n          } - ${\n            metadata.title}`;\n\n      default:\n        return metadata.title;\n    }\n  },\n\n  getCombinedTitle: ({\n    type, grandparentTitle, title, parentIndex, index,\n  }) => {\n    switch (type) {\n      case 'episode': {\n        return `${grandparentTitle} - ${title} S${parentIndex}-E${index}`;\n      }\n\n      default: {\n        return title;\n      }\n    }\n  },\n\n  getReasonTitle: ({ reason, reasonTitle }) => `${reasonWord[reason]} ${reasonTitle}`,\n};\n","const linkWithRoom = (getters, { params, ...rest }) => ({\n  ...rest,\n  params: {\n    ...params,\n    room: getters['synclounge/GET_ROOM'],\n    ...(getters['synclounge/GET_SERVER'] && {\n      server: getters['synclounge/GET_SERVER'],\n    }),\n  },\n});\n\nexport default linkWithRoom;\n","module.exports = __webpack_public_path__ + \"img/logo-long-light.70d02a5f.png\";","import {\n  getPlayer, setPlayer, getOverlay, setOverlay,\n} from './state';\n\n// eslint-disable-next-line no-underscore-dangle\nexport const areControlsShown = () => !getOverlay() || (getOverlay()?.getControls().enabled_\n    && (getOverlay()?.getControls().getControlsContainer().getAttribute('shown') != null\n    || getOverlay()?.getControls().getControlsContainer().getAttribute('casting') != null));\n\nexport const getControlsOffset = (fallbackHeight) => (getPlayer()?.getMediaElement()?.offsetHeight\n  || fallbackHeight) * 0.025 + 48 || 0;\n\nexport const getControlsOffsetWithVisibility = (fallbackHeight) => (areControlsShown()\n  ? getControlsOffset(fallbackHeight)\n  : 0);\n\nexport const isPaused = () => getPlayer()?.getMediaElement()?.paused;\n\nexport const isPresentationPaused = () => isPaused()\n  && !getOverlay().getControls().isSeeking();\n\nexport const isBuffering = () => getPlayer()?.isBuffering();\n\nexport const isPlaying = () => !isPaused() && !isBuffering();\n\nexport const getCurrentTime = () => getPlayer()?.getMediaElement().currentTime;\n\nexport const getCurrentTimeMs = () => getPlayer()?.getMediaElement()\n  .currentTime * 1000;\n\nexport const getDurationMs = () => getPlayer().getMediaElement().duration * 1000;\n\nexport const getVolume = () => getPlayer().getMediaElement().volume;\n\nexport const setVolume = (volume) => {\n  getPlayer().getMediaElement().volume = volume;\n};\n\nexport const play = () => getPlayer().getMediaElement().play();\nexport const pause = () => getPlayer().getMediaElement().pause();\n\nexport const isTimeInBufferedRange = (timeMs) => {\n  const bufferedTimeRange = getPlayer().getMediaElement().buffered;\n\n  // There can be multiple ranges\n  for (let i = 0; i < bufferedTimeRange.length; i += 1) {\n    if (timeMs >= bufferedTimeRange.start(i) * 1000 && timeMs <= bufferedTimeRange.end(i) * 1000) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const isMediaElementAttached = () => getPlayer()?.getMediaElement != null;\n\nexport const addEventListener = (...args) => getPlayer().addEventListener(...args);\n\nexport const removeEventListener = (...args) => getPlayer().removeEventListener(...args);\n\nconst addMediaElementEventListener = (...args) => getPlayer().getMediaElement()\n  .addEventListener(...args);\n\nconst removeMediaElementEventListener = (...args) => getPlayer().getMediaElement()\n  .removeEventListener(...args);\n\n// TODO: potentialy make cancellable\nexport const waitForMediaElementEvent = ({ signal, type }) => new Promise((resolve, reject) => {\n  signal.pr.catch((e) => {\n    removeMediaElementEventListener(type, resolve);\n    reject(e);\n  });\n\n  addMediaElementEventListener(type, resolve, { once: true });\n});\n\nexport const cancelTrickPlay = () => getPlayer().cancelTrickPlay();\n\nexport const load = (...args) => getPlayer().load(...args);\n\nexport const unload = (...args) => getPlayer().unload(...args);\n\nexport const getPlaybackRate = () => getPlayer().getPlaybackRate();\n\nexport const setPlaybackRate = (rate) => {\n  getPlayer().getMediaElement().playbackRate = rate;\n};\n\nexport const setCurrentTimeMs = (timeMs) => {\n  getPlayer().getMediaElement().currentTime = timeMs / 1000;\n};\n\nexport const getSmallPlayButton = () => getOverlay().getControls().getControlsContainer()\n  .getElementsByClassName('shaka-small-play-button')[0];\n\nexport const getBigPlayButton = () => getOverlay().getControls().getControlsContainer()\n  .getElementsByClassName('shaka-play-button')[0];\n\nexport const getDimensions = () => {\n  const {\n    videoWidth, videoHeight, offsetWidth, offsetHeight,\n  } = getPlayer().getMediaElement();\n\n  return {\n    videoWidth, videoHeight, offsetWidth, offsetHeight,\n  };\n};\n\nexport const insertElementBeforeVideo = (element) => {\n  const parent = getPlayer().getMediaElement().parentNode;\n\n  parent.insertBefore(\n    element,\n    getPlayer().getMediaElement(),\n  );\n};\n\nexport const getMediaElement = () => getPlayer().getMediaElement();\n\nexport const destroy = async () => {\n  const savedOverlay = getOverlay();\n  setPlayer(null);\n  setOverlay(null);\n  await savedOverlay.destroy();\n};\n","export const makeUrl = (url, params) => {\n  if (!params) {\n    return url;\n  }\n\n  return `${url}?${new URLSearchParams(params)}`;\n};\n\nconst safeFetch = async (...args) => {\n  const response = await fetch(...args);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response;\n};\n\nexport const queryFetch = (url, queryParams, init) => safeFetch(\n  makeUrl(url, queryParams),\n  init,\n);\n\nexport const fetchText = async (...args) => {\n  const response = await queryFetch(...args);\n  return response.text();\n};\n\nexport const fetchJson = async (url, queryParams, { headers, ...rest } = {}) => {\n  const response = await queryFetch(\n    url,\n    queryParams,\n    {\n      headers: {\n        Accept: 'application/json',\n        ...headers,\n      },\n      ...rest,\n    },\n  );\n\n  return response.json();\n};\n\nexport const fetchXmlAndTransform = async (...args) => {\n  const text = await fetchText(...args);\n\n  const xmlutils = (await import('@/utils/xmlutils')).default;\n  return xmlutils.parse(text);\n};\n\nexport const fetchBodyReader = async (...args) => {\n  const response = await queryFetch(...args);\n  return response.body.getReader();\n};\n","import { fetchJson } from '@/utils/fetchutils';\n\nexport default {\n  RESET: ({ commit }) => {\n    commit('RESET');\n    commit('plex/RESET');\n    commit('plexclients/RESET');\n    commit('plexservers/RESET');\n    commit('settings/RESET');\n    commit('slplayer/RESET');\n    commit('synclounge/RESET');\n  },\n\n  DISPLAY_NOTIFICATION: ({ commit }, message) => {\n    commit('SET_SNACKBAR_MESSAGE', message);\n    commit('SET_SNACKBAR_OPEN', true);\n  },\n\n  FETCH_CONFIG: async ({ dispatch, commit }) => {\n    try {\n      const config = await fetchJson('config.json');\n      commit('SET_CONFIGURATION', config);\n    } catch (e) {\n      console.error(e);\n      await dispatch('DISPLAY_NOTIFICATION', {\n        text: 'Error fetching config',\n        color: 'error',\n      });\n    }\n  },\n\n  NAVIGATE_HOME: async ({ getters, commit }) => {\n    if (!getters.GET_NAVIGATE_HOME) {\n      commit('SET_NAVIGATE_HOME', true);\n    }\n  },\n};\n","import { detect } from 'detect-browser';\n\nconst state = () => ({\n  version: process.env.VUE_APP_VERSION,\n  repositoryUrl: 'https://github.com/synclounge/synclounge',\n  discordUrl: 'https://discord.gg/fKQB3yt',\n\n  background: null,\n  configuration: null,\n\n  isLeftSidebarOpen: false,\n  isRightSidebarOpen: true,\n\n  // This stores the postplay data and controls whether the upnext component is visible\n  upNextPostPlayData: null,\n\n  // Used to help with the crumbs\n  activeMetadata: null,\n\n  snackbarMessage: {},\n  snackbarOpen: false,\n  navigateToPlayer: false,\n  browser: detect(),\n  navigateHome: false,\n  isLibraryListView: false,\n});\n\nexport default state;\n","import stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_BACKGROUND(state, value) {\n    state.background = value;\n  },\n\n  SET_LEFT_SIDEBAR_OPEN: (state, open) => { state.isLeftSidebarOpen = open; },\n  SET_RIGHT_SIDEBAR_OPEN: (state, open) => { state.isRightSidebarOpen = open; },\n  TOGGLE_RIGHT_SIDEBAR_OPEN: (state) => { state.isRightSidebarOpen = !state.isRightSidebarOpen; },\n\n  SET_UP_NEXT_POST_PLAY_DATA: (state, data) => {\n    state.upNextPostPlayData = data;\n  },\n\n  SET_ACTIVE_METADATA: (state, metadata) => {\n    state.activeMetadata = metadata;\n  },\n\n  SET_SNACKBAR_MESSAGE: (state, message) => {\n    state.snackbarMessage = message;\n  },\n\n  SET_SNACKBAR_OPEN: (state, open) => {\n    state.snackbarOpen = open;\n  },\n\n  SET_NAVIGATE_TO_PLAYER: (state, navigate) => {\n    state.navigateToPlayer = navigate;\n  },\n\n  SET_CONFIGURATION: (state, configuration) => {\n    state.configuration = configuration;\n  },\n\n  SET_NAVIGATE_HOME: (state, navigate) => {\n    state.navigateHome = navigate;\n  },\n\n  TOGGLE_LIBRARY_LIST_VIEW: (state) => {\n    state.isLibraryListView = !state.isLibraryListView;\n  },\n};\n","export default {\n  GET_RELEASE_URL: (state) => `${state.repositoryUrl}/releases/tag/v${state.version}`,\n  GET_BACKGROUND: (state) => state.background,\n  GET_UP_NEXT_POST_PLAY_DATA: (state) => state.upNextPostPlayData,\n  GET_CONFIG: (state) => state.configuration,\n  GET_ACTIVE_METADATA: (state) => state.activeMetadata,\n  GET_SNACKBAR_MESSAGE: (state) => state.snackbarMessage,\n  GET_SNACKBAR_OPEN: (state) => state.snackbarOpen,\n  GET_NAVIGATE_TO_PLAYER: (state) => state.navigateToPlayer,\n  GET_BROWSER: (state) => state.browser,\n  GET_NAVIGATE_HOME: (state) => state.navigateHome,\n  IS_LIBRARY_LIST_VIEW: (state) => state.isLibraryListView,\n};\n","let socket = null;\n\nexport const open = async (url, options) => {\n  // Dynamically import socket.io\n  const io = await import('socket.io-client');\n\n  return new Promise(((resolve, reject) => {\n    socket = io.connect(url, options);\n\n    socket.once('connect', () => {\n      resolve(socket);\n    });\n\n    // TODO: do I need all these events?\n    socket.once('connect_error', () => {\n      reject(new Error('connect_error'));\n    });\n\n    socket.once('connect_timeout', () => {\n      reject(new Error('connect_timeout'));\n    });\n  }));\n};\n\nexport const close = () => {\n  socket.close();\n  socket = null;\n};\n\nexport const emit = ({ eventName, data }) => {\n  socket.emit(eventName, data);\n};\n\nexport const on = ({ eventName, handler }) => {\n  socket.on(eventName, handler);\n};\n\nexport const waitForEvent = (eventName) => new Promise((resolve, reject) => {\n  socket.once(eventName, (resolve));\n  socket.once('disconnect', reject);\n});\n\nexport const isConnected = () => socket?.connected;\n\nexport const getId = () => socket?.id;\n","import { emit, waitForEvent, getId } from '@/socket';\n\nexport default {\n  HANDLE_SET_PARTY_PAUSING_ENABLED: async ({ getters, dispatch, commit }, value) => {\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId: getters.GET_HOST_ID,\n      text: `Party Pausing has been turned ${value ? 'on' : 'off'}`,\n    });\n\n    commit('SET_IS_PARTY_PAUSING_ENABLED', value);\n  },\n\n  HANDLE_SET_AUTO_HOST_ENABLED: async ({ getters, dispatch, commit }, value) => {\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId: getters.GET_HOST_ID,\n      text: `Auto Host has been turned ${value ? 'on' : 'off'}`,\n    });\n\n    commit('SET_IS_AUTO_HOST_ENABLED', value);\n  },\n\n  HANDLE_USER_JOINED: async ({ commit, dispatch }, { id, ...rest }) => {\n    commit('SET_USER', {\n      id,\n      data: {\n        ...rest,\n        updatedAt: Date.now(),\n      },\n    });\n\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId: id,\n      text: `${rest.username} joined`,\n    });\n  },\n\n  HANDLE_USER_LEFT: async ({ getters, dispatch, commit }, { id, newHostId }) => {\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId: id,\n      text: `${getters.GET_USER(id).username} left the room`,\n    });\n\n    if (newHostId) {\n      await dispatch('HANDLE_NEW_HOST', newHostId);\n    }\n\n    commit('DELETE_USER', id);\n  },\n\n  HANDLE_NEW_HOST: async ({ getters, dispatch, commit }, hostId) => {\n    commit('SET_HOST_ID', hostId);\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId: hostId,\n      text: `${getters.GET_USER(hostId).username} is now the host`,\n    });\n\n    await dispatch('CANCEL_IN_PROGRESS_SYNC');\n    await dispatch('SYNC_MEDIA_AND_PLAYER_STATE');\n  },\n\n  HANDLE_DISCONNECT: async ({ dispatch }) => {\n    console.log('disconnect');\n    await dispatch('DISPLAY_NOTIFICATION', {\n      text: 'Disconnected from the SyncLounge server',\n      color: 'info',\n    }, { root: true });\n  },\n\n  HANDLE_RECONNECT: async ({ dispatch, commit }) => {\n    console.log('Rejoining');\n    await waitForEvent('slPing');\n    commit('SET_SOCKET_ID', getId());\n\n    try {\n      await dispatch('JOIN_ROOM_AND_INIT');\n    } catch (e) {\n      const text = `Error reconnecting: ${e.message}`;\n      console.error(text);\n      await dispatch('DISPLAY_NOTIFICATION', {\n        text,\n        color: 'error',\n      }, { root: true });\n      await dispatch('NAVIGATE_HOME', null, { root: true });\n    }\n  },\n\n  HANDLE_SLPING: async (context, secret) => {\n    emit({\n      eventName: 'slPong',\n      data: secret,\n    });\n  },\n\n  HANDLE_PLAYER_STATE_UPDATE: async ({ getters, dispatch, commit }, data) => {\n    commit('SET_USER_PLAYER_STATE', data);\n\n    if (data.id === getters.GET_HOST_ID) {\n      await dispatch('CANCEL_IN_PROGRESS_SYNC');\n      await dispatch('SYNC_PLAYER_STATE');\n    }\n  },\n\n  HANDLE_MEDIA_UPDATE: async ({\n    getters, dispatch, commit,\n  }, {\n    id, state, time, duration, media, makeHost,\n  }) => {\n    commit('SET_USER_PLAYER_STATE', {\n      id,\n      state,\n      time,\n      duration,\n    });\n\n    commit('SET_USER_MEDIA', {\n      id,\n      media,\n    });\n\n    if (makeHost) {\n      await dispatch('HANDLE_NEW_HOST', id);\n      return;\n    }\n\n    if (id === getters.GET_HOST_ID) {\n      await dispatch('CANCEL_IN_PROGRESS_SYNC');\n      await dispatch('SYNC_MEDIA_AND_PLAYER_STATE');\n    }\n  },\n\n  HANDLE_SYNC_FLEXIBILITY_UPDATE: ({ commit }, data) => {\n    commit('SET_USER_SYNC_FLEXIBILITY', data);\n  },\n\n  HANDLE_PARTY_PAUSE: async ({ getters, dispatch }, { senderId, isPause }) => {\n    // TODO: maybe stop it from looking at host after party pausing until host also updates or acks\n    // that it got the party pause ?\n    const text = `${getters.GET_USER(senderId).username} pressed ${isPause ? 'pause' : 'play'}`;\n    await dispatch('ADD_MESSAGE_AND_CACHE_AND_NOTIFY', {\n      senderId,\n      text,\n    });\n\n    await dispatch('DISPLAY_NOTIFICATION', {\n      text,\n      color: 'info',\n    }, { root: true });\n\n    await dispatch('CANCEL_IN_PROGRESS_SYNC');\n    if (isPause) {\n      await dispatch('plexclients/PRESS_PAUSE', null, { root: true });\n    } else {\n      await dispatch('plexclients/PRESS_PLAY', null, { root: true });\n    }\n  },\n\n  HANDLE_KICKED: async ({ dispatch }) => {\n    console.log('HANDLE_KICKED');\n    await dispatch('DISCONNECT_AND_NAVIGATE_HOME');\n  },\n};\n","export const combineUrl = (url, base) => {\n  // Make sure base ends in a /\n  const fixedBase = base.charAt(base.length - 1) === '/'\n    ? base\n    : `${base}/`;\n\n  return new URL(url, fixedBase);\n};\n\nexport const combineRelativeUrlParts = (base, path) => (!base\n  || base.charAt(base.length - 1) === '/'\n  ? `${base}${path}`\n  : `${base}/${path}`);\n","import CAF from 'caf';\nimport eventhandlers from '@/store/modules/synclounge/eventhandlers';\nimport { combineUrl, combineRelativeUrlParts } from '@/utils/combineurl';\nimport { fetchJson } from '@/utils/fetchutils';\nimport { slPlayerClientId } from '@/player/constants';\nimport {\n  open, close, on, waitForEvent, isConnected, emit,\n} from '@/socket';\nimport notificationSound from '@/assets/sounds/notification_simple-01.wav';\n\nconst notificationAudio = new Audio(notificationSound);\n\nexport default {\n  CONNECT_AND_JOIN_ROOM: async ({ dispatch }) => {\n    await dispatch('ESTABLISH_SOCKET_CONNECTION');\n    await dispatch('JOIN_ROOM_AND_INIT');\n  },\n\n  SET_AND_CONNECT_AND_JOIN_ROOM: ({ commit, dispatch }, { server, room }) => {\n    commit('SET_SERVER', server);\n    commit('SET_ROOM', room);\n    return dispatch('CONNECT_AND_JOIN_ROOM');\n  },\n\n  DISCONNECT_IF_CONNECTED: async ({ dispatch }) => {\n    if (isConnected()) {\n      await dispatch('DISCONNECT');\n    }\n  },\n\n  ESTABLISH_SOCKET_CONNECTION: async ({ getters, commit, dispatch }) => {\n    await dispatch('DISCONNECT_IF_CONNECTED');\n\n    const currentUrl = new URL(window.location.pathname, window.location.origin);\n    const properBase = new URL(getters.GET_SERVER, currentUrl.toString());\n\n    const url = combineUrl('socket.io', properBase.toString());\n    console.log('ESTABLISH_SOCKET_CONNECTION', url.toString());\n\n    const { id } = await open(url.origin, {\n      path: url.pathname,\n      transports: ['websocket', 'polling'],\n    });\n\n    commit('SET_SOCKET_ID', id);\n\n    // Wait for initial slPing\n    // Doing it this way rather than adding the normal listener because there is no guarentee on\n    // the order of event handlers so, if I did a one time listener for slping just to wait, that\n    // handler might be fired first, which means it will do stuff before actually responding to the\n    // ping(which the normal handler does). I am not very happy with this but I don't know of a easy\n    // better way atm. Maybe reactive streams in the future, but that's a bit over my head now\n    const secret = await waitForEvent('slPing');\n\n    // Explicitly handling the slping because we haven't registered the events yet\n    await dispatch('HANDLE_SLPING', secret);\n    await dispatch('ADD_EVENT_HANDLERS');\n  },\n\n  JOIN_ROOM: async ({ getters, rootGetters, dispatch }) => {\n    const joinPlayerData = await dispatch('plexclients/FETCH_JOIN_PLAYER_DATA', null,\n      { root: true });\n\n    emit({\n      eventName: 'join',\n      data: {\n        roomId: getters.GET_ROOM,\n        desiredUsername: getters.GET_DISPLAY_USERNAME,\n        desiredPartyPausingEnabled: getters.IS_PARTY_PAUSING_ENABLED,\n        desiredAutoHostEnabled: getters.IS_AUTO_HOST_ENABLED,\n        thumb: rootGetters['plex/GET_PLEX_USER'].thumb,\n        syncFlexibility: rootGetters['settings/GET_SYNCFLEXIBILITY'],\n        ...joinPlayerData,\n      },\n    });\n\n    const { success, error, ...rest } = await waitForEvent('joinResult');\n    if (!success) {\n      throw new Error(error);\n    }\n\n    return rest;\n  },\n\n  JOIN_ROOM_AND_INIT: async ({ rootGetters, dispatch, commit }) => {\n    // Note: this is also called on rejoining, so be careful not to register handlers twice\n    // or duplicate tasks\n    const {\n      user: { id, ...rest }, users, isPartyPausingEnabled, isAutoHostEnabled, hostId,\n    } = await dispatch('JOIN_ROOM');\n    const updatedAt = Date.now();\n\n    commit('SET_HOST_ID', hostId);\n\n    commit('SET_USERS', Object.fromEntries(\n      Object.entries(users).map(([socketid, data]) => ([socketid, {\n        ...data,\n        updatedAt,\n      }])),\n    ));\n\n    // Add ourselves to user list\n    commit('SET_USER', {\n      id,\n      data: {\n        ...rest,\n        thumb: rootGetters['plex/GET_PLEX_USER'].thumb,\n        media: rootGetters['plexclients/GET_ACTIVE_MEDIA_POLL_METADATA'],\n        playerProduct: rootGetters['plexclients/GET_CHOSEN_CLIENT'].product,\n        syncFlexibility: rootGetters['settings/GET_SYNCFLEXIBILITY'],\n        updatedAt,\n        ...await dispatch('plexclients/FETCH_TIMELINE_POLL_DATA_CACHE', null, { root: true }),\n      },\n    });\n\n    commit('SET_IS_PARTY_PAUSING_ENABLED', isPartyPausingEnabled);\n    commit('SET_IS_AUTO_HOST_ENABLED', isAutoHostEnabled);\n    commit('SET_IS_IN_ROOM', true);\n\n    // Purposefully not awaited\n    dispatch('plexclients/START_CLIENT_POLLER_IF_NEEDED', null, { root: true });\n    await dispatch('DISPLAY_NOTIFICATION', {\n      text: 'Joined room',\n      color: 'success',\n    }, { root: true });\n    await dispatch('SYNC_MEDIA_AND_PLAYER_STATE');\n  },\n\n  DISCONNECT: async ({ commit, dispatch }) => {\n    // Cancel poller\n    await dispatch('plexclients/CANCEL_CLIENT_POLLER_IF_NEEDED', null, { root: true });\n\n    close();\n    commit('SET_IS_IN_ROOM', false);\n    commit('SET_USERS', {});\n    commit('SET_HOST_ID', null);\n    commit('SET_SERVER', null);\n    commit('SET_ROOM', null);\n    commit('SET_SOCKET_ID', null);\n    commit('CLEAR_MESSAGES');\n    commit('SET_MESSAGES_USER_CACHE', {});\n    commit('SET_IS_PARTY_PAUSING_ENABLED', null);\n    commit('SET_IS_AUTO_HOST_ENABLED', null);\n  },\n\n  SEND_MESSAGE: async ({ dispatch, getters }, msg) => {\n    await dispatch('ADD_MESSAGE_AND_CACHE', {\n      senderId: getters.GET_SOCKET_ID,\n      text: msg,\n    });\n\n    emit({\n      eventName: 'sendMessage',\n      data: msg,\n    });\n  },\n\n  TRANSFER_HOST: (context, id) => {\n    emit({\n      eventName: 'transferHost',\n      data: id,\n    });\n  },\n\n  SEND_SET_PARTY_PAUSING_ENABLED: (context, value) => {\n    emit({\n      eventName: 'setPartyPausingEnabled',\n      data: value,\n    });\n  },\n\n  SEND_SET_AUTO_HOST_ENABLED: (context, value) => {\n    emit({\n      eventName: 'setAutoHostEnabled',\n      data: value,\n    });\n  },\n\n  sendPartyPause: ({ getters, rootGetters }, isPause) => {\n    if ((!getters.AM_I_HOST\n      || rootGetters['plexclients/GET_CHOSEN_CLIENT_ID'] !== slPlayerClientId)\n      && getters.IS_PARTY_PAUSING_ENABLED) {\n      emit({\n        eventName: 'partyPause',\n        data: isPause,\n      });\n    }\n  },\n\n  FETCH_SERVERS_HEALTH: async ({ rootGetters, commit }) => {\n    const start = Date.now();\n    const controller = new AbortController();\n\n    const timeout = setTimeout(() => {\n      controller.abort();\n    }, rootGetters.GET_CONFIG.socket_server_health_timeout);\n\n    const results = await Promise.allSettled(\n      rootGetters.GET_CONFIG.servers.map(async ({ url }) => [\n        url,\n        {\n          ...await fetchJson(combineRelativeUrlParts(url, 'health'), null,\n            { signal: controller.signal }),\n          latency: Date.now() - start,\n        },\n      ]),\n    );\n\n    clearTimeout(timeout);\n\n    const aliveServerHealths = Object.fromEntries(\n      results.filter((result) => result.status === 'fulfilled')\n        .map(({ value }) => value),\n    );\n\n    commit('SET_SERVERS_HEALTH', aliveServerHealths);\n  },\n\n  ADD_EVENT_HANDLERS: ({ dispatch }) => {\n    const makeHandler = (action) => (data) => dispatch(action, data);\n\n    const registerListener = ({ eventName, action }) => on({\n      eventName,\n      handler: makeHandler(action),\n    });\n\n    registerListener({ eventName: 'userJoined', action: 'HANDLE_USER_JOINED' });\n    registerListener({ eventName: 'userLeft', action: 'HANDLE_USER_LEFT' });\n    registerListener({ eventName: 'newHost', action: 'HANDLE_NEW_HOST' });\n    registerListener({ eventName: 'newMessage', action: 'ADD_MESSAGE_AND_CACHE_AND_NOTIFY' });\n    registerListener({ eventName: 'slPing', action: 'HANDLE_SLPING' });\n    registerListener({ eventName: 'playerStateUpdate', action: 'HANDLE_PLAYER_STATE_UPDATE' });\n    registerListener({ eventName: 'mediaUpdate', action: 'HANDLE_MEDIA_UPDATE' });\n    registerListener({\n      eventName: 'syncFlexibilityUpdate',\n      action: 'HANDLE_SYNC_FLEXIBILITY_UPDATE',\n    });\n    registerListener({\n      eventName: 'setPartyPausingEnabled',\n      action: 'HANDLE_SET_PARTY_PAUSING_ENABLED',\n    });\n\n    registerListener({\n      eventName: 'setAutoHostEnabled',\n      action: 'HANDLE_SET_AUTO_HOST_ENABLED',\n    });\n    registerListener({ eventName: 'partyPause', action: 'HANDLE_PARTY_PAUSE' });\n    registerListener({ eventName: 'disconnect', action: 'HANDLE_DISCONNECT' });\n    registerListener({ eventName: 'connect', action: 'HANDLE_RECONNECT' });\n    registerListener({ eventName: 'kicked', action: 'HANDLE_KICKED' });\n  },\n\n  CANCEL_UPNEXT: ({ getters, commit }) => {\n    if (getters.GET_UPNEXT_TIMEOUT_ID != null) {\n      clearTimeout(getters.GET_UPNEXT_TIMEOUT_ID);\n      commit('SET_UPNEXT_TIMEOUT_ID', null);\n    }\n  },\n\n  DISPLAY_UPNEXT: async ({ rootGetters, dispatch, commit }) => {\n    console.debug('DISPLAY_UPNEXT');\n    if (rootGetters['plexclients/ACTIVE_PLAY_QUEUE_NEXT_ITEM_EXISTS']) {\n      commit(\n        'SET_UP_NEXT_POST_PLAY_DATA',\n        await dispatch('plexclients/FETCH_METADATA_OF_PLAY_QUEUE_ITEM',\n          rootGetters['plexclients/GET_ACTIVE_PLAY_QUEUE'].Metadata[\n            rootGetters['plexclients/GET_ACTIVE_PLAY_QUEUE'].playQueueSelectedItemOffset + 1],\n          { root: true }),\n        { root: true },\n      );\n    }\n\n    commit('SET_UP_NEXT_TRIGGERED', true);\n  },\n\n  SCHEDULE_UPNEXT: async ({ rootGetters, dispatch, commit }, playerState) => {\n    if (playerState.duration && !Number.isNaN(playerState.time)) {\n      const timeUntilUpnextTrigger = playerState.duration - playerState.time\n        - rootGetters.GET_CONFIG.synclounge_upnext_trigger_time_from_end;\n\n      console.debug('SCHEDULE_UPNEXT', timeUntilUpnextTrigger);\n      commit('SET_UPNEXT_TIMEOUT_ID', setTimeout(() => dispatch('DISPLAY_UPNEXT'),\n        timeUntilUpnextTrigger));\n    }\n  },\n\n  CALC_IS_IN_UPNEXT_REGION: async ({ rootGetters }, playerState) => playerState.duration\n    && playerState.time\n      && (playerState.duration - playerState.time)\n        < rootGetters.GET_CONFIG.synclounge_upnext_trigger_time_from_end,\n\n  PROCESS_UPNEXT: async ({\n    getters, rootGetters, dispatch, commit,\n  }, playerState) => {\n    // Cancel any timers because the state has changed and previous is now invalid\n    await dispatch('CANCEL_UPNEXT');\n\n    // Check if we need to activate the upnext feature\n    if (getters.AM_I_HOST && playerState.state !== 'stopped'\n      && !rootGetters.GET_UP_NEXT_POST_PLAY_DATA) {\n      // If in region and not already scheduled\n      if (await dispatch('CALC_IS_IN_UPNEXT_REGION', playerState)) {\n        if (!getters.GET_UP_NEXT_TRIGGERED) {\n          // Display upnext immediately\n          await dispatch('DISPLAY_UPNEXT');\n        }\n      } else if (playerState.state === 'playing') {\n        await dispatch('SCHEDULE_UPNEXT', playerState);\n      }\n\n      commit('SET_UP_NEXT_TRIGGERED', false);\n    } else if (getters.GET_UP_NEXT_TRIGGERED) {\n      commit('SET_UP_NEXT_TRIGGERED', false);\n    }\n  },\n\n  PROCESS_PLAYER_STATE_UPDATE: async ({ getters, dispatch, commit }, noSync) => {\n    // TODO: only send message if in room, check in room\n    const playerState = await dispatch('plexclients/FETCH_TIMELINE_POLL_DATA_CACHE', null,\n      { root: true });\n\n    commit('SET_USER_PLAYER_STATE', {\n      ...playerState,\n      id: getters.GET_SOCKET_ID,\n    });\n\n    emit({\n      eventName: 'playerStateUpdate',\n      data: playerState,\n    });\n\n    await dispatch('PROCESS_UPNEXT', playerState);\n\n    if (playerState.state !== 'buffering' && !noSync) {\n      await dispatch('SYNC_PLAYER_STATE');\n    }\n  },\n\n  PROCESS_MEDIA_UPDATE: async ({\n    dispatch, getters, commit, rootGetters,\n  }, userInitiated) => {\n    // TODO: only send message if in room, check in room\n    const playerState = await dispatch('plexclients/FETCH_TIMELINE_POLL_DATA_CACHE', null,\n      { root: true });\n\n    if (playerState.state !== 'stopped') {\n      if (rootGetters.GET_UP_NEXT_POST_PLAY_DATA) {\n        commit('SET_UP_NEXT_POST_PLAY_DATA', null, { root: true });\n      }\n    }\n\n    if (getters.GET_UP_NEXT_TRIGGERED) {\n      commit('SET_UP_NEXT_TRIGGERED', false);\n    }\n\n    commit('SET_USER_MEDIA', {\n      id: getters.GET_SOCKET_ID,\n      media: rootGetters['plexclients/GET_ACTIVE_MEDIA_POLL_METADATA'],\n    });\n\n    commit('SET_USER_PLAYER_STATE', {\n      ...playerState,\n      id: getters.GET_SOCKET_ID,\n    });\n\n    emit({\n      eventName: 'mediaUpdate',\n      data: {\n        media: rootGetters['plexclients/GET_ACTIVE_MEDIA_POLL_METADATA'],\n        ...playerState,\n        userInitiated,\n      },\n    });\n\n    await dispatch('PROCESS_UPNEXT', playerState);\n\n    if (!userInitiated) {\n      await dispatch('SYNC_PLAYER_STATE');\n    }\n  },\n\n  ADD_MESSAGE_AND_CACHE_AND_NOTIFY: async ({ getters, dispatch }, msg) => {\n    await dispatch('ADD_MESSAGE_AND_CACHE', msg);\n\n    if (getters.ARE_SOUND_NOTIFICATIONS_ENABLED) {\n      notificationAudio.play();\n    }\n\n    if (getters.ARE_NOTIFICATIONS_ENABLED) {\n      if (Notification.permission !== 'granted') {\n        const permission = await Notification.requestPermission();\n        if (permission !== 'granted') {\n          return;\n        }\n      }\n\n      const { username, thumb } = getters.GET_MESSAGES_USER_CACHE_USER(msg.senderId);\n\n      // TODO: notifications don't work when on http. Maybe make alternative popup thing?\n      // eslint-disable-next-line no-new\n      new Notification(username, {\n        body: msg.text,\n        icon: thumb,\n      });\n    }\n  },\n\n  ADD_MESSAGE_AND_CACHE: ({ getters, commit }, msg) => {\n    const { username, thumb } = getters.GET_USER(msg.senderId);\n    if (!getters.GET_MESSAGES_USER_CACHE_USER(msg.senderId)) {\n      // Cache user details so we can still display user avatar and username after user leaves\n\n      commit('SET_MESSAGES_USER_CACHE_USER', {\n        id: msg.senderId,\n        data: {\n          username, thumb,\n        },\n      });\n    }\n\n    commit('ADD_MESSAGE', {\n      ...msg,\n      time: Date.now(),\n    });\n  },\n\n  CANCEL_IN_PROGRESS_SYNC: ({ getters, commit }) => {\n    // TODO: if the slplayer is currently being initialized, wait for that to finish\n    if (!getters.GET_SYNC_CANCEL_TOKEN) {\n      return;\n    }\n\n    // If sync in progress, cancel it\n    getters.GET_SYNC_CANCEL_TOKEN.abort('Sync cancelled');\n    console.log('sync cancelled');\n    commit('SET_SYNC_CANCEL_TOKEN', null);\n  },\n\n  MANUAL_SYNC: async ({\n    getters, rootGetters, dispatch, commit,\n  }) => {\n    console.debug('MANUAL_SYNC');\n    await dispatch('CANCEL_IN_PROGRESS_SYNC');\n\n    const adjustedHostTime = getters.GET_ADJUSTED_HOST_TIME();\n    // Adjust seek time by the time it takes to send a request to the client\n    const offset = rootGetters['plexclients/GET_CHOSEN_CLIENT_ID'] !== slPlayerClientId\n        && getters.GET_HOST_USER.state === 'playing'\n      ? adjustedHostTime + rootGetters['plexclients/GET_LATENCY']\n      : adjustedHostTime;\n\n    // eslint-disable-next-line new-cap\n    const token = new CAF.cancelToken();\n    commit('SET_SYNC_CANCEL_TOKEN', token);\n    try {\n      await dispatch('plexclients/SEEK_TO', {\n        cancelSignal: token.signal,\n        offset,\n      }, { root: true });\n    } catch (e) {\n      console.warn('Error caught in sync logic', e);\n    }\n\n    commit('SET_SYNC_CANCEL_TOKEN', null);\n  },\n\n  SYNC_MEDIA_AND_PLAYER_STATE: async ({ getters, commit, dispatch }) => {\n    if (getters.AM_I_HOST || getters.GET_SYNC_CANCEL_TOKEN) {\n      return;\n    }\n\n    /* This is data from the host, we should react to this data by potentially changing\n        what we're playing or seeking to get back in sync with the host.\n\n        We need to limit how ourself to make sure we dont hit the client too hard.\n        We'll only fetch new data if our data is older than 1000ms.\n        If we need to fetch new data, we'll do that and then decide\n        if we need to seek or start playing something.\n      */\n\n    // eslint-disable-next-line new-cap\n    const token = new CAF.cancelToken();\n    commit('SET_SYNC_CANCEL_TOKEN', token);\n\n    try {\n      await dispatch('_SYNC_MEDIA_AND_PLAYER_STATE', token.signal);\n    } catch (e) {\n      console.log('Error caught in sync logic', e);\n    }\n\n    commit('SET_SYNC_CANCEL_TOKEN', null);\n  },\n\n  // Interal action without lock. Use the one with the lock to stop multiple syncs from happening\n  // at once\n  _SYNC_MEDIA_AND_PLAYER_STATE: async ({ getters, dispatch, rootGetters }, cancelSignal) => {\n    console.debug('_SYNC_MEDIA_AND_PLAYER_STATE');\n    // TODO: potentailly don't do anythign if we have no timeline data yet\n    const timeline = await dispatch('plexclients/FETCH_TIMELINE_POLL_DATA_CACHE', null,\n      { root: true });\n\n    if (rootGetters['plexclients/ALREADY_SYNCED_ON_CURRENT_TIMELINE']) {\n    // TODO: examine if I should throw error or handle it another way\n      throw new Error('Already synced with this timeline. Need to wait for new one to sync again');\n    }\n\n    if (getters.GET_HOST_USER.state === 'stopped') {\n      // First, decide if we should stop playback\n      if (timeline.state !== 'stopped') {\n        await dispatch('DISPLAY_NOTIFICATION', {\n          text: 'The host pressed stop',\n          color: 'info',\n        }, { root: true });\n        await dispatch('plexclients/PRESS_STOP', null, { root: true });\n        return;\n      }\n\n      return;\n    }\n\n    // Logic for deciding whether we should play somethign different\n    if (rootGetters['settings/GET_AUTOPLAY']) {\n      const bestMatch = await dispatch('plexservers/FIND_BEST_MEDIA_MATCH',\n        getters.GET_HOST_USER.media, { root: true });\n      if (bestMatch) {\n        if (!rootGetters['plexclients/IS_THIS_MEDIA_PLAYING'](bestMatch)) {\n          // If we aren't playing the best match, play it\n          await dispatch('PLAY_MEDIA_AND_SYNC_TIME', bestMatch);\n          return;\n        }\n        // TODO: fix\n      } else {\n        const text = `Failed to find a compatible copy of ${getters.GET_HOST_USER.media.title\n        }. If you have access to the content try manually playing it.`;\n        console.warn(text);\n        await dispatch('DISPLAY_NOTIFICATION', {\n          text,\n          color: 'error',\n        }, { root: true });\n      }\n    }\n\n    await dispatch('_SYNC_PLAYER_STATE', cancelSignal);\n  },\n\n  SYNC_PLAYER_STATE: async ({ dispatch, getters, commit }) => {\n    if (getters.AM_I_HOST || getters.GET_SYNC_CANCEL_TOKEN) {\n      return;\n    }\n\n    // eslint-disable-next-line new-cap\n    const token = new CAF.cancelToken();\n    commit('SET_SYNC_CANCEL_TOKEN', token);\n\n    try {\n      await dispatch('_SYNC_PLAYER_STATE', token.signal);\n    } catch (e) {\n      console.log('Error caught in sync logic', e);\n    }\n\n    commit('SET_SYNC_CANCEL_TOKEN', null);\n  },\n\n  // Private version without lock. Please use the locking version unless you know what you are doing\n  _SYNC_PLAYER_STATE: async ({ getters, dispatch }, cancelSignal) => {\n    console.debug('_SYNC_PLAYER_STATE');\n    const timeline = await dispatch('plexclients/FETCH_TIMELINE_POLL_DATA_CACHE', null,\n      { root: true });\n\n    // TODO: examine if we want this or not\n    if (timeline.state === 'buffering') {\n      return;\n    }\n\n    // If we didn't find a good match or .... wtf??\n    if (timeline.state === 'stopped') {\n      return;\n    }\n\n    if (getters.GET_HOST_USER.state === 'playing' && timeline.state === 'paused') {\n      await dispatch('DISPLAY_NOTIFICATION', {\n        text: 'Resuming..',\n        color: 'info',\n      }, { root: true });\n      await dispatch('plexclients/PRESS_PLAY', cancelSignal, { root: true });\n      return;\n    }\n\n    if ((getters.GET_HOST_USER.state === 'paused'\n          || getters.GET_HOST_USER.state === 'buffering')\n          && timeline.state === 'playing') {\n      await dispatch('DISPLAY_NOTIFICATION', {\n        text: 'Pausing..',\n        color: 'info',\n      }, { root: true });\n      await dispatch('plexclients/PRESS_PAUSE', cancelSignal, { root: true });\n      return;\n    }\n\n    // TODO: potentially update the player state if we paused or played so we know in the sync\n    await dispatch('plexclients/SYNC', cancelSignal, { root: true });\n    console.log('done sync');\n  },\n\n  PLAY_MEDIA_AND_SYNC_TIME: async ({ getters, rootGetters, dispatch }, media) => {\n    const adjustedHostTime = getters.GET_ADJUSTED_HOST_TIME();\n    // Adjust seek time by the time it takes to send a request to the client\n    const offset = rootGetters['plexclients/GET_CHOSEN_CLIENT_ID'] !== slPlayerClientId\n        && getters.GET_HOST_USER.state === 'playing'\n      ? adjustedHostTime + rootGetters['plexclients/GET_LATENCY']\n      : adjustedHostTime;\n\n    await dispatch('plexclients/PLAY_MEDIA', {\n      mediaIndex: media.mediaIndex || 0,\n      // TODO: potentially play ahead a bit by the time it takes to buffer / transcode.\n      offset: offset || 0,\n      metadata: media,\n      machineIdentifier: media.machineIdentifier,\n    }, { root: true });\n  },\n\n  REQUEST_ALLOW_NOTIFICATIONS: async ({ commit }) => {\n    const permission = await Notification.requestPermission();\n    commit('SET_ARE_NOTIFICATIONS_ENABLED', permission === 'granted');\n  },\n\n  CHANGE_NOTIFICATIONS_ENABLED: async ({ commit, dispatch }, enabled) => {\n    if (enabled) {\n      if (Notification.permission === 'granted') {\n        commit('SET_ARE_NOTIFICATIONS_ENABLED', true);\n      } else {\n        await dispatch('REQUEST_ALLOW_NOTIFICATIONS');\n      }\n    } else {\n      commit('SET_ARE_NOTIFICATIONS_ENABLED', false);\n    }\n  },\n\n  SEND_SYNC_FLEXIBILITY_UPDATE: ({ rootGetters }) => {\n    emit({\n      eventName: 'syncFlexibilityUpdate',\n      data: rootGetters['settings/GET_SYNCFLEXIBILITY'],\n    });\n  },\n\n  UPDATE_SYNC_FLEXIBILITY: async ({ getters, dispatch, commit }, syncFlexibility) => {\n    commit('settings/SET_SYNCFLEXIBILITY', syncFlexibility, { root: true });\n\n    if (getters.IS_IN_ROOM) {\n      commit('SET_USER_SYNC_FLEXIBILITY', {\n        id: getters.GET_SOCKET_ID,\n        syncFlexibility,\n      });\n\n      await dispatch('SEND_SYNC_FLEXIBILITY_UPDATE');\n    }\n  },\n\n  KICK_USER: (ctx, id) => {\n    console.log('KICK_USER', id);\n    emit({\n      eventName: 'kick',\n      data: id,\n    });\n  },\n\n  DISCONNECT_AND_NAVIGATE_HOME: async ({ dispatch }) => {\n    await dispatch('DISCONNECT');\n    await dispatch('NAVIGATE_HOME', null, { root: true });\n  },\n\n  ...eventhandlers,\n};\n","const state = () => ({\n  socketId: null,\n  server: null,\n  room: null,\n  users: {},\n  hostId: null,\n  messagesUserCache: {},\n  messages: [],\n  isPartyPausingEnabled: null,\n  isAutoHostEnabled: null,\n  serversHealth: null,\n  syncCancelToken: null,\n  isInRoom: false,\n  upnextTimeoutId: null,\n\n  // This tracks whether the upnext screen was triggered for this playback already.\n  // It is reset to false when the player gets out of the upNext time zone (at the end of episode)\n  upNextTriggered: false,\n  areNotificationsEnabled: null,\n  areSoundNotificationsEnabled: null,\n});\n\nexport default state;\n","import Vue from 'vue';\nimport stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_USERS: (state, value) => {\n    state.users = value;\n  },\n\n  SET_ROOM: (state, value) => {\n    state.room = value;\n  },\n\n  SET_IS_PARTY_PAUSING_ENABLED: (state, isEnabled) => {\n    state.isPartyPausingEnabled = isEnabled;\n  },\n\n  SET_IS_AUTO_HOST_ENABLED: (state, isEnabled) => {\n    state.isAutoHostEnabled = isEnabled;\n  },\n\n  ADD_MESSAGE(state, msg) {\n    state.messages.push(msg);\n  },\n\n  CLEAR_MESSAGES(state) {\n    state.messages = [];\n  },\n\n  SET_SERVERS_HEALTH: (state, healths) => {\n    state.serversHealth = healths;\n  },\n\n  SET_SERVER: (state, server) => {\n    state.server = server;\n  },\n\n  SET_SYNC_CANCEL_TOKEN: (state, token) => {\n    state.syncCancelToken = token;\n  },\n\n  SET_IS_IN_ROOM: (state, isInRoom) => {\n    state.isInRoom = isInRoom;\n  },\n\n  SET_SOCKET_ID: (state, id) => {\n    state.socketId = id;\n  },\n\n  SET_USER: (state, { id, data }) => {\n    Vue.set(state.users, id, data);\n  },\n\n  SET_MESSAGES_USER_CACHE: (state, value) => {\n    state.messagesUserCache = value;\n  },\n\n  SET_MESSAGES_USER_CACHE_USER: (state, { id, data }) => {\n    Vue.set(state.messagesUserCache, id, data);\n  },\n\n  SET_HOST_ID: (state, hostId) => {\n    state.hostId = hostId;\n  },\n\n  DELETE_USER: (state, id) => {\n    Vue.delete(state.users, id);\n  },\n\n  SET_USER_PLAYER_STATE: (state, {\n    id, state: playerState, time, duration, playbackRate,\n  }) => {\n    Vue.set(state.users[id], 'state', playerState);\n    Vue.set(state.users[id], 'time', time);\n    Vue.set(state.users[id], 'duration', duration);\n    Vue.set(state.users[id], 'playbackRate', playbackRate);\n    Vue.set(state.users[id], 'updatedAt', Date.now());\n  },\n\n  SET_USER_MEDIA: (state, { id, media }) => {\n    Vue.set(state.users[id], 'media', media);\n  },\n\n  SET_USER_SYNC_FLEXIBILITY: (state, { id, syncFlexibility }) => {\n    Vue.set(state.users[id], 'syncFlexibility', syncFlexibility);\n  },\n\n  SET_UPNEXT_TIMEOUT_ID: (state, id) => {\n    state.upnextTimeoutId = id;\n  },\n\n  SET_UP_NEXT_TRIGGERED: (state, triggered) => {\n    state.upNextTriggered = triggered;\n  },\n\n  SET_ARE_NOTIFICATIONS_ENABLED: (state, enabled) => {\n    state.areNotificationsEnabled = enabled;\n  },\n\n  SET_ARE_SOUND_NOTIFICATIONS_ENABLED: (state, enabled) => {\n    state.areSoundNotificationsEnabled = enabled;\n  },\n};\n","const loadToNumber = (load) => {\n  switch (load) {\n    case 'low':\n      return 1;\n\n    case 'medium':\n      return 2;\n\n    case 'high':\n      return 3;\n\n    default:\n      // A really big number since this shouldn't happen\n      return 1000;\n  }\n};\n\nconst healthScore = (health) => health.latency + loadToNumber(health.load) * 10;\n\nexport default {\n  GET_MESSAGES_USER_CACHE_USER: (state) => (id) => state.messagesUserCache[id],\n  GET_USER: (state, getters) => (id) => getters.GET_USERS[id],\n  GET_SOCKET_ID: (state) => state.socketId,\n  GET_HOST_ID: (state) => state.hostId,\n  GET_ROOM: (state) => state.room,\n  GET_USERS: (state) => state.users,\n  GET_MESSAGES: (state) => state.messages,\n\n  IS_PARTY_PAUSING_ENABLED: (state, getters, rootState, rootGetters) => state.isPartyPausingEnabled\n    ?? rootGetters.GET_CONFIG.default_party_pause_enabled,\n\n  IS_AUTO_HOST_ENABLED: (state, getters, rootState, rootGetters) => state.isAutoHostEnabled\n    ?? rootGetters.GET_CONFIG.default_auto_host_enabled,\n\n  GET_HOST_USER: (state, getters) => getters.GET_USER(getters.GET_HOST_ID),\n  AM_I_HOST: (state, getters) => getters.GET_HOST_ID === getters.GET_SOCKET_ID,\n\n  GET_SERVERS_HEALTH: (state) => state.serversHealth,\n\n  GET_SERVER_HEALTH: (state) => (url) => state.serversHealth?.[url],\n\n  GET_SERVER_HEALTH_SCORES: (state, getters) => (getters.GET_SERVERS_HEALTH\n    ? Object.fromEntries(Object.entries(getters.GET_SERVERS_HEALTH).map(([url, health]) => [\n      url,\n      healthScore(health),\n    ]))\n    : null),\n\n  GET_BEST_SERVER: (state, getters) => (getters.GET_SERVER_HEALTH_SCORES\n    ? Object.entries(getters.GET_SERVER_HEALTH_SCORES)\n      .reduce((prev, curr) => (curr[1] < prev[1] ? curr : prev))[0]\n    : null),\n\n  GET_DISPLAY_USERNAME: (state, getters, rootState, rootGetters) => rootGetters[\n    'settings/GET_ALTUSERNAME']\n    || rootGetters['plex/GET_PLEX_USER'].username\n    || rootGetters['plex/GET_PLEX_USER'].title,\n\n  GET_SERVER: (state) => state.server,\n\n  GET_SYNC_CANCEL_TOKEN: (state) => state.syncCancelToken,\n\n  IS_IN_ROOM: (state) => state.isInRoom,\n\n  // Note: the host should really always have a playback rate of 1\n  // eslint-disable-next-line no-nested-ternary\n  GET_ADJUSTED_HOST_TIME: (state, getters) => () => (getters.GET_HOST_USER\n    ? getters.GET_HOST_USER.state === 'playing'\n      ? getters.GET_HOST_USER.time + (Date.now()\n          - getters.GET_HOST_USER.updatedAt) * getters.GET_HOST_USER.playbackRate\n      : getters.GET_HOST_USER.time\n    : null),\n\n  GET_UPNEXT_TIMEOUT_ID: (state) => state.upnextTimeoutId,\n\n  GET_UP_NEXT_TRIGGERED: (state) => state.upNextTriggered,\n\n  ARE_NOTIFICATIONS_ENABLED: (state, getters, rootState, rootGetters) => state\n    .areNotificationsEnabled\n    ?? rootGetters.GET_CONFIG?.default_are_notification_enabled,\n\n  ARE_SOUND_NOTIFICATIONS_ENABLED: (state, getters, rootState, rootGetters) => state\n    .areSoundNotificationsEnabled\n    ?? rootGetters.GET_CONFIG?.default_are_sound_notification_enabled,\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n","export default {\n};\n","// All of these settings are stored in localStorage and are persistent across reloads\nconst state = () => ({\n  autoplay: null,\n  clientPollInterval: null,\n  syncMode: null,\n  syncFlexibility: null,\n  customServerUrl: 'https://',\n  slPlayerQuality: null,\n  slPlayerVolume: null,\n  slPlayerForceTranscode: null,\n  altUsername: null,\n  autoSkipIntro: null,\n});\n\nexport default state;\n","import stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_AUTOPLAY: (state, autoplay) => {\n    state.autoplay = autoplay;\n  },\n\n  SET_SLPLAYERFORCETRANSCODE: (state, force) => {\n    state.slPlayerForceTranscode = force;\n  },\n\n  SET_CLIENTPOLLINTERVAL: (state, interval) => {\n    state.clientPollInterval = interval;\n  },\n\n  SET_SYNCFLEXIBILITY: (state, flexibility) => {\n    state.syncFlexibility = flexibility;\n  },\n\n  SET_SYNCMODE: (state, mode) => {\n    state.syncMode = mode;\n  },\n\n  SET_ALTUSERNAME: (state, alt) => {\n    state.altUsername = alt;\n  },\n\n  SET_CUSTOM_SERVER_URL: (state, url) => {\n    state.customServerUrl = url;\n  },\n\n  SET_SLPLAYERQUALITY: (state, quality) => {\n    state.slPlayerQuality = quality;\n  },\n\n  SET_SLPLAYERVOLUME: (state, volume) => {\n    state.slPlayerVolume = volume;\n  },\n\n  SET_AUTO_SKIP_INTRO: (state, autoSkip) => {\n    state.autoSkipIntro = autoSkip;\n  },\n};\n","// Use stored value if not null, othewise fallback to config, then default values\nexport default {\n  GET_AUTOPLAY: (state, getters, rootState, rootGetters) => state.autoplay\n   ?? rootGetters.GET_CONFIG?.default_slplayer_autoplay,\n\n  GET_CLIENTPOLLINTERVAL: (state, getters, rootState, rootGetters) => state.clientPollInterval\n    ?? rootGetters.GET_CONFIG?.default_client_poll_interval,\n\n  GET_SYNCMODE: (state, getters, rootState, rootGetters) => state.syncMode\n    ?? rootGetters.GET_CONFIG?.default_sync_mode,\n\n  GET_SYNCFLEXIBILITY: (state, getters, rootState, rootGetters) => state.syncFlexibility\n    ?? rootGetters.GET_CONFIG?.default_sync_flexability,\n\n  GET_SLPLAYERQUALITY: (state, getters, rootState, rootGetters) => state.slPlayerQuality\n    ?? rootGetters.GET_CONFIG?.default_slplayer_quality ?? null,\n\n  GET_SLPLAYERVOLUME: (state, getters, rootState, rootGetters) => state.slPlayerVolume\n    ?? rootGetters.GET_CONFIG?.default_slplayer_volume,\n\n  GET_SLPLAYERFORCETRANSCODE: (state, getters, rootState, rootGetters) => state\n    .slPlayerForceTranscode\n    ?? rootGetters.GET_CONFIG?.default_slplayer_force_transcode,\n\n  GET_ALTUSERNAME: (state) => state.altUsername,\n\n  GET_AUTO_SKIP_INTRO: (state, getters, rootState, rootGetters) => state.autoSkipIntro\n    ?? rootGetters.GET_CONFIG?.default_auto_skip_intro,\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions,\n};\n","// There doesn't seem to be a valid Promise.any polyfill in the current build config so I found\n// one myself\n\nexport default {\n  any: (promises) => Promise.all(promises.map((promise) => promise.then(\n    (val) => {\n      throw val;\n    },\n    (reason) => reason,\n  ))).then((reasons) => {\n    throw reasons;\n  }, (firstResolved) => firstResolved),\n};\n","export const difference = (arrays) => arrays.reduce((a, b) => a.filter((c) => !b.includes(c)));\n\nexport const intersection = (arrays) => arrays.reduce((a, b) => a.filter((c) => b.includes(c)));\n\nexport const randomInt = (a = 1, b = 0) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n","import promiseutils from '@/utils/promiseutils';\nimport { fetchJson, queryFetch } from '@/utils/fetchutils';\nimport { difference } from '@/utils/lightlodash';\nimport { slPlayerClientId } from '@/player/constants';\n\nexport default {\n  FETCH_PLEX_INIT_AUTH: async ({ getters }, signal) => fetchJson(\n    'https://plex.tv/api/v2/pins',\n    { strong: true },\n    {\n      method: 'POST',\n      headers: getters.GET_PLEX_INITIAL_AUTH_PARAMS,\n      signal,\n    },\n  ),\n\n  REQUEST_PLEX_AUTH_TOKEN: async ({ getters, commit, dispatch }, { signal, id }) => {\n    const data = await fetchJson(\n      `https://plex.tv/api/v2/pins/${id}`,\n      null,\n      {\n        headers: getters.GET_PLEX_INITIAL_AUTH_PARAMS,\n        signal,\n      },\n    );\n\n    if (!data.authToken) {\n      throw new Error(\"Plex didn't give authToken\");\n    }\n\n    commit('SET_PLEX_AUTH_TOKEN', data.authToken);\n\n    await dispatch('FETCH_PLEX_USER', signal);\n  },\n\n  FETCH_PLEX_USER: async ({ getters, commit }, signal) => {\n    const data = await fetchJson('https://plex.tv/api/v2/user', {\n      ...getters.GET_PLEX_BASE_PARAMS(),\n      includeSubscriptions: 1,\n      includeProviders: 1,\n      includeSettings: 1,\n      includeSharedSettings: 1,\n    }, { signal });\n\n    commit('SET_PLEX_USER', data);\n  },\n\n  // Private function, please use FETCH_PLEX_DEVICES instead\n  _FETCH_PLEX_DEVICES: async ({\n    state: { areDevicesCached }, commit, dispatch, getters, rootGetters,\n  }) => {\n    // Store old list of server/client ids, to be able to take difference after the update and\n    // find devices that weren't updated and remove them\n    const oldClientIds = rootGetters['plexclients/GET_PLEX_CLIENT_IDS']\n      .filter((clientId) => clientId !== slPlayerClientId);\n    const oldServersIds = rootGetters['plexservers/GET_PLEX_SERVER_IDS'];\n\n    const devices = await fetchJson('https://plex.tv/api/v2/resources', {\n      ...getters.GET_PLEX_BASE_PARAMS(),\n      includeHttps: 1,\n      includeRelay: 1,\n    });\n\n    await Promise.allSettled(devices.map(async (device) => {\n      if (device.provides.indexOf('player') !== -1) {\n        // This is a Client\n        commit('plexclients/ADD_PLEX_CLIENT', device, { root: true });\n      } else if (device.provides.indexOf('server') !== -1) {\n        // This is a Server\n        // TODO: potentially find connections async and not hold up the fetch devices\n        try {\n          const chosenConnection = await dispatch('FIND_WORKING_CONNECTION_PREFERRED', {\n            name: device.name,\n            connections: device.connections,\n            accessToken: device.accessToken,\n          });\n\n          const libraries = await dispatch('plexservers/FETCH_ALL_LIBRARIES', {\n            machineIdentifier: device.clientIdentifier,\n            manualConnection: {\n              chosenConnection,\n              accessToken: device.accessToken,\n            },\n          }, { root: true });\n\n          commit('plexservers/ADD_PLEX_SERVER', {\n            ...device,\n            libraries,\n            chosenConnection,\n          }, { root: true });\n        } catch (e) {\n          const text = `Unable to find working connection to plex server: ${device.name}`;\n          await dispatch('DISPLAY_NOTIFICATION', {\n            text,\n            color: 'error',\n          }, { root: true });\n          console.error(text, e);\n        }\n      }\n    }));\n\n    // Find devices that weren't updated\n    const staleClientIds = difference([\n      oldClientIds,\n      rootGetters['plexclients/GET_PLEX_CLIENT_IDS'],\n    ]);\n\n    staleClientIds.forEach((clientId) => {\n      commit('plexclients/DELETE_PLEX_CLIENT', clientId, { root: true });\n    });\n\n    const staleServerIds = difference([\n      oldServersIds,\n      rootGetters['plexservers/GET_PLEX_SERVER_IDS'],\n    ]);\n\n    staleServerIds.forEach((serverId) => {\n      commit('plexservers/DELETE_PLEX_SERVER', serverId, { root: true });\n    });\n\n    commit('plexclients/UPDATE_SLPLAYER_LAST_SEEN_TO_NOW', null, { root: true });\n\n    if (!areDevicesCached) {\n      commit('SET_ARE_DEVICES_CACHED', true);\n    }\n  },\n\n  FETCH_PLEX_DEVICES: async ({ getters, commit, dispatch }) => {\n    // If we already have started checking for devices,\n    // wait for that to finish instead of starting new request\n    if (!getters.GET_DEVICE_FETCH_PROMISE) {\n      const fetchPromise = dispatch('_FETCH_PLEX_DEVICES');\n      commit('SET_DEVICE_FETCH_PROMISE', fetchPromise);\n    }\n\n    await getters.GET_DEVICE_FETCH_PROMISE;\n    commit('SET_DEVICE_FETCH_PROMISE', null);\n  },\n\n  // Use this to trigger a fetch if you don't need the devices refreshed\n  FETCH_PLEX_DEVICES_IF_NEEDED: async ({ state: { areDevicesCached }, getters, dispatch }) => {\n    if (!areDevicesCached && getters.GET_DEVICE_FETCH_PROMISE == null) {\n      await dispatch('FETCH_PLEX_DEVICES');\n    }\n\n    await getters.GET_DEVICE_FETCH_PROMISE;\n  },\n\n  TEST_PLEX_CONNECTION: async ({ getters }, { connection, accessToken, signal }) => {\n    await queryFetch(\n      connection.uri,\n      getters.GET_PLEX_BASE_PARAMS(accessToken),\n      { signal },\n    );\n\n    return connection;\n  },\n\n  FIND_WORKING_CONNECTION: async ({ dispatch }, { connections, accessToken }) => {\n    const controller = new AbortController();\n    const workingConnection = await promiseutils.any(\n      connections.map((connection) => dispatch(\n        'TEST_PLEX_CONNECTION',\n        { connection, accessToken, signal: controller.signal },\n      )),\n    );\n\n    // Abort other connection attempts since we found one\n    controller.abort();\n\n    return workingConnection;\n  },\n\n  // This function iterates through all available connections and\n  // if any of them return a valid response we'll set that connection\n  // as the chosen connection for future use.\n  FIND_WORKING_CONNECTION_PREFERRED: async ({ dispatch }, { name, connections, accessToken }) => {\n    console.debug('FIND_WORKING_CONNECTION_PREFERRED', name);\n\n    const nonRelayConnections = connections.filter((connection) => !connection.relay);\n    // Prefer secure connections first.\n    const secureConnections = nonRelayConnections.filter((connection) => connection.protocol\n      === 'https');\n\n    try {\n      const conn = await dispatch('FIND_WORKING_CONNECTION', {\n        connections: secureConnections,\n        accessToken,\n      });\n      console.log(name, 'using secure connection', conn);\n      return conn;\n    } catch (e) {\n      console.warn(name, 'no working secure connections found');\n    }\n\n    // If we are using synclounge over https, we can't access connections over http because\n    // most modern web browsers block mixed content\n    const insecureConnections = nonRelayConnections.filter((connection) => connection.protocol\n      === 'http');\n    try {\n      const conn = await dispatch('FIND_WORKING_CONNECTION', {\n        connections: insecureConnections,\n        accessToken,\n      });\n      console.log(name, 'using insecure connection', conn);\n      return conn;\n    } catch (e) {\n      console.warn(name, 'no working insecure connections found');\n    }\n\n    // Finally try relay connections if we failed everywhere else.\n    const relayConnections = connections.filter((connection) => connection.relay);\n    try {\n      const relayConnection = await dispatch('FIND_WORKING_CONNECTION', {\n        connections: relayConnections,\n        accessToken,\n      });\n      console.log(name, 'using relay connection', name);\n      return relayConnection;\n    } catch (e) {\n      console.error(name, 'no working connections found', connections);\n      throw e;\n    }\n  },\n};\n","import { getRandomPlexId } from '@/utils/random';\n\nconst state = () => ({\n  user: null,\n  areDevicesCached: false,\n  deviceFetchPromise: null,\n  plexAuthToken: null,\n  clientIdentifier: getRandomPlexId(),\n});\n\nexport default state;\n","import stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_ARE_DEVICES_CACHED: (state, cached) => {\n    state.areDevicesCached = cached;\n  },\n\n  SET_DEVICE_FETCH_PROMISE: (state, promise) => {\n    state.deviceFetchPromise = promise;\n  },\n\n  SET_PLEX_USER: (state, user) => {\n    state.user = user;\n  },\n\n  SET_PLEX_AUTH_TOKEN: (state, token) => {\n    state.plexAuthToken = token;\n  },\n};\n","import { intersection } from '@/utils/lightlodash';\nimport { makeUrl } from '@/utils/fetchutils';\n\nconst capitalizeFirstLetter = (string) => string[0].toUpperCase() + string.slice(1);\n\nexport default {\n  IS_UNAUTHORIZED: (state, getters) => !getters.GET_PLEX_AUTH_TOKEN\n    || (state.areDevicesCached && !getters.IS_USER_AUTHORIZED),\n\n  GET_PLEX_DEVICE_NAME: (state, getters, rootState, rootGetters) => {\n    switch (rootGetters.GET_BROWSER.name) {\n      case 'edge-chromium': {\n      // Plex doesn't like edge-chromium device name, so send it what plex web does\n        return 'Microsoft Edge';\n      }\n\n      default: {\n        return capitalizeFirstLetter(rootGetters.GET_BROWSER.name);\n      }\n    }\n  },\n\n  GET_PLEX_PRODUCT_HEADER: () => 'SyncLounge',\n  GET_PLEX_DEVICE_DEVICE_HEADER: (state, getters, rootState, rootGetters) => rootGetters\n    .GET_BROWSER.os,\n\n  GET_PLEX_DEVICE_NAME_HEADER: (state, getters) => getters.GET_PLEX_DEVICE_NAME,\n  GET_PLEX_PLATFORM_HEADER: (state, getters) => getters.GET_PLEX_DEVICE_NAME,\n  GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER: () => `${window.screen.availWidth}x${\n    window.screen.availHeight},${window.screen.width}x${window.screen.height}`,\n\n  GET_PLEX_INITIAL_AUTH_PARAMS: (state, getters, rootState, rootGetters) => ({\n    'X-Plex-Product': getters.GET_PLEX_PRODUCT_HEADER,\n    'X-Plex-Version': rootState.version,\n    'X-Plex-Client-Identifier': getters.GET_CLIENT_IDENTIFIER,\n    'X-Plex-Platform': getters.GET_PLEX_PLATFORM_HEADER,\n    'X-Plex-Platform-Version': rootGetters.GET_BROWSER.version,\n    // 'X-Plex-Sync-Version': 2,\n    'X-Plex-Features': 'external-media,indirect-media',\n    'X-Plex-Model': 'hosted',\n    'X-Plex-Device': getters.GET_PLEX_DEVICE_DEVICE_HEADER,\n    'X-Plex-Device-Name': getters.GET_PLEX_DEVICE_NAME_HEADER,\n    'X-Plex-Device-Screen-Resolution': getters.GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER,\n    'X-Plex-Language': 'en',\n  }),\n\n  GET_PLEX_TOKEN_PARAMS: (state, getters) => (accessToken) => ({\n    'X-Plex-Token': accessToken || getters.GET_PLEX_AUTH_TOKEN,\n  }),\n\n  GET_PLEX_BASE_PARAMS: (state, getters) => (accessToken) => ({\n    ...getters.GET_PLEX_INITIAL_AUTH_PARAMS,\n    ...getters.GET_PLEX_TOKEN_PARAMS(accessToken),\n    'X-Plex-Text-Format': 'plain',\n    'X-Plex-Provider-Version': 1.3,\n  }),\n\n  GET_PLEX_AUTH_URL: (state, getters, rootState, rootGetters) => (code) => {\n    const urlParams = {\n      'context[device][product]': getters.GET_PLEX_PRODUCT_HEADER,\n      'context[device][version]': rootState.version,\n      'context[device][platform]': getters.GET_PLEX_PLATFORM_HEADER,\n      'context[device][platformVersion]': rootGetters.GET_BROWSER.version,\n      'context[device][device]': getters.GET_PLEX_DEVICE_DEVICE_HEADER,\n      'context[device][name]': getters.GET_PLEX_DEVICE_NAME_HEADER,\n      'context[device][model]': 'hosted',\n      'context[device][screenResolution]': getters.GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER,\n      'context[device][environment]': 'bundled',\n      'context[device][layout]': 'desktop',\n      clientID: getters.GET_CLIENT_IDENTIFIER,\n      code,\n    };\n\n    return makeUrl('https://app.plex.tv/auth#', urlParams);\n  },\n\n  GET_DEVICE_FETCH_PROMISE: (state) => state.deviceFetchPromise,\n  GET_PLEX_USER: (state) => state.user,\n\n  IS_USER_AUTHORIZED: (state, getters, rootState, rootGetters) => getters\n    .IS_AUTHENTICATION_TYPE_NONE\n    || rootGetters['plexservers/DOES_USER_HAVE_AUTHORIZED_SERVER']\n    || getters.IS_PLEX_USER_AUTHORIZED,\n\n  IS_PLEX_USER_AUTHORIZED: (state, getters, rootState, rootGetters) => rootGetters\n    .GET_CONFIG?.authentication?.type.includes('user')\n    && getters.GET_PLEX_USER\n    && intersection([\n      [getters.GET_PLEX_USER.username, getters.GET_PLEX_USER.email],\n      rootGetters.GET_CONFIG.authentication.authorized,\n    ]).length > 0,\n\n  IS_AUTHENTICATION_TYPE_NONE: (state, getters, rootState, rootGetters) => rootGetters\n    .GET_CONFIG?.authentication.mechanism === 'none',\n\n  GET_PLEX_AUTH_TOKEN: (state) => state.plexAuthToken,\n  GET_CLIENT_IDENTIFIER: (state) => state.clientIdentifier,\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  getters,\n  mutations,\n};\n","import CAF from 'caf';\n\nimport promiseutils from '@/utils/promiseutils';\nimport contentTitleUtils from '@/utils/contenttitleutils';\nimport { fetchXmlAndTransform } from '@/utils/fetchutils';\nimport { slPlayerClientId } from '@/player/constants';\n\nexport default {\n  FIND_AND_SET_CONNECTION: async ({ dispatch, commit }, { clientIdentifier, signal }) => {\n    const chosenConnection = await dispatch('FIND_CONNECTION', { clientIdentifier, signal });\n    commit('SET_CLIENT_CHOSEN_CONNECTION', { clientIdentifier, chosenConnection });\n  },\n\n  FIND_CONNECTION: ({ getters, dispatch }, { clientIdentifier, signal }) => {\n    // This function iterates through all available connections and\n    // if any of them return a valid response we'll set that connection\n    // as the chosen connection for future use.\n\n    if (clientIdentifier === slPlayerClientId) {\n      return true;\n    }\n\n    // Test request has to be a timeline request since some clients don't properly set cors headers\n    const { connections, accessToken } = getters.GET_PLEX_CLIENT(clientIdentifier);\n\n    return dispatch('FIND_WORKING_CONNECTION', {\n      clientIdentifier, connections, accessToken, signal,\n    });\n  },\n\n  FIND_WORKING_CONNECTION: async ({ dispatch }, {\n    connections, accessToken, clientIdentifier, signal,\n  }) => {\n    // Combine external signal with local one that cancels other requests as soon as one finishes\n    const controller = new AbortController();\n    const combinedSignal = CAF.signalRace([\n      signal,\n      controller.signal,\n    ]);\n\n    const workingConnection = await promiseutils.any(\n      connections.map((connection) => dispatch(\n        'TEST_PLEX_CLIENT_CONNECTION',\n        {\n          connection, accessToken, clientIdentifier, signal: combinedSignal,\n        },\n      )),\n    );\n\n    // Abort other connection attempts since we found one\n    controller.abort();\n\n    return workingConnection;\n  },\n\n  TEST_PLEX_CLIENT_CONNECTION: async ({ dispatch }, { connection, ...rest }) => {\n    await dispatch('SEND_CLIENT_REQUEST_WITH_URI', {\n      path: '/player/timeline/poll',\n      params: {\n        wait: 0,\n      },\n      uri: connection.uri,\n      ...rest,\n    });\n\n    return connection;\n  },\n\n  PLAY_MEDIA: async ({\n    getters, commit, dispatch, rootGetters,\n  }, {\n    mediaIndex, offset, metadata, machineIdentifier, userInitiated,\n  }) => {\n    console.debug('PLAY_MEDIA');\n    const server = rootGetters['plexservers/GET_PLEX_SERVER'](machineIdentifier);\n\n    commit('SET_ACTIVE_PLAY_QUEUE', await dispatch('plexservers/CREATE_PLAY_QUEUE', {\n      machineIdentifier,\n      ratingKey: metadata.ratingKey,\n    }, { root: true }));\n\n    commit('SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER', machineIdentifier);\n\n    if (getters.GET_CHOSEN_CLIENT_ID === slPlayerClientId) {\n      commit('SET_ACTIVE_MEDIA_METADATA', metadata);\n      commit('SET_ACTIVE_SERVER_ID', machineIdentifier);\n      commit('plexservers/SET_LAST_SERVER_ID', machineIdentifier, { root: true });\n      commit('slplayer/SET_MEDIA_INDEX', mediaIndex, { root: true });\n      commit('slplayer/SET_OFFSET_MS', Math.round(offset) || 0, { root: true });\n      commit('slplayer/SET_PLAYER_STATE', 'buffering', { root: true });\n      commit('slplayer/SET_MASK_PLAYER_STATE', true, { root: true });\n      await dispatch('synclounge/PROCESS_MEDIA_UPDATE', userInitiated, { root: true });\n\n      if (rootGetters['slplayer/IS_PLAYER_INITIALIZED']) {\n        await dispatch('slplayer/CHANGE_PLAYER_SRC', true, { root: true });\n      } else {\n        await dispatch('slplayer/NAVIGATE_AND_INITIALIZE_PLAYER', null, { root: true });\n      }\n    } else {\n      // Play a media item given a mediaId key and a server to play from\n      // We need the following variables to build our paramaters:\n      // MediaId Key, Offset, server MachineId,\n      // Server Ip, Server Port, Server Protocol, Path\n\n      // TODO: potentially wait for stuff..\n\n      // Plex remote control API says:\n      // \"After sending PlayMedia, the controller ignores timelines older than the last PlayMedia\n      // commandID.\"\n      const commandId = getters.GET_COMMAND_ID;\n\n      await dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n        path: '/player/playback/playMedia',\n        params: {\n          wait: 0,\n          key: metadata.key,\n          offset: Math.round(offset) || 0,\n          machineIdentifier,\n          address: server.chosenConnection.address,\n          port: server.chosenConnection.port,\n          protocol: server.chosenConnection.protocol,\n          path: server.chosenConnection.uri + metadata.key,\n          token: server.accessToken,\n          containerKey: `/playQueues/${getters.GET_ACTIVE_PLAY_QUEUE.playQueueID}`,\n          ...mediaIndex && { mediaIndex },\n        },\n      });\n\n      commit('SET_LAST_PLAY_MEDIA_COMMAND_ID', commandId);\n\n      // TODO: fix wait for movement lol\n      // await this.waitForMovement();\n    }\n  },\n\n  RESERVE_COMMAND_ID: ({ getters, commit }) => {\n    const id = getters.GET_COMMAND_ID;\n    commit('INCREMENT_COMMAND_ID');\n    return id;\n  },\n\n  SEND_CLIENT_REQUEST_WITH_URI: async ({ dispatch, rootGetters }, {\n    clientIdentifier, accessToken, uri, path, params, signal,\n  }) => {\n    const commandID = await dispatch('RESERVE_COMMAND_ID');\n\n    return fetchXmlAndTransform(\n      `${uri}${path}`,\n      {\n        commandID,\n        type: 'video',\n        ...params,\n      },\n      {\n        headers: {\n          ...rootGetters['plex/GET_PLEX_BASE_PARAMS'](accessToken),\n          'X-Plex-Target-Client-Identifier': clientIdentifier,\n        },\n        signal,\n      },\n    );\n  },\n\n  SEND_CLIENT_REQUEST: ({ dispatch, getters }, { clientIdentifier, ...rest }) => {\n    const { accessToken, chosenConnection: { uri } } = getters.GET_PLEX_CLIENT(clientIdentifier);\n    return dispatch('SEND_CLIENT_REQUEST_WITH_URI', {\n      accessToken, uri, clientIdentifier, ...rest,\n    });\n  },\n\n  SEND_CHOSEN_CLIENT_REQUEST: ({ dispatch, getters }, args) => dispatch('SEND_CLIENT_REQUEST', {\n    clientIdentifier: getters.GET_CHOSEN_CLIENT_ID,\n    ...args,\n  }),\n\n  FETCH_CHOSEN_CLIENT_TIMELINE: async ({ dispatch, commit }, signal) => {\n    const startedAt = Date.now();\n    const data = await dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n      path: '/player/timeline/poll',\n      params: {\n        wait: 0,\n      },\n      signal,\n    });\n\n    // Measure time it takes and adjust playback time if playing\n    const latency = (Date.now() - startedAt) / 2;\n    // Store latency to use to adjust time when seeking\n    commit('SET_LATENCY', latency);\n\n    const videoTimeline = data.MediaContainer[0].Timeline.find((timeline) => timeline.type\n      === 'video');\n\n    // Clients seem to respond with strings instead of numbers so need to parse\n    const time = parseInt(videoTimeline.time, 10);\n    return {\n      ...videoTimeline,\n      time: videoTimeline.state === 'playing'\n        ? time + latency\n        : time,\n      duration: parseInt(videoTimeline.duration, 10),\n      updatedAt: Date.now(),\n      playQueueItemID: parseInt(videoTimeline.playQueueItemID, 10),\n      commandID: parseInt(data.MediaContainer[0].commandID, 10),\n    };\n  },\n\n  UPDATE_PLEX_CLIENT_TIMELINE: async ({\n    getters, rootGetters, dispatch, commit,\n  }, timeline) => {\n    if (!getters.GET_PLEX_CLIENT_TIMELINE\n      || getters.GET_PLEX_CLIENT_TIMELINE.machineIdentifier !== timeline.machineIdentifier\n      || !getters.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM\n      || getters.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM.playQueueItemID !== timeline.playQueueItemID) {\n      // If we are playing something different\n\n      if (timeline.state === 'stopped') {\n        commit('SET_ACTIVE_MEDIA_METADATA', null);\n        commit('SET_ACTIVE_SERVER_ID', null);\n        // Leaving play queue around for possible upnext\n      } else {\n        commit('SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER', timeline.machineIdentifier);\n        commit('SET_ACTIVE_PLAY_QUEUE', await dispatch('plexservers/FETCH_PLAY_QUEUE', {\n          machineIdentifier: getters.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,\n          playQueueID: timeline.playQueueID,\n        }, { root: true }));\n\n        await dispatch('UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM');\n\n        const serverName = rootGetters['plexservers/GET_PLEX_SERVER'](\n          getters.GET_ACTIVE_SERVER_ID,\n        ).name;\n\n        await dispatch('DISPLAY_NOTIFICATION', {\n          text: `Now Playing: ${contentTitleUtils.getCombinedTitle(\n            getters.GET_ACTIVE_MEDIA_METADATA,\n          )} from ${serverName}`,\n          color: 'info',\n        }, { root: true });\n      }\n\n      // Media changed\n      commit('SET_PLEX_CLIENT_TIMELINE', timeline);\n      if (rootGetters['synclounge/IS_IN_ROOM']) {\n        // TODO: add detection to see if this media change was user initiated or in response to a\n        // sync\n        await dispatch('synclounge/PROCESS_MEDIA_UPDATE', null, { root: true });\n      }\n    } else if (getters.GET_PLEX_CLIENT_TIMELINE.state !== timeline.state\n      || getters.GET_PLEX_CLIENT_TIMELINE.duration !== timeline.duration\n      || Math.abs(getters.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA().time - timeline.time)\n        > rootGetters.GET_CONFIG.plex_client_time_delta_state_change_threshold) {\n      // If we had a player state change\n      commit('SET_PLEX_CLIENT_TIMELINE', timeline);\n\n      await dispatch('synclounge/PROCESS_PLAYER_STATE_UPDATE', null, { root: true });\n    }\n  },\n\n  POLL_PLEX_CLIENT: async ({ getters, dispatch, commit }, signal) => {\n    // Saving it because making client request increments it\n    // TODO: can I actually save it or is it reactive ahaha D:\n    let currentCommandId = getters.GET_COMMAND_ID;\n    try {\n      const timeline = await dispatch('FETCH_CHOSEN_CLIENT_TIMELINE', signal);\n\n      if (getters.GET_LAST_PLAY_MEDIA_COMMAND_ID != null\n        && timeline.commandID < getters.GET_LAST_PLAY_MEDIA_COMMAND_ID) {\n      // Plex remote control api says:\n      // \"After sending PlayMedia, the controller ignores timelines older than the last PlayMedia\n      // commandID.\"\n        return;\n      }\n\n      if (timeline.commandID > getters.GET_COMMAND_ID) {\n      // If the client has a higher command ID, bump our id up to that\n        currentCommandId = timeline.commandID;\n        commit('SET_COMMAND_ID', timeline.commandID + 1);\n      }\n\n      commit('SET_PLEX_CLIENT_TIMELINE_COMMAND_ID', currentCommandId);\n\n      await dispatch('UPDATE_PLEX_CLIENT_TIMELINE', timeline);\n    } catch (e) {\n      console.error('Failed fetching client timeline: ', e);\n    }\n  },\n\n  // Same return as FETCH_TIMELINE_POLL_DATA but usees the cached data (if normal plex client rather\n  // than making a request)\n  // or asks slplayer since it can do that with no delay\n  FETCH_TIMELINE_POLL_DATA_CACHE: ({ getters, dispatch }) => {\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/FETCH_TIMELINE_POLL_DATA', null, { root: true });\n      }\n\n      default: {\n        return getters.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA();\n      }\n    }\n  },\n\n  FETCH_TIMELINE_POLL_DATA: async ({ getters, dispatch }) => {\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/FETCH_TIMELINE_POLL_DATA', null, { root: true });\n      }\n\n      default: {\n        await dispatch('POLL_PLEX_CLIENT');\n        return getters.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA();\n      }\n    }\n  },\n\n  FETCH_JOIN_PLAYER_DATA: async ({ getters, dispatch }) => ({\n    ...await dispatch('FETCH_TIMELINE_POLL_DATA'),\n    media: getters.GET_ACTIVE_MEDIA_POLL_METADATA,\n    playerProduct: getters.GET_CHOSEN_CLIENT.product,\n  }),\n\n  UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID: ({ commit, getters }) => {\n    // TODO: make sure all them hit here and fix the id lol\n    // todo: also store the command id above because it might have changed during the awaits\n    // TODO: also update this when pausing or playign so we don't have werid stuff\n    if (getters.GET_CHOSEN_CLIENT_ID !== slPlayerClientId) {\n      commit('SET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID', getters.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID);\n    }\n  },\n\n  SYNC: async ({ getters, dispatch, rootGetters }, cancelSignal) => {\n    await dispatch('UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID');\n\n    // I already adjust the time by age\n    const playerPollData = await dispatch('FETCH_TIMELINE_POLL_DATA_CACHE');\n    const adjustedHostTime = rootGetters['synclounge/GET_ADJUSTED_HOST_TIME']();\n\n    const difference = adjustedHostTime - playerPollData.time;\n    const absDifference = Math.abs(difference);\n\n    console.debug('SYNC difference', difference);\n\n    if (absDifference > rootGetters['settings/GET_SYNCFLEXIBILITY']\n      || (rootGetters['synclounge/GET_HOST_USER'].state === 'paused'\n        && absDifference > rootGetters.GET_CONFIG.paused_sync_flexibility)) {\n      // We need to seek!\n      // Decide what seeking method we want to use\n\n      // Adjust seek time by the time it takes to send a request to the client\n      const offset = getters.GET_CHOSEN_CLIENT_ID !== slPlayerClientId\n        && rootGetters['synclounge/GET_HOST_USER'].state === 'playing'\n        ? adjustedHostTime + getters.GET_LATENCY\n        : adjustedHostTime;\n\n      if (rootGetters['settings/GET_SYNCMODE'] === 'cleanseek'\n        || rootGetters['synclounge/GET_HOST_USER'].state === 'paused') {\n        return dispatch('SEEK_TO', { cancelSignal, offset });\n      }\n\n      return dispatch('SKIP_AHEAD', { cancelSignal, offset });\n    }\n\n    // TODO: make difference config value\n    if (getters.GET_CHOSEN_CLIENT_ID === slPlayerClientId\n      && absDifference > rootGetters.GET_CONFIG.slplayer_soft_seek_threshold) {\n      return dispatch('slplayer/SOFT_SEEK', adjustedHostTime, { root: true });\n    }\n\n    return 'No sync needed';\n  },\n\n  PRESS_PLAY: async ({ getters, dispatch }, cancelSignal) => {\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/PRESS_PLAY', null, { root: true });\n      }\n\n      default: {\n        await dispatch('UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID');\n        return dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n          cancelSignal,\n          path: '/player/playback/play',\n          params: {\n            wait: 0,\n          },\n        });\n      }\n    }\n  },\n\n  PRESS_PAUSE: ({ getters, dispatch }, cancelSignal) => {\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/PRESS_PAUSE', null, { root: true });\n      }\n\n      default: {\n        return dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n          cancelSignal,\n          path: '/player/playback/pause',\n          params: {\n            wait: 0,\n          },\n        });\n      }\n    }\n  },\n\n  PRESS_STOP: async ({ getters, dispatch }) => {\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/PRESS_STOP', null, { root: true });\n      }\n\n      default: {\n        await dispatch('UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID');\n\n        return dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n          path: '/player/playback/stop',\n          params: {\n            wait: 0,\n          },\n        });\n      }\n    }\n  },\n\n  SEEK_TO: async ({ getters, dispatch }, { cancelSignal, offset }) => {\n    console.debug('SEEK_TO', offset);\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        return dispatch('slplayer/SPEED_OR_NORMAL_SEEK', { cancelSignal, seekToMs: offset },\n          { root: true });\n      }\n\n      default: {\n        await dispatch('UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID');\n\n        return dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n          cancelSignal,\n          path: '/player/playback/seekTo',\n          params: {\n            wait: 0,\n            offset: Math.round(offset),\n          },\n        });\n      }\n    }\n  },\n\n  SKIP_AHEAD: async ({ rootGetters, dispatch }, { offset, cancelSignal }) => {\n    const startedAt = Date.now();\n    const duration = rootGetters.GET_CONFIG.skip_ahead_time;\n    await dispatch('SEEK_TO', {\n      offset: offset + duration,\n      cancelSignal,\n    });\n    await dispatch('PRESS_PAUSE', cancelSignal);\n\n    // Calculate how long it took to get to our ready state\n    const elapsed = Date.now() - startedAt;\n    await CAF.delay(cancelSignal, duration - elapsed);\n\n    await dispatch('PRESS_PLAY', cancelSignal);\n  },\n\n  UPDATE_ACTIVE_PLAY_QUEUE: async ({ getters, dispatch, commit }) => {\n    commit('SET_ACTIVE_PLAY_QUEUE', await dispatch('plexservers/FETCH_PLAY_QUEUE', {\n      machineIdentifier: getters.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,\n      playQueueID: getters.GET_ACTIVE_PLAY_QUEUE.playQueueID,\n    }, { root: true }));\n  },\n\n  UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM: async ({ getters, dispatch, commit }) => {\n    const metadata = await dispatch('FETCH_METADATA_OF_PLAY_QUEUE_ITEM',\n      getters.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM);\n    if (!getters.GET_ACTIVE_MEDIA_METADATA\n      || metadata.ratingKey !== getters.GET_ACTIVE_MEDIA_METADATA.ratingKey\n      || getters.GET_ACTIVE_SERVER_ID !== metadata.machineIdentifier) {\n      commit('SET_ACTIVE_SERVER_ID', metadata.machineIdentifier);\n      commit('plexservers/SET_LAST_SERVER_ID', metadata.machineIdentifier, { root: true });\n      commit('SET_ACTIVE_MEDIA_METADATA', metadata);\n    }\n  },\n\n  FETCH_METADATA_OF_PLAY_QUEUE_ITEM: ({ getters, dispatch }, playQueueItem) => {\n    if (playQueueItem.source) {\n      // If source is defined on selected item, then it is on a different server and we need to do\n      // more stuff\n      // Source looks likes: \"server://{MACHINE_IDENTIFIER}/com.plexapp.plugins.library\"\n      const regex = /^server:\\/\\/(\\w+)\\//;\n      const machineIdentifier = playQueueItem.source.match(regex)[1];\n\n      return dispatch('plexservers/FETCH_PLEX_METADATA', {\n        machineIdentifier,\n        ratingKey: playQueueItem.ratingKey,\n      }, { root: true });\n    }\n\n    return {\n      machineIdentifier: getters.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,\n      ...playQueueItem,\n    };\n  },\n\n  PLAY_NEXT: ({ getters, rootGetters, dispatch }, metadata) => {\n    console.debug('plexclients/PLAY_NEXT');\n    switch (getters.GET_CHOSEN_CLIENT_ID) {\n      case slPlayerClientId: {\n        if (rootGetters['slplayer/IS_PLAYER_INITIALIZED']) {\n          return dispatch('slplayer/PLAY_NEXT', null, { root: true });\n        }\n\n        const { viewOffset: offset, machineIdentifier } = metadata;\n        return dispatch('PLAY_MEDIA', {\n          mediaIndex: 0,\n          offset,\n          machineIdentifier,\n          metadata,\n          userInitiated: true,\n        });\n      }\n\n      default: {\n        return dispatch('SEND_CHOSEN_CLIENT_REQUEST', {\n          path: '/player/playback/skipNext',\n          params: {\n            wait: 0,\n          },\n        });\n      }\n    }\n  },\n\n  START_CLIENT_POLLER_IF_NEEDED: async ({\n    getters, commit, dispatch, rootGetters,\n  }) => {\n    if (getters.GET_CHOSEN_CLIENT_ID !== slPlayerClientId\n      && !getters.GET_CLIENT_POLLER_CANCEL_TOKEN) {\n      // eslint-disable-next-line new-cap\n      const cancelToken = new CAF.cancelToken();\n\n      commit('SET_CLIENT_POLLER_CANCEL_TOKEN', cancelToken);\n\n      const main = CAF(function* poller(signal) {\n        while (true) {\n          yield CAF.delay(signal, rootGetters['settings/GET_CLIENTPOLLINTERVAL']);\n\n          try {\n            yield dispatch('POLL_PLEX_CLIENT', signal);\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      });\n\n      try {\n        await main(cancelToken.signal);\n      } catch (e) {\n        console.debug('PLEX_TIMELINE_UPDATER canceled');\n      }\n    }\n  },\n\n  CANCEL_CLIENT_POLLER_IF_NEEDED: ({ getters, commit }) => {\n    if (getters.GET_CLIENT_POLLER_CANCEL_TOKEN) {\n      getters.GET_CLIENT_POLLER_CANCEL_TOKEN.abort();\n      commit('SET_CLIENT_POLLER_CANCEL_TOKEN', null);\n    }\n  },\n\n  RELOAD_ACTIVE_MEDIA_METADATA: async ({ getters, dispatch, commit }) => {\n    const metadata = await dispatch('plexservers/FETCH_PLEX_METADATA', {\n      machineIdentifier: getters.GET_ACTIVE_SERVER_ID,\n      ratingKey: getters.GET_ACTIVE_MEDIA_METADATA.ratingKey,\n    }, { root: true });\n    commit('SET_ACTIVE_MEDIA_METADATA', metadata);\n  },\n};\n","import { slPlayerClientId } from '@/player/constants';\n\nconst state = () => ({\n  clients: {\n    [slPlayerClientId]: {\n      provides: 'player',\n      clientIdentifier: slPlayerClientId,\n      platform: 'Web',\n      device: 'Web',\n      product: 'SyncLounge',\n      name: 'SyncLounge Player',\n      labels: [['Recommended', 'green']],\n      lastSeenAt: new Date().toISOString(),\n    },\n  },\n\n  chosenClientId: slPlayerClientId,\n  activeMediaMetadata: null,\n  activeServerId: null,\n  activePlayQueue: null,\n  activePlayQueueMachineIdentifier: null,\n\n  // Timeline storage only for plex clients. For slplayer, we query its state directly\n  plexClientTimeline: null,\n  plexClientTimelineCommmandId: null,\n  commandId: 0,\n\n  // Tracks the commandId of the timeline that was used to synchronize last, so it doesn't try and\n  // synchronize multiple times with the same data and instead waits for a fresh one\n  previousSyncTimelineCommandId: null,\n  clientPollerCancelToken: null,\n  lastPlayMediaCommandId: null,\n  latency: 0,\n});\n\nexport default state;\n","import Vue from 'vue';\nimport { slPlayerClientId } from '@/player/constants';\nimport stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  ADD_PLEX_CLIENT: (state, client) => {\n    Vue.set(state.clients, client.clientIdentifier, client);\n  },\n\n  DELETE_PLEX_CLIENT: (state, clientId) => {\n    Vue.delete(state.clients, clientId);\n  },\n\n  SET_CHOSEN_CLIENT_ID: (state, id) => {\n    state.chosenClientId = id;\n  },\n\n  SET_PLEX_CLIENT_TIMELINE: (state, timeline) => {\n    state.plexClientTimeline = timeline;\n  },\n\n  SET_ACTIVE_MEDIA_METADATA: (state, metadata) => {\n    state.activeMediaMetadata = metadata;\n  },\n\n  SET_ACTIVE_SERVER_ID: (state, id) => {\n    state.activeServerId = id;\n  },\n\n  SET_COMMAND_ID: (state, id) => {\n    state.commandId = id;\n  },\n\n  INCREMENT_COMMAND_ID: (state) => {\n    state.commandId += 1;\n  },\n\n  SET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID: (state, commandId) => {\n    state.previousSyncTimelineCommandId = commandId;\n  },\n\n  SET_CLIENT_CHOSEN_CONNECTION: (state, { clientIdentifier, chosenConnection }) => {\n    Vue.set(state.clients[clientIdentifier], 'chosenConnection', chosenConnection);\n  },\n\n  SET_PLEX_CLIENT_TIMELINE_COMMAND_ID: (state, id) => {\n    state.plexClientTimelineCommmandId = id;\n  },\n\n  SET_ACTIVE_PLAY_QUEUE: (state, queue) => {\n    state.activePlayQueue = queue;\n  },\n\n  SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER: (state, id) => {\n    state.activePlayQueueMachineIdentifier = id;\n  },\n\n  INCREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET: (state) => {\n    state.activePlayQueue.playQueueSelectedItemOffset += 1;\n  },\n\n  DECREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET: (state) => {\n    state.activePlayQueue.playQueueSelectedItemOffset -= 1;\n  },\n\n  SET_CLIENT_POLLER_CANCEL_TOKEN: (state, token) => {\n    state.clientPollerCancelToken = token;\n  },\n\n  SET_LAST_PLAY_MEDIA_COMMAND_ID: (state, id) => {\n    state.lastPlayMediaCommandId = id;\n  },\n\n  SET_LATENCY: (state, latency) => {\n    state.latency = latency;\n  },\n\n  UPDATE_SLPLAYER_LAST_SEEN_TO_NOW: (state) => {\n    state.clients[slPlayerClientId].lastSeenAt = new Date().toISOString();\n  },\n};\n","import { slPlayerClientId } from '@/player/constants';\n\nexport default {\n  GET_CHOSEN_CLIENT_ID: (state) => state.chosenClientId,\n\n  GET_PLEX_CLIENT_IDS: (state) => Object.keys(state.clients),\n\n  GET_PLEX_CLIENT: (state) => (clientIdentifier) => state\n    .clients[clientIdentifier],\n\n  GET_CHOSEN_CLIENT: (state) => state.clients[state.chosenClientId],\n\n  GET_PLEX_CLIENT_IDS_SORTED_BY_LAST_SEEN: (state) => Object.values(state.clients)\n    .sort((a, b) => -a.lastSeenAt.localeCompare(b.lastSeenAt))\n    .map((client) => client.clientIdentifier),\n\n  GET_ACTIVE_MEDIA_METADATA: (state) => state.activeMediaMetadata,\n\n  GET_ACTIVE_SERVER_ID: (state) => state.activeServerId,\n\n  GET_PLEX_CLIENT_TIMELINE: (state) => state.plexClientTimeline,\n\n  GET_ACTIVE_MEDIA_POLL_METADATA: (state, getters) => (getters.GET_ACTIVE_MEDIA_METADATA\n    ? {\n      title: getters.GET_ACTIVE_MEDIA_METADATA.title,\n      type: getters.GET_ACTIVE_MEDIA_METADATA.type,\n      grandparentTitle: getters.GET_ACTIVE_MEDIA_METADATA.grandparentTitle,\n      parentTitle: getters.GET_ACTIVE_MEDIA_METADATA.parentTitle,\n      ratingKey: getters.GET_ACTIVE_MEDIA_METADATA.ratingKey,\n      machineIdentifier: getters.GET_ACTIVE_MEDIA_METADATA.machineIdentifier,\n    }\n    : null),\n\n  GET_ADJUSTED_PLEX_CLIENT_POLL_DATA: (state, getters) => () => (getters.GET_PLEX_CLIENT_TIMELINE\n    ? ({\n      time: getters.GET_PLEX_CLIENT_TIMELINE.state === 'playing'\n        ? getters.GET_PLEX_CLIENT_TIMELINE.time + Date.now()\n          - getters.GET_PLEX_CLIENT_TIMELINE.updatedAt\n        : getters.GET_PLEX_CLIENT_TIMELINE.time,\n      duration: getters.GET_PLEX_CLIENT_TIMELINE.duration,\n      // Assume all other Plex clients only support playback rate of 1 (maybe this will change in\n      // the future)\n      playbackRate: 1,\n      state: getters.GET_PLEX_CLIENT_TIMELINE.state,\n    })\n    : null),\n\n  GET_COMMAND_ID: (state) => state.commandId,\n\n  GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID: (state) => state.previousSyncTimelineCommandId,\n\n  // TODO: come back and reallly examine this logic\n  ALREADY_SYNCED_ON_CURRENT_TIMELINE: (state, getters) => getters.GET_CHOSEN_CLIENT_ID\n    !== slPlayerClientId\n  && ((getters.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID === null\n    && getters.GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID !== null)\n    && getters.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID\n      <= getters.GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID),\n\n  GET_PLEX_CLIENT_TIMELINE_COMMAND_ID: (state) => state.plexClientTimelineCommmandId,\n\n  GET_ACTIVE_PLAY_QUEUE: (state) => state.activePlayQueue,\n\n  GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER: (state) => state.activePlayQueueMachineIdentifier,\n\n  GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM: (state, getters) => (getters.GET_ACTIVE_PLAY_QUEUE\n    ? getters.GET_ACTIVE_PLAY_QUEUE\n      .Metadata[getters.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset]\n    : null),\n\n  ACTIVE_PLAY_QUEUE_NEXT_ITEM_EXISTS: (state, getters) => (getters.GET_ACTIVE_PLAY_QUEUE\n    ? getters.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset\n      < (getters.GET_ACTIVE_PLAY_QUEUE.size - 1)\n    : false),\n\n  ACTIVE_PLAY_QUEUE_PREVIOUS_ITEM_EXISTS: (state, getters) => (getters.GET_ACTIVE_PLAY_QUEUE\n    ? getters.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset > 0\n    : false),\n\n  GET_CLIENT_POLLER_CANCEL_TOKEN: (state) => state.clientPollerCancelToken,\n\n  IS_THIS_MEDIA_PLAYING: (state, getters) => (media) => (getters.GET_ACTIVE_MEDIA_METADATA\n    ? getters.GET_ACTIVE_MEDIA_METADATA.machineIdentifier === media.machineIdentifier\n      && getters.GET_ACTIVE_MEDIA_METADATA.ratingKey === media.ratingKey\n    : false),\n\n  GET_LAST_PLAY_MEDIA_COMMAND_ID: (state) => state.lastPlayMediaCommandId,\n\n  GET_ACTIVE_MEDIA_METADATA_MARKERS: (state, getters) => getters\n    .GET_ACTIVE_MEDIA_METADATA?.Marker || [],\n\n  GET_ACTIVE_MEDIA_METADATA_INTRO_MARKER: (state, getters) => getters\n    .GET_ACTIVE_MEDIA_METADATA_MARKERS.find((marker) => marker.type === 'intro'),\n\n  GET_LATENCY: (state) => state.latency,\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n","// Choices should be an object where each entry is [id, weight], and weight is a number\nconst prefixSum = (arr) => arr.reduce(\n  (a, x, i) => [\n    ...a,\n    a.length > 0\n      ? x + a[i - 1]\n      : x,\n  ],\n  [],\n);\n\nconst weightedRandomChoice = (choices) => {\n  const keys = Object.keys(choices);\n  const weights = Object.values(choices);\n\n  const sum = weights.reduce((acc, el) => acc + el, 0);\n\n  const weightsPrefixSum = prefixSum(weights);\n  const rand = Math.random() * sum;\n\n  return keys[weightsPrefixSum.findIndex((el) => el > rand)];\n};\n\nexport default weightedRandomChoice;\n","import stringSimilarity from 'string-similarity';\n\n// Higher is closer\nconst scoreMedia = (result, hostTimeline) => {\n  const titleScore = stringSimilarity.compareTwoStrings(hostTimeline.title, result.title);\n\n  const parentTitleScore = (hostTimeline.parentTitle && result.parentTitle)\n    ? stringSimilarity.compareTwoStrings(hostTimeline.parentTitle, result.parentTitle)\n    : 0;\n\n  const grandparentTitleScore = (hostTimeline.grandparentTitle && result.grandparentTitle)\n    ? stringSimilarity.compareTwoStrings(hostTimeline.grandparentTitle, result.grandparentTitle)\n    : 0;\n\n  const typeScore = hostTimeline.type === result.type ? 1 : 0;\n\n  return titleScore + parentTitleScore + grandparentTitleScore + typeScore;\n};\n\nexport default scoreMedia;\n","import { randomInt } from '@/utils/lightlodash';\nimport { fetchJson, queryFetch } from '@/utils/fetchutils';\nimport weightedRandomChoice from '@/utils/weightedrandomchoice';\nimport scoreMedia from './mediascoring';\n\nconst playQueueParams = {\n  own: 1,\n  includeChapters: 1,\n  includeMarkers: 1,\n  includeGeolocation: 1,\n  includeExternalMedia: 1,\n};\n\nconst searchHubs = [\n  'movie',\n  'show',\n  'episode',\n];\n\nexport default {\n  FETCH_RANDOM_SECTION_ID: async ({ getters }, machineIdentifier) => {\n    const sectionId = weightedRandomChoice(getters.GET_SERVER_LIBRARY_SIZES(machineIdentifier));\n    if (!sectionId) {\n      throw new Error('No valid libraries found');\n    }\n\n    return sectionId;\n  },\n\n  FETCH_RANDOM_SERVER: async ({ getters }) => {\n    // Weight choice by the number of items in each server\n    const machineIdentifier = weightedRandomChoice(getters.GET_CONNECTABLE_SERVER_SIZES);\n    if (!machineIdentifier) {\n      throw new Error('No valid servers found');\n    }\n\n    return machineIdentifier;\n  },\n\n  FETCH_RANDOM_LIBRARY_ITEM: async ({ getters, dispatch },\n    { machineIdentifier, sectionId, signal }) => {\n    const randomItemIndex = randomInt(\n      getters.GET_SERVER_LIBRARY_SIZE({ machineIdentifier, sectionId }) - 1,\n    );\n\n    const [item] = await dispatch('FETCH_LIBRARY_CONTENTS', {\n      machineIdentifier,\n      sectionId,\n      start: randomItemIndex,\n      size: 1,\n      signal,\n    });\n\n    return item;\n  },\n\n  FETCH_RANDOM_ITEM: async ({ dispatch }, { machineIdentifier, sectionId, signal } = {}) => {\n    const chosenServerId = machineIdentifier || await dispatch('FETCH_RANDOM_SERVER');\n\n    const chosenSectionId = sectionId\n    || await dispatch('FETCH_RANDOM_SECTION_ID', chosenServerId);\n\n    const item = await dispatch('FETCH_RANDOM_LIBRARY_ITEM', {\n      machineIdentifier: chosenServerId,\n      sectionId: chosenSectionId,\n      signal,\n    });\n\n    return {\n      ...item,\n      machineIdentifier: chosenServerId,\n    };\n  },\n\n  FETCH_PLEX_SERVER: ({ getters, rootGetters }, {\n    machineIdentifier, path, params, manualConnection, ...rest\n  }) => {\n    const { accessToken, chosenConnection: { uri } } = manualConnection\n     || getters.GET_PLEX_SERVER(machineIdentifier);\n\n    return fetchJson(\n      `${uri}${path}`, {\n        ...rootGetters['plex/GET_PLEX_BASE_PARAMS'](accessToken),\n        ...params,\n      }, rest,\n    );\n  },\n\n  QUERY_PLEX_SERVER: ({ getters, rootGetters }, {\n    machineIdentifier, path, params, ...rest\n  }) => {\n    const { accessToken, chosenConnection: { uri } } = getters.GET_PLEX_SERVER(machineIdentifier);\n    return queryFetch(\n      `${uri}${path}`, {\n        ...rootGetters['plex/GET_PLEX_BASE_PARAMS'](accessToken),\n        ...params,\n      }, rest,\n    );\n  },\n\n  SEARCH_PLEX_SERVER: async ({ dispatch }, { query, machineIdentifier, signal }) => {\n    const { MediaContainer: { Metadata } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/search',\n      params: {\n        query,\n      },\n      signal,\n    });\n\n    if (!Metadata) {\n      return [];\n    }\n\n    return Metadata.map((result) => ({\n      ...result,\n      machineIdentifier,\n    }));\n  },\n\n  FETCH_PLEX_METADATA: async ({ dispatch }, { ratingKey, machineIdentifier, signal }) => {\n    const { MediaContainer: { Metadata: [item] } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: `/library/metadata/${ratingKey}`,\n      params: {\n        includeConcerts: 1,\n        includeExtras: 1,\n        includeOnDeck: 1,\n        includePopularLeaves: 1,\n        includePreferences: 1,\n        includeChapters: 1,\n        includeStations: 1,\n        includeExternalMedia: 1,\n        asyncAugmentMetadata: 1,\n        asyncRefreshLocalMediaAgent: 1,\n        asyncRefreshAnalysis: 1,\n        checkFiles: 1,\n        includeMarkers: 1,\n      },\n      signal,\n    });\n\n    return {\n      ...item,\n      machineIdentifier,\n    };\n  },\n\n  SEARCH_UNBLOCKED_PLEX_SERVERS: ({ getters, dispatch }, query) => Promise.allSettled(\n    getters.GET_UNBLOCKED_PLEX_SERVER_IDS.map((machineIdentifier) => dispatch(\n      'SEARCH_PLEX_SERVER', {\n        machineIdentifier,\n        query,\n      },\n    )),\n  ).then((results) => results.filter((result) => result.status === 'fulfilled')\n    .flatMap((result) => result.value)),\n\n  FIND_BEST_MEDIA_MATCH: async ({ getters, dispatch }, hostTimeline) => {\n    // If we have access the same server, play same content\n    if (getters.IS_PLEX_SERVER_UNBLOCKED(hostTimeline.machineIdentifier)) {\n      try {\n        const metadata = await dispatch('FETCH_PLEX_METADATA', {\n          ratingKey: hostTimeline.ratingKey,\n          machineIdentifier: hostTimeline.machineIdentifier,\n        });\n\n        return {\n          ...metadata,\n          mediaIndex: hostTimeline.mediaIndex,\n        };\n      } catch (e) {\n        console.warn('Error fetching metadata for same media as host', e);\n      }\n    }\n\n    const results = await dispatch('SEARCH_UNBLOCKED_PLEX_SERVERS', hostTimeline.title);\n    if (results.length <= 0) {\n      return null;\n    }\n\n    const bestResult = results.map((result) => ({\n      result,\n      score: scoreMedia(result, hostTimeline),\n    }))\n      .reduce((prev, current) => (prev.score > current.score ? prev : current)).result;\n\n    const metadata = await dispatch('FETCH_PLEX_METADATA', {\n      ratingKey: bestResult.ratingKey,\n      machineIdentifier: bestResult.machineIdentifier,\n    });\n\n    return metadata;\n  },\n\n  FETCH_ON_DECK: async ({ dispatch }, {\n    machineIdentifier, start, size, signal,\n  }) => {\n    const { MediaContainer: { Metadata } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/library/onDeck',\n      params: {\n        'X-Plex-Container-Start': start,\n        'X-Plex-Container-Size': size,\n      },\n      signal,\n    });\n\n    return Metadata?.map((item) => ({\n      machineIdentifier,\n      ...item,\n    })) || [];\n  },\n\n  FETCH_ALL_LIBRARIES: async ({ dispatch }, { machineIdentifier, signal, ...rest }) => {\n    const { MediaContainer: { Directory } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/library/sections',\n      signal,\n      ...rest,\n    });\n\n    return Object.fromEntries(\n      await Promise.all(\n        Directory.map(async (library) => [\n          library.key,\n          {\n            ...library,\n            size: await dispatch('FETCH_LIBRARY_SIZE', {\n              machineIdentifier,\n              sectionId: library.key,\n              signal,\n              ...rest,\n            }),\n          },\n        ]),\n      ),\n    );\n  },\n\n  FETCH_RECENTLY_ADDED_MEDIA: async ({ dispatch }, { machineIdentifier, signal }) => {\n    const { MediaContainer: { Metadata } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/library/recentlyAdded',\n      signal,\n    });\n\n    return Metadata?.map((item) => ({\n      machineIdentifier,\n      ...item,\n    })) || [];\n  },\n\n  FETCH_CHILDREN_CONTAINER: async ({ dispatch }, {\n    machineIdentifier, ratingKey, start, size, excludeAllLeaves, signal,\n  }) => {\n    const { MediaContainer } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: `/library/metadata/${ratingKey}/children`,\n      params: {\n        'X-Plex-Container-Start': start,\n        'X-Plex-Container-Size': size,\n        excludeAllLeaves,\n      },\n      signal,\n    });\n\n    // Add librarySectionID to all children\n    return {\n      ...MediaContainer,\n      Metadata: MediaContainer.Metadata?.map((child) => ({\n        librarySectionID: MediaContainer.librarySectionID,\n        machineIdentifier,\n        ...child,\n      })) || [],\n    };\n  },\n\n  FETCH_MEDIA_CHILDREN: async ({ dispatch }, params) => {\n    const { Metadata } = await dispatch('FETCH_CHILDREN_CONTAINER', params);\n    return Metadata;\n  },\n\n  FETCH_RELATED: async ({ dispatch }, {\n    machineIdentifier, ratingKey, count, signal,\n  }) => {\n    try {\n      const { MediaContainer: { Hub, librarySectionID } } = await dispatch('FETCH_PLEX_SERVER', {\n        machineIdentifier,\n        path: `/library/metadata/${ratingKey}/related`,\n        params: {\n          excludeFields: 'summary',\n          count,\n        },\n        signal,\n      });\n\n      // TODO: potentially include the other hubs too (related director etc...)\n      return Hub?.[0]?.Metadata?.map((child) => ({\n        librarySectionID,\n        machineIdentifier,\n        ...child,\n      })) || [];\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  },\n\n  FETCH_LIBRARY_ALL: async ({ dispatch }, {\n    machineIdentifier, sectionId, start, size, sort, signal, ...rest\n  }) => {\n    const { MediaContainer } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: `/library/sections/${sectionId}/all`,\n      params: {\n        'X-Plex-Container-Start': start,\n        'X-Plex-Container-Size': size,\n        ...(sort && { sort }),\n        includeCollections: 0,\n        includeAdvanced: 1,\n        includeMeta: 1,\n      },\n      signal,\n      ...rest,\n    });\n\n    return MediaContainer;\n  },\n\n  FETCH_LIBRARY_CONTENTS: async ({ dispatch }, params) => {\n    const { librarySectionID, Metadata } = await dispatch('FETCH_LIBRARY_ALL', params);\n\n    return Metadata.map((child) => ({\n      librarySectionID,\n      machineIdentifier: params.machineIdentifier,\n      ...child,\n    }));\n  },\n\n  FETCH_LIBRARY_SIZE: async ({ dispatch }, {\n    machineIdentifier, sectionId, signal, ...rest\n  }) => {\n    const { totalSize } = await dispatch('FETCH_LIBRARY_ALL', {\n      machineIdentifier,\n      sectionId,\n      start: 0,\n      size: 0,\n      signal,\n      ...rest,\n    });\n\n    return totalSize;\n  },\n\n  CREATE_PLAY_QUEUE: async ({ dispatch }, { machineIdentifier: id, ratingKey, signal }) => {\n    const { MediaContainer } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier: id,\n      method: 'POST',\n      path: '/playQueues',\n      params: {\n        type: 'video',\n        continuous: 1,\n        uri: `server://${id}/com.plexapp.plugins.library/library/metadata/${ratingKey}`,\n        repeat: 0,\n        ...playQueueParams,\n      },\n      signal,\n    });\n\n    return MediaContainer;\n  },\n\n  FETCH_PLAY_QUEUE: async ({ dispatch }, { machineIdentifier, playQueueID, signal }) => {\n    const { MediaContainer } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: `/playQueues/${playQueueID}`,\n      params: playQueueParams,\n      signal,\n    });\n\n    return MediaContainer;\n  },\n\n  MARK_WATCHED: ({ dispatch }, { machineIdentifier, ratingKey, signal }) => dispatch(\n    'FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/:/scrobble',\n      params: {\n        identifier: 'com.plexapp.plugins.library',\n        key: ratingKey,\n      },\n      signal,\n    },\n  ),\n\n  UPDATE_STREAM: ({ dispatch }, {\n    machineIdentifier, id, offset, signal,\n  }) => dispatch('QUERY_PLEX_SERVER', {\n    machineIdentifier,\n    method: 'PUT',\n    path: `/library/streams/${id}`,\n    params: {\n      offset,\n    },\n    signal,\n  }),\n\n  SET_MEDIA_AS_BACKGROUND: async ({ getters, commit }, media) => {\n    const url = getters.GET_MEDIA_BACKGROUND_URL(media);\n    commit('SET_BACKGROUND', url, { root: true });\n  },\n\n  FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE: async ({ dispatch }, params) => {\n    await dispatch('plex/FETCH_PLEX_DEVICES_IF_NEEDED', null, { root: true });\n    const item = await dispatch('FETCH_RANDOM_ITEM', params);\n    return dispatch('SET_MEDIA_AS_BACKGROUND', item);\n  },\n\n  SEARCH_PLEX_SERVER_HUB: async ({ dispatch }, {\n    query, machineIdentifier, signal, ...extra\n  }) => {\n    const { MediaContainer: { Hub } } = await dispatch('FETCH_PLEX_SERVER', {\n      machineIdentifier,\n      path: '/hubs/search',\n      params: {\n        ...extra,\n        query,\n        includeCollections: 0,\n      },\n      signal,\n    });\n\n    return Hub.filter(({ Metadata, type }) => Metadata && searchHubs.includes(type))\n      .map(({ Metadata, ...rest }) => ({\n        ...rest,\n        Metadata: Metadata.map((item) => ({\n          ...item,\n          machineIdentifier,\n        })),\n      }));\n  },\n};\n","const state = () => ({\n  servers: {},\n  lastServerId: null,\n  blockedServerIds: [],\n});\n\nexport default state;\n","import Vue from 'vue';\nimport stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_LAST_SERVER_ID: (state, id) => {\n    state.lastServerId = id;\n  },\n\n  ADD_PLEX_SERVER: (state, server) => {\n    Vue.set(state.servers, server.clientIdentifier, server);\n  },\n\n  DELETE_PLEX_SERVER: (state, serverId) => {\n    Vue.delete(state.servers, serverId);\n  },\n\n  SET_BLOCKED_SERVER_IDS: (state, blockedIds) => {\n    state.blockedServerIds = blockedIds;\n  },\n};\n","import { difference, intersection } from '@/utils/lightlodash';\nimport { makeUrl } from '@/utils/fetchutils';\n\nexport default {\n  GET_PLEX_SERVERS: (state) => Object.values(state.servers),\n\n  GET_PLEX_SERVER_IDS: (state) => Object.keys(state.servers),\n\n  GET_PLEX_SERVER: (state) => (machineIdentifier) => state\n    .servers[machineIdentifier],\n\n  GET_UNBLOCKED_PLEX_SERVER_IDS: (state, getters) => difference([\n    getters.GET_PLEX_SERVER_IDS,\n    getters.GET_BLOCKED_SERVER_IDS,\n  ]),\n\n  GET_CONNECTABLE_PLEX_SERVER_IDS: (state, getters) => getters.GET_PLEX_SERVER_IDS\n    .filter((id) => state.servers[id].chosenConnection),\n\n  IS_PLEX_SERVER_UNBLOCKED: (state, getters) => (machineIdentifier) => getters\n    .GET_UNBLOCKED_PLEX_SERVER_IDS.includes(machineIdentifier),\n\n  GET_LAST_SERVER_ID: (state, getters) => state.lastServerId || getters.GET_PLEX_SERVER_IDS?.[0],\n\n  GET_LAST_SERVER: (state, getters) => getters.GET_PLEX_SERVER(getters.GET_LAST_SERVER_ID),\n\n  DOES_USER_HAVE_AUTHORIZED_SERVER: (state, getters, rootState, rootGetters) => rootGetters\n    .GET_CONFIG?.authentication?.type.includes('server')\n  && intersection([\n    getters.GET_PLEX_SERVER_IDS,\n    rootGetters.GET_CONFIG.authentication.authorized,\n  ]).length > 0,\n\n  GET_MEDIA_IMAGE_URL: (state, getters, rootState, rootGetters) => ({\n    machineIdentifier, mediaUrl, width, height, blur,\n  }) => {\n    const server = getters.GET_PLEX_SERVER(machineIdentifier);\n\n    const params = {\n      ...rootGetters['plex/GET_PLEX_TOKEN_PARAMS'](server.accessToken),\n      url: mediaUrl,\n      width: Math.round(width),\n      height: Math.round(height),\n      ...(blur && { blur }),\n      upscale: 1,\n      minSize: 1,\n    };\n\n    return makeUrl(`${server.chosenConnection.uri}/photo/:/transcode/`, params);\n  },\n\n  GET_MEDIA_BACKGROUND_URL: (state, getters) => (\n    { machineIdentifier, art, thumb },\n  ) => getters.GET_MEDIA_IMAGE_URL({\n    machineIdentifier,\n    mediaUrl: art || thumb,\n    width: window.screen.width,\n    height: window.screen.height,\n    blur: 10,\n  }),\n\n  GET_BLOCKED_SERVER_IDS: (state) => state.blockedServerIds,\n\n  GET_SERVER_LIBRARY_SIZE: (state, getters) => ({ machineIdentifier, sectionId }) => getters\n    .GET_PLEX_SERVER(machineIdentifier).libraries[sectionId].size,\n\n  GET_SERVER_LIBRARY_SIZES: (state, getters) => (machineIdentifier) => Object.fromEntries(\n    Object.keys(getters.GET_PLEX_SERVER(machineIdentifier).libraries).map(\n      (sectionId) => [\n        sectionId,\n        getters.GET_SERVER_LIBRARY_SIZE({ machineIdentifier, sectionId }),\n      ],\n    ),\n  ),\n\n  GET_SERVER_SIZE: (state, getters) => (machineIdentifier) => Object.values(\n    getters.GET_SERVER_LIBRARY_SIZES(machineIdentifier),\n  ).reduce((a, b) => a + b, 0),\n\n  GET_CONNECTABLE_SERVER_SIZES: (state, getters) => Object.fromEntries(\n    getters.GET_CONNECTABLE_PLEX_SERVER_IDS.map(\n      (machineIdentifier) => [\n        machineIdentifier,\n        getters.GET_SERVER_SIZE(machineIdentifier),\n      ],\n    ),\n  ),\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n","// I really shouldn't be using this but I am\nconst Deferred = () => {\n  /* A method to resolve the associated Promise with the value passed.\n     * If the promise is already settled it does nothing.\n     *\n     * @param {anything} value : This value is used to resolve the promise\n     * If the value is a Promise then the associated promise assumes the state\n     * of Promise passed as value.\n     */\n  let resolve = null;\n\n  /* A method to reject the assocaited Promise with the value passed.\n     * If the promise is already settled it does nothing.\n     *\n     * @param {anything} reason: The reason for the rejection of the Promise.\n     * Generally its an Error object. If however a Promise is passed, then the Promise\n     * itself will be the reason for rejection no matter the state of the Promise.\n     */\n  let reject = null;\n\n  /* A newly created Promise object.\n     * Initially in pending state.\n     */\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return Object.freeze({\n    promise,\n    resolve,\n    reject,\n  });\n};\n\nexport default Deferred;\n","import { fetchBodyReader } from '@/utils/fetchutils';\n\nconst makeReaderDecoder = (encoding, reader) => {\n  // TODO: investivgate ignoreBOM. libjass had it but do I need or want it?\n  const decoder = new TextDecoder(encoding, { ignoreBOM: true });\n  const readAndDecode = async () => {\n    const { value, done } = await reader.read();\n    const text = value ? decoder.decode(value, { stream: !done }) : '';\n\n    return { text, done };\n  };\n\n  return readAndDecode;\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/read\nasync function* fetchLineGenerator(url, signal) {\n  const reader = await fetchBodyReader(url, null, { signal });\n\n  const readerDecoder = makeReaderDecoder('utf-8', reader);\n  let { text: buffer, done } = await readerDecoder();\n\n  while (true) {\n    const firstNewlineIndex = buffer.indexOf('\\n');\n    if (firstNewlineIndex === -1) {\n      // If no new line\n      if (done) {\n        // No more data.\n        yield buffer.length > 0\n          ? buffer\n          : null;\n\n        break;\n      } else {\n        // If reader isn't done, read more\n        let text;\n        // eslint-disable-next-line no-await-in-loop\n        ({ text, done } = await readerDecoder());\n        buffer += text;\n      }\n    } else {\n      // If we found a new line\n      yield buffer.substring(0, firstNewlineIndex);\n      buffer = buffer.substr(firstNewlineIndex + 1);\n    }\n  }\n}\n\nconst extractValue = async (nextPromise) => {\n  try {\n    const { done, value } = await nextPromise;\n    return done\n      ? null\n      : value;\n  } catch (e) {\n    return null;\n  }\n};\n\nconst resiliantStreamFactory = (url, signal) => {\n  const asyncGenerator = fetchLineGenerator(url, signal);\n\n  // Return it in a format that StreamParser expects\n  return {\n    nextLine: () => extractValue(asyncGenerator.next()),\n  };\n};\n\nexport default resiliantStreamFactory;\n","/* eslint-disable no-underscore-dangle */\n/**\n * An implementation of libjass.renderers.Clock that generates\n * {@link libjass.renderers.ClockEvent}s according to the state of a <video> element.\n *\n * @param {!HTMLVideoElement} video\n */\nexport default class VideoClock {\n  constructor(video, autoClock) {\n    this._autoClock = autoClock;\n    video.addEventListener('playing', () => this._autoClock.play(), false);\n    video.addEventListener('pause', () => this._autoClock.pause(), false);\n    video.addEventListener('seeking', () => this._autoClock.seeking(), false);\n    video.addEventListener('ratechange', () => this._autoClock.setRate(video.playbackRate), false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentTime() {\n    return this._autoClock.currentTime;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get enabled() {\n    return this._autoClock.enabled;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get paused() {\n    return this._autoClock.paused;\n  }\n\n  /**\n   * Gets the rate of the clock - how fast the clock ticks compared to real time.\n   *\n   * @type {number}\n   */\n  get rate() {\n    return this._autoClock.rate;\n  }\n\n  /**\n   * Enable the clock.\n   *\n   * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n   */\n  enable() {\n    return this._autoClock.enable();\n  }\n\n  /**\n   * Disable the clock.\n   *\n   * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n   */\n  disable() {\n    return this._autoClock.disable();\n  }\n\n  /**\n   * Toggle the clock.\n   */\n  toggle() {\n    if (this._autoClock.enabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Enable or disable the clock.\n   *\n   * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n   * @return {boolean} True if the clock is now in the given state, false if it was already in that\n   * state.\n   */\n  setEnabled(enabled) {\n    if (enabled) {\n      return this.enable();\n    }\n\n    return this.disable();\n  }\n\n  /**\n   * @param {number} type\n   * @param {!Function} listener\n   */\n  addEventListener(type, listener) {\n    this._autoClock.addEventListener(type, listener);\n  }\n}\n","import { makeUrl } from '@/utils/fetchutils';\nimport {\n  getControlsOffsetWithVisibility, isPaused, getPlaybackRate, getCurrentTimeMs, getDimensions,\n  insertElementBeforeVideo, getMediaElement, getCurrentTime,\n} from '@/player';\nimport resiliantStreamFactory from '@/utils/streams';\nimport { hexToLibjassColor, subtitleSettings, getBestOutlineColor } from '@/utils/subtitleutils';\nimport VideoClock from '@/utils/videoclock';\n\nlet videoClock = null;\nlet subtitleRenderer = null;\nlet assAbortController = null;\n\nconst handleStreamError = async (assPromise) => {\n  try {\n    await assPromise;\n  } catch (e) {\n    if (assAbortController) {\n      // If there is no abort controller, we have just aborted\n      // If there is one, then something went wrong\n      throw e;\n    }\n  }\n};\n\nexport default {\n  CACHE_ORIGINAL_SUBTITLE_RESOLUTION: ({ getters, commit }) => {\n    if (!getters.GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE\n      || !getters.GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE) {\n      commit('SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE',\n        subtitleRenderer.ass.properties.resolutionX);\n\n      commit('SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE',\n        subtitleRenderer.ass.properties.resolutionY);\n    }\n  },\n\n  SYNCHRONIZE_SUBTITLE_CLOCK: () => {\n    if (isPaused() && !videoClock.paused) {\n    // eslint-disable-next-line no-underscore-dangle\n      videoClock._autoClock.pause();\n    } else if (!isPaused() && videoClock.paused) {\n    // eslint-disable-next-line no-underscore-dangle\n      videoClock._autoClock.play();\n    }\n\n    if (getPlaybackRate() && !videoClock.rate) {\n    // eslint-disable-next-line no-underscore-dangle\n      videoClock._autoClock.setRate(getPlaybackRate());\n    }\n\n    if (getCurrentTimeMs() && !videoClock.currentTime) {\n    // eslint-disable-next-line no-underscore-dangle\n      videoClock._autoClock.seeking();\n    }\n  },\n\n  GET_OR_MAKE_VIDEO_CLOCK: async ({ getters, dispatch }) => {\n    const libjass = await import('synclounge-libjass');\n\n    if (!videoClock) {\n      videoClock = new VideoClock(\n        getMediaElement(),\n        new libjass.renderers.AutoClock(() => Math.max(getCurrentTime()\n          + (getters.GET_SUBTITLE_OFFSET / 1000), 0), 100),\n\n      );\n    }\n\n    await dispatch('SYNCHRONIZE_SUBTITLE_CLOCK');\n\n    return videoClock;\n  },\n\n  PUBLISH_SUBTITLE_POSITION: ({ getters }) => {\n    console.debug('PUBLISH_SUBTITLE_POSITION');\n    // eslint-disable-next-line no-underscore-dangle\n    subtitleRenderer.ass.styles.get('Default')._alignment = getters.GET_SUBTITLE_POSITION;\n  },\n\n  PUBLISH_SUBTITLE_COLOR: async ({ getters }) => {\n    console.debug('PUBLISH_SUBTITLE_COLOR');\n\n    const defaultStyle = subtitleRenderer.ass.styles.get('Default');\n    // eslint-disable-next-line no-underscore-dangle\n    defaultStyle._primaryColor = await hexToLibjassColor(getters.GET_SUBTITLE_COLOR);\n\n    // eslint-disable-next-line no-underscore-dangle\n    defaultStyle._outlineColor = await hexToLibjassColor(\n      // eslint-disable-next-line no-underscore-dangle\n      getBestOutlineColor(defaultStyle._primaryColor),\n    );\n  },\n\n  PUBLISH_SUBTITLE_SIZE: async ({ getters, dispatch }) => {\n    console.debug('PUBLISH_SUBTITLE_SIZE');\n\n    await dispatch('CACHE_ORIGINAL_SUBTITLE_RESOLUTION');\n\n    const assProperties = subtitleRenderer.ass.properties;\n\n    assProperties.resolutionX = getters.GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE\n      / getters.GET_SUBTITLE_SIZE;\n\n    assProperties.resolutionY = getters.GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE\n      / getters.GET_SUBTITLE_SIZE;\n  },\n\n  RERENDER_SUBTITLE_CONTAINER: async ({ dispatch }) => {\n    // Handle letterboxing around the video. If the width or height are greater than the video can\n    // be, then consider that dead space.\n    if (!subtitleRenderer) {\n      return;\n    }\n\n    const bottomOffset = getControlsOffsetWithVisibility();\n    console.debug('RERENDER_SUBTITLE_CONTAINER', bottomOffset);\n\n    const {\n      videoWidth, videoHeight, offsetWidth, offsetHeight,\n    } = getDimensions();\n\n    const ratio = Math.min(offsetWidth / videoWidth, (offsetHeight - bottomOffset) / videoHeight);\n    const subsWrapperWidth = videoWidth * ratio;\n    const subsWrapperHeight = videoHeight * ratio;\n    const subsWrapperLeft = (offsetWidth - subsWrapperWidth) / 2;\n    const subsWrapperTop = ((offsetHeight - bottomOffset) - subsWrapperHeight) / 2;\n\n    await dispatch('PUBLISH_SUBTITLE_COLOR');\n    await dispatch('PUBLISH_SUBTITLE_POSITION');\n    subtitleRenderer.resize(subsWrapperWidth, subsWrapperHeight, subsWrapperLeft, subsWrapperTop);\n  },\n\n  DESTROY_ASS: async ({ dispatch, commit }) => {\n    if (assAbortController) {\n      console.debug('DESTROY_ASS');\n      assAbortController.abort();\n      assAbortController = null;\n\n      if (subtitleRenderer) {\n        // It's possible we haven't finished making the renderer\n      // eslint-disable-next-line no-underscore-dangle\n        subtitleRenderer._ass._dialogues = [];\n        // eslint-disable-next-line no-underscore-dangle\n        subtitleRenderer._ass._attachments = [];\n\n        commit('SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE', null);\n        commit('SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE', null);\n\n        // Resizing clears out rendered subtitles\n        await dispatch('RERENDER_SUBTITLE_CONTAINER');\n      }\n    }\n  },\n\n  MAKE_ASS: async ({ getters }) => {\n    console.debug('MAKE_ASS');\n    const libjass = await import('synclounge-libjass');\n    assAbortController = new AbortController();\n\n    const stream = resiliantStreamFactory(\n      makeUrl(\n        getters.GET_SUBTITLE_BASE_URL,\n        getters.GET_DECISION_AND_START_PARAMS,\n      ),\n      assAbortController.signal,\n    );\n\n    const useSrtParser = getters.CAN_DIRECT_PLAY_SUBTITLES\n      && (getters.GET_SUBTITLE_STREAM.codec === 'srt'\n        || getters.GET_SELECTED_SUBTITLE_STREAM.codec === 'srt');\n\n    const parser = useSrtParser\n      ? new libjass.parser.SrtStreamParser(stream)\n      : new libjass.parser.StreamParser(stream);\n\n    if (!useSrtParser) {\n      // Purposefully not awaited because we never get the full file at once\n      // We still need to catch abort errors to clean up console\n      handleStreamError(parser.ass);\n    }\n\n    return useSrtParser\n      ? parser.ass\n      : parser.minimalASS;\n  },\n\n  INIT_SUBTITLE_RENDERER: async ({ dispatch }, ass) => {\n    console.debug('INIT_SUBTITLE_RENDERER');\n    const libjass = await import('synclounge-libjass');\n    subtitleRenderer = new libjass.renderers.WebRenderer(\n      ass,\n      await dispatch('GET_OR_MAKE_VIDEO_CLOCK'),\n      document.createElement('div'),\n      subtitleSettings,\n    );\n\n    insertElementBeforeVideo(subtitleRenderer.libjassSubsWrapper);\n  },\n\n  SET_SUBTITLE_URL: async ({ dispatch }) => {\n    await dispatch('DESTROY_ASS');\n\n    try {\n      const ass = await dispatch('MAKE_ASS');\n\n      if (subtitleRenderer) {\n        // eslint-disable-next-line no-underscore-dangle\n        subtitleRenderer._ass = ass;\n      } else {\n        await dispatch('INIT_SUBTITLE_RENDERER', ass);\n      }\n\n      await dispatch('PUBLISH_SUBTITLE_SIZE');\n      await dispatch('RERENDER_SUBTITLE_CONTAINER');\n    } catch (e) {\n      if (assAbortController) {\n        // If there is no abort controller, we have just aborted\n        // If there is one, then something went wrong\n        throw e;\n      }\n    }\n  },\n\n  DESTROY_SUBTITLES: async ({ dispatch }) => {\n    if (videoClock) {\n    // eslint-disable-next-line no-underscore-dangle\n      videoClock._autoClock._manualClock._eventListeners.clear();\n    }\n\n    await dispatch('DESTROY_ASS');\n\n    if (subtitleRenderer) {\n      subtitleRenderer.libjassSubsWrapper.remove();\n      subtitleRenderer = null;\n    }\n\n    videoClock = null;\n  },\n\n  CHANGE_SUBTITLE_COLOR: async ({ commit, dispatch }, color) => {\n    commit('SET_SUBTITLE_COLOR', color);\n    await dispatch('RERENDER_SUBTITLE_CONTAINER');\n  },\n\n  CHANGE_SUBTITLE_POSITION: async ({ commit, dispatch }, position) => {\n    commit('SET_SUBTITLE_POSITION', position);\n    await dispatch('RERENDER_SUBTITLE_CONTAINER');\n  },\n\n  CHANGE_SUBTITLE_SIZE: async ({ commit, dispatch }, size) => {\n    commit('SET_SUBTITLE_SIZE', size);\n    await dispatch('PUBLISH_SUBTITLE_SIZE');\n    await dispatch('RERENDER_SUBTITLE_CONTAINER');\n  },\n\n  CHANGE_SUBTITLE_OFFSET: async ({\n    getters, rootGetters, commit, dispatch,\n  }, offsetIncrement) => {\n    console.debug('CHANGE_SUBTITLE_OFFSET', offsetIncrement);\n    if (offsetIncrement === 0) {\n      // Reset\n      commit('SET_SUBTITLE_OFFSET', 0);\n    } else {\n      commit('SET_SUBTITLE_OFFSET', getters.GET_SUBTITLE_OFFSET + offsetIncrement);\n    }\n\n    // eslint-disable-next-line no-underscore-dangle\n    videoClock._autoClock.seeking();\n\n    // TODO: give this a signal\n    await dispatch('plexservers/UPDATE_STREAM', {\n      machineIdentifier: rootGetters['plexclients/GET_ACTIVE_SERVER_ID'],\n      id: getters.GET_SUBTITLE_STREAM.id,\n      offset: getters.GET_SUBTITLE_OFFSET,\n    }, { root: true });\n  },\n};\n","import CAF from 'caf';\n\nimport { getRandomPlexId } from '@/utils/random';\nimport { fetchJson, queryFetch } from '@/utils/fetchutils';\nimport {\n  play, pause, getDurationMs, getCurrentTimeMs, isTimeInBufferedRange,\n  isMediaElementAttached, isPlaying, isPresentationPaused, isBuffering, getVolume, isPaused,\n  waitForMediaElementEvent, destroy, cancelTrickPlay, load, setPlaybackRate, getPlaybackRate,\n  setCurrentTimeMs, setVolume, addEventListener, removeEventListener, areControlsShown,\n  getSmallPlayButton, getBigPlayButton, unload,\n} from '@/player';\nimport Deferred from '@/utils/deferredpromise';\nimport subtitleActions from './subtitleActions';\n\nexport default {\n  MAKE_TIMELINE_PARAMS: async ({ getters, rootGetters, dispatch }) => ({\n    ratingKey: rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].ratingKey,\n    key: rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].key,\n    // playbackTime: 591\n    playQueueItemID: rootGetters['plexclients/GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM'].playQueueItemID,\n    state: getters.GET_PLAYER_STATE,\n    hasMDE: 1,\n    time: Math.floor(await dispatch('FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK')),\n    duration: Math.floor(getDurationMs()),\n    'X-Plex-Session-Identifier': getters.GET_X_PLEX_SESSION_ID,\n    ...getters.GET_PART_PARAMS,\n  }),\n\n  FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK: ({ getters }) => (getters.GET_MASK_PLAYER_STATE\n    ? getters.GET_OFFSET_MS\n    : getCurrentTimeMs() || getters.GET_OFFSET_MS),\n\n  SEND_PLEX_DECISION_REQUEST: async ({ getters, commit }) => {\n    const data = await fetchJson(getters.GET_DECISION_URL, getters.GET_DECISION_AND_START_PARAMS);\n    commit('SET_PLEX_DECISION', data);\n    commit('SET_SUBTITLE_OFFSET', parseInt(getters.GET_SUBTITLE_STREAM?.offset || 0, 10));\n  },\n\n  CHANGE_MAX_VIDEO_BITRATE: async ({ commit, dispatch }, bitrate) => {\n    commit('settings/SET_SLPLAYERQUALITY', bitrate, { root: true });\n    await dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n  },\n\n  CHANGE_AUDIO_STREAM: async ({ getters, dispatch }, audioStreamID) => {\n    await queryFetch(getters.GET_PART_URL, {\n      audioStreamID,\n      ...getters.GET_PART_PARAMS,\n    }, { method: 'PUT' });\n\n    await dispatch('plexclients/RELOAD_ACTIVE_MEDIA_METADATA', null, { root: true });\n\n    // Redo src\n    await dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n  },\n\n  CHANGE_SUBTITLE_STREAM: async ({ getters, dispatch }, subtitleStreamID) => {\n    await queryFetch(getters.GET_PART_URL, {\n      subtitleStreamID,\n      ...getters.GET_PART_PARAMS,\n    }, { method: 'PUT' });\n\n    await dispatch('plexclients/RELOAD_ACTIVE_MEDIA_METADATA', null, { root: true });\n\n    // Redo src\n    await dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n  },\n\n  CHANGE_MEDIA_INDEX: async ({ commit, dispatch }, index) => {\n    commit('SET_MEDIA_INDEX', index);\n    await dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n  },\n\n  // Changes the player src to the new one and restores the time afterwards\n  UPDATE_PLAYER_SRC_AND_KEEP_TIME: async ({ commit, dispatch }) => {\n    commit('SET_OFFSET_MS', await dispatch('FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK'));\n    await dispatch('CHANGE_PLAYER_SRC');\n  },\n\n  CHANGE_SUBTITLES: async ({ getters, dispatch }) => {\n    if (getters.IS_USING_NATIVE_SUBTITLES) {\n      await dispatch('SET_SUBTITLE_URL');\n    } else {\n      await dispatch('DESTROY_ASS');\n    }\n  },\n\n  CHANGE_PLAYER_SRC: async ({ getters, commit, dispatch }) => {\n    console.debug('CHANGE_PLAYER_SRC');\n\n    // Abort subtitle requests now or else we get ugly errors from the server closing it.\n    await dispatch('DESTROY_ASS');\n\n    if (getters.GET_FORCE_TRANSCODE_RETRY) {\n      commit('SET_FORCE_TRANSCODE_RETRY', false);\n    }\n\n    commit('SET_SESSION', getRandomPlexId());\n\n    try {\n      await dispatch('SEND_PLEX_DECISION_REQUEST');\n      await dispatch('LOAD_PLAYER_SRC');\n    } catch (e) {\n      if (getters.GET_FORCE_TRANSCODE) {\n        throw e;\n      }\n      console.warn('Error loading stream from plex. Retrying with forced transcoding', e);\n\n      // Try again with forced transcoding\n      commit('SET_FORCE_TRANSCODE_RETRY', true);\n      await dispatch('SEND_PLEX_DECISION_REQUEST');\n      await dispatch('LOAD_PLAYER_SRC');\n    }\n\n    await dispatch('CHANGE_SUBTITLES');\n\n    // TODO: potentially avoid sending updates on media change since we already do that\n    if (getters.GET_MASK_PLAYER_STATE) {\n      commit('SET_MASK_PLAYER_STATE', false);\n    }\n  },\n\n  SEND_PLEX_TIMELINE_UPDATE: async ({ getters, dispatch },\n    { signal, ...extraParams } = {}) => queryFetch(\n    getters.GET_TIMELINE_URL,\n    {\n      ...await dispatch('MAKE_TIMELINE_PARAMS'),\n      ...extraParams,\n    },\n    { signal },\n  ),\n\n  FETCH_TIMELINE_POLL_DATA: async ({ getters, dispatch }) => (isMediaElementAttached()\n    ? {\n      time: await dispatch('FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK'),\n      duration: getDurationMs(),\n      playbackRate: getPlaybackRate(),\n      state: getters.GET_PLAYER_STATE,\n    }\n    : {\n      time: getters.GET_OFFSET_MS,\n      duration: 0,\n      playbackRate: 0,\n      state: getters.GET_PLAYER_STATE,\n    }),\n\n  HANDLE_PLAYER_PLAYING: async ({ dispatch }) => {\n    if (isPlaying()) {\n      await dispatch('CHANGE_PLAYER_STATE', 'playing');\n    }\n  },\n\n  HANDLE_PLAYER_PAUSE: async ({ getters, dispatch }) => {\n    if (isBuffering()) {\n      // If we are buffering, then we don't need to actually change the state, but we should send\n      // out a new state update to synclounge since we have seeked\n\n      // Wait for seeking since time isn't updated until we get that event\n      dispatch('PROCESS_STATE_UPDATE_ON_PLAYER_EVENT', {\n        type: 'seeking',\n        signal: getters.GET_PLAYER_DESTROY_CANCEL_TOKEN.signal,\n      });\n      await dispatch('synclounge/PROCESS_PLAYER_STATE_UPDATE', null, { root: true });\n    } else if (isPresentationPaused()) {\n      await dispatch('CHANGE_PLAYER_STATE', 'paused');\n    }\n  },\n\n  HANDLE_PLAYER_BUFFERING: async ({ dispatch }, event) => {\n    if (event.buffering) {\n      await dispatch('CHANGE_PLAYER_STATE', 'buffering');\n    } else {\n      // Report back if player is playing\n      await dispatch('CHANGE_PLAYER_STATE', isPaused() ? 'paused' : 'playing');\n    }\n  },\n\n  HANDLE_PLAYER_VOLUME_CHANGE: ({ commit }) => {\n    commit('settings/SET_SLPLAYERVOLUME', getVolume(), { root: true });\n  },\n\n  HANDLE_PLAYER_CLICK: async ({ dispatch }, e) => {\n    if (!e.target.classList.contains('shaka-close-button')) {\n      await dispatch('SEND_PARTY_PLAY_PAUSE');\n    }\n  },\n\n  HANDLE_SEEKING: async ({ dispatch }) => {\n    console.debug('HANDLE_SEEKING');\n    await dispatch('DESTROY_ASS');\n  },\n\n  HANDLE_SEEKED: async ({ dispatch }) => {\n    console.debug('HANDLE_SEEKED');\n    await dispatch('CHANGE_SUBTITLES');\n  },\n\n  HANDLE_PICTURE_IN_PICTURE_CHANGE: async ({ getters, commit, dispatch }) => {\n    commit('SET_IS_IN_PICTURE_IN_PICTURE', document.pictureInPictureElement != null);\n    if (getters.IS_IN_PICTURE_IN_PICTURE && getters.IS_USING_NATIVE_SUBTITLES) {\n      // If we are in picture and picture, we must burn subtitles\n      // Redo src\n      await dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n    }\n  },\n\n  HANDLE_ERROR: ({ dispatch }, e) => {\n    console.error(e);\n    // Restart source\n    return dispatch('UPDATE_PLAYER_SRC_AND_KEEP_TIME');\n  },\n\n  PRESS_PLAY: () => {\n    play();\n  },\n\n  PRESS_PAUSE: () => {\n    pause();\n  },\n\n  PRESS_STOP: async ({ dispatch }) => {\n    await dispatch('CHANGE_PLAYER_STATE', 'stopped');\n  },\n\n  SOFT_SEEK: ({ commit }, seekToMs) => {\n    console.debug('SOFT_SEEK', seekToMs);\n    if (!isTimeInBufferedRange(seekToMs)) {\n      throw new Error('Soft seek not allowed outside of buffered range');\n    }\n\n    commit('SET_OFFSET_MS', seekToMs);\n    setCurrentTimeMs(seekToMs);\n  },\n\n  PROCESS_STATE_UPDATE_ON_PLAYER_EVENT: async ({ dispatch }, { signal, type, noSync }) => {\n    await waitForMediaElementEvent({ signal, type });\n    await dispatch('synclounge/PROCESS_PLAYER_STATE_UPDATE', noSync, { root: true });\n  },\n\n  SPEED_SEEK: async ({ dispatch, rootGetters }, { cancelSignal, seekToMs }) => {\n    console.debug('SPEED_SEEK', seekToMs);\n    const currentTimeMs = await dispatch('FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK');\n    const difference = seekToMs - currentTimeMs;\n    const rate = 1 + (Math.sign(difference) * rootGetters.GET_CONFIG.slplayer_speed_sync_rate);\n    const timeUntilSynced = (seekToMs - currentTimeMs) / (rate - 1);\n    console.log('ms until synced: ', timeUntilSynced);\n\n    const main = CAF(function* main(signal) {\n      setPlaybackRate(rate);\n\n      try {\n        yield Promise.all([\n          CAF.delay(signal, timeUntilSynced),\n\n          dispatch('PROCESS_STATE_UPDATE_ON_PLAYER_EVENT', {\n            signal,\n            type: 'ratechange',\n            noSync: true,\n          }),\n        ]);\n      } finally {\n        setPlaybackRate(1);\n\n        // TODO: not sure what to do since I need to do this cancellable task in the cleanup\n        dispatch('PROCESS_STATE_UPDATE_ON_PLAYER_EVENT', {\n          signal,\n          type: 'ratechange',\n          // Don't sync if aborted\n          noSync: signal.aborted,\n        });\n      }\n    });\n\n    return main(cancelSignal);\n  },\n\n  NORMAL_SEEK: async ({ rootGetters, commit }, { cancelSignal, seekToMs }) => {\n    console.debug('NORMAL_SEEK', seekToMs);\n    commit('SET_OFFSET_MS', seekToMs);\n    setCurrentTimeMs(seekToMs);\n\n    const timeoutToken = CAF.timeout(rootGetters.GET_CONFIG.slplayer_seek_timeout,\n      'Normal seek took too long');\n\n    const anySignal = CAF.signalRace([\n      cancelSignal,\n      timeoutToken.signal,\n    ]);\n\n    const main = CAF(function* main(signal) {\n      yield waitForMediaElementEvent({ signal, type: 'seeked' });\n    });\n\n    try {\n      await main(anySignal);\n    } finally {\n      timeoutToken.abort();\n    }\n  },\n\n  SPEED_OR_NORMAL_SEEK: async ({ dispatch, getters, rootGetters }, { cancelSignal, seekToMs }) => {\n    // TODO: maybe separate functino for skip ahead probably lol\n    // TODO: rewrite this entirely.\n    // TODO: check the logic here to make sense if the seek time is in the past ...\n\n    // TODO: make sure this doesnt happen when buffering\n    const currentTimeMs = await dispatch('FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK');\n    const difference = seekToMs - currentTimeMs;\n    if (Math.abs(difference) <= rootGetters.GET_CONFIG.slplayer_speed_sync_max_diff\n        && getters.GET_PLAYER_STATE === 'playing') {\n      return dispatch('SPEED_SEEK', { cancelSignal, seekToMs });\n    }\n\n    return dispatch('NORMAL_SEEK', { cancelSignal, seekToMs });\n  },\n\n  START_PERIODIC_PLEX_TIMELINE_UPDATE: async ({ commit, dispatch, rootGetters }) => {\n    // eslint-disable-next-line new-cap\n    const cancelToken = new CAF.cancelToken();\n\n    commit('SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN', cancelToken);\n\n    const main = CAF(function* plexTimelineUpdater(signal) {\n      while (true) {\n        yield CAF.delay(signal, rootGetters.GET_CONFIG.slplayer_plex_timeline_update_interval);\n\n        try {\n          yield dispatch('SEND_PLEX_TIMELINE_UPDATE', signal);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    });\n\n    try {\n      await main(cancelToken.signal);\n    } catch (e) {\n      console.debug('PLEX_TIMELINE_UPDATER canceled');\n    }\n  },\n\n  START_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL: ({ commit, rootGetters }) => {\n    commit('SET_PLAYER_CONTROLS_SHOWN_INTERVAL', setInterval(() => {\n      commit('UPDATE_PLAYER_CONTROLS_SHOWN', areControlsShown());\n    }, rootGetters.GET_CONFIG.slplayer_controls_visible_checker_interval));\n  },\n\n  CHANGE_PLAYER_STATE: async ({ commit, dispatch }, state) => {\n    console.debug('CHANGE_PLAYER_STATE', state);\n    commit('SET_PLAYER_STATE', state);\n    const plexTimelineUpdatePromise = dispatch('SEND_PLEX_TIMELINE_UPDATE');\n    if (state !== 'stopped') {\n      await dispatch('synclounge/PROCESS_PLAYER_STATE_UPDATE', null, { root: true });\n    }\n\n    await plexTimelineUpdatePromise;\n  },\n\n  LOAD_PLAYER_SRC: async ({ getters }) => {\n    // TODO: potentailly unload if already loaded to avoid load interrupted errors\n    // However, while its loading, potentially   reporting the old time...\n    await unload();\n    await load(getters.GET_SRC_URL);\n\n    if (getters.GET_OFFSET_MS > 0) {\n      setCurrentTimeMs(getters.GET_OFFSET_MS);\n    }\n  },\n\n  NAVIGATE_AND_INITIALIZE_PLAYER: ({ commit }) => {\n    console.debug('NAVIGATE_AND_INITIALIZE_PLAYER');\n    // I don't really like this. I'd rather have the player be part of the main app rather than a\n    // vue route\n    // TODO: above\n\n    // TODO: this is bad practice, so if you know a better way...\n    const deferred = Deferred();\n\n    commit('SET_PLAYER_INITIALIZED_DEFERRED_PROMISE', deferred);\n    commit('SET_NAVIGATE_TO_PLAYER', true, { root: true });\n\n    return deferred.promise;\n  },\n\n  INIT_PLAYER_STATE: async ({\n    getters, rootGetters, commit, dispatch,\n  }) => {\n    console.debug('INIT_PLAYER_STATE');\n\n    // eslint-disable-next-line new-cap\n    commit('SET_PLAYER_DESTROY_CANCEL_TOKEN', new CAF.cancelToken());\n    try {\n      await dispatch('REGISTER_PLAYER_EVENTS');\n      await dispatch('START_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL');\n      setVolume(rootGetters['settings/GET_SLPLAYERVOLUME']);\n      await dispatch('CHANGE_PLAYER_SRC');\n\n      // Purposefully not awaited\n      dispatch('START_PERIODIC_PLEX_TIMELINE_UPDATE');\n    } catch (e) {\n      if (getters.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE) {\n        // TODO: potentially close player\n        getters.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE.reject(e);\n        commit('SET_PLAYER_INITIALIZED_DEFERRED_PROMISE', null);\n      }\n    }\n\n    if (getters.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE) {\n      getters.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE.resolve();\n      commit('SET_PLAYER_INITIALIZED_DEFERRED_PROMISE', null);\n    }\n\n    commit('SET_IS_PLAYER_INITIALIZED', true);\n  },\n\n  CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE: ({ getters, commit }) => {\n    if (getters.GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN) {\n      getters.GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN.abort();\n      commit('SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN', null);\n    }\n  },\n\n  DESTROY_PLAYER_STATE: async ({ getters, commit, dispatch }) => {\n    console.debug('DESTROY_PLAYER_STATE');\n    getters.GET_PLAYER_DESTROY_CANCEL_TOKEN.abort();\n    commit('SET_PLAYER_DESTROY_CANCEL_TOKEN', null);\n    commit('SET_FORCE_TRANSCODE_RETRY', false);\n\n    commit('STOP_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL');\n    commit('UPDATE_PLAYER_CONTROLS_SHOWN', false);\n    await dispatch('UNREGISTER_PLAYER_EVENTS');\n    await dispatch('CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE');\n\n    commit('plexclients/SET_ACTIVE_MEDIA_METADATA', null, { root: true });\n    commit('plexclients/SET_ACTIVE_SERVER_ID', null, { root: true });\n    // Leaving play queue around for possible upnext\n    commit('SET_IS_PLAYER_INITIALIZED', false);\n    commit('SET_IS_IN_PICTURE_IN_PICTURE', false);\n    await dispatch('DESTROY_SUBTITLES');\n    commit('SET_SUBTITLE_OFFSET', 0);\n    await destroy();\n    commit('SET_OFFSET_MS', 0);\n\n    // Send out stop media update\n    await dispatch('synclounge/PROCESS_MEDIA_UPDATE', null, { root: true });\n  },\n\n  REGISTER_PLAYER_EVENTS: ({ commit, dispatch }) => {\n    const bufferingListener = (e) => dispatch('HANDLE_PLAYER_BUFFERING', e);\n    addEventListener('buffering', bufferingListener);\n    commit('SET_BUFFERING_EVENT_LISTENER', bufferingListener);\n\n    const clickListener = (e) => dispatch('HANDLE_PLAYER_CLICK', e);\n    getSmallPlayButton().addEventListener('click', clickListener);\n    getBigPlayButton().addEventListener('click', clickListener);\n    commit('SET_CLICK_EVENT_LISTENER', clickListener);\n\n    const errorListener = (e) => dispatch('HANDLE_ERROR', e);\n    addEventListener('error', errorListener);\n    commit('SET_ERROR_EVENT_LISTENER', errorListener);\n  },\n\n  UNREGISTER_PLAYER_EVENTS: ({ getters, commit }) => {\n    removeEventListener('buffering', getters.GET_BUFFERING_EVENT_LISTENER);\n    commit('SET_BUFFERING_EVENT_LISTENER', null);\n\n    getSmallPlayButton().removeEventListener('click', getters.GET_CLICK_EVENT_LISTENER);\n    getBigPlayButton().removeEventListener('click', getters.GET_CLICK_EVENT_LISTENER);\n    commit('SET_CLICK_EVENT_LISTENER', null);\n\n    removeEventListener('buffering', getters.GET_ERROR_EVENT_LISTENER);\n    commit('SET_ERROR_EVENT_LISTENER', null);\n  },\n\n  PLAY_PAUSE_VIDEO: async ({ dispatch }) => {\n    // TODO: probably move into player file\n    if (!getDurationMs()) {\n      // Can't play yet.  Ignore.\n      return;\n    }\n\n    cancelTrickPlay();\n\n    if (isPresentationPaused()) {\n      await dispatch('PRESS_PLAY');\n    } else {\n      await dispatch('PRESS_PAUSE');\n    }\n  },\n\n  SEND_PARTY_PLAY_PAUSE: async ({ dispatch }) => {\n    // If the player was actually paused (and not just paused for seeking)\n    await dispatch('synclounge/sendPartyPause', isPresentationPaused(), { root: true });\n  },\n\n  PLAY_NEXT: async ({ dispatch, commit }) => {\n    console.debug('slplayer/PLAY_NEXT');\n    commit('plexclients/INCREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET', null, { root: true });\n    await dispatch('PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM');\n  },\n\n  PLAY_PREVIOUS: async ({ dispatch, commit }) => {\n    commit('plexclients/DECREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET', null, { root: true });\n    await dispatch('PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM');\n  },\n\n  PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM: async ({ dispatch, commit, rootGetters }) => {\n    await dispatch('CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE');\n    await dispatch('SEND_PLEX_TIMELINE_UPDATE', {\n      state: 'stopped',\n      continuing: 1,\n    });\n\n    await dispatch('plexclients/UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM', null,\n      { root: true });\n    // TODO: maybe plex indicates ongoing media index?\n    commit('SET_MEDIA_INDEX', 0);\n    commit('SET_OFFSET_MS',\n      rootGetters['plexclients/GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM'].viewOffset || 0);\n    commit('SET_MASK_PLAYER_STATE', true);\n    await dispatch('synclounge/PROCESS_MEDIA_UPDATE', true, { root: true });\n\n    await dispatch('CHANGE_PLAYER_SRC');\n\n    // Purposefully not awaited\n    dispatch('START_PERIODIC_PLEX_TIMELINE_UPDATE');\n\n    await dispatch('plexclients/UPDATE_ACTIVE_PLAY_QUEUE', null, { root: true });\n  },\n\n  SKIP_INTRO: async ({ dispatch, commit, rootGetters }) => {\n    const introEnd = rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA_INTRO_MARKER']\n      .endTimeOffset;\n    console.debug('SKIP_INTRO', introEnd);\n    await dispatch('DISPLAY_NOTIFICATION', {\n      text: 'Skipping intro',\n      color: 'info',\n    }, { root: true });\n\n    commit('SET_OFFSET_MS', introEnd);\n    setCurrentTimeMs(introEnd);\n  },\n\n  ...subtitleActions,\n};\n","import { getRandomPlexId } from '@/utils/random';\nimport { subtitlePositions, subtitleSizes, subtitleColors } from '@/utils/subtitleutils';\n\nconst state = () => ({\n  session: null,\n  xplexsessionId: getRandomPlexId(),\n  plexDecision: null,\n  mediaIndex: 0,\n  offsetMs: 0,\n  playerState: 'stopped',\n  playerControlsShown: false,\n  playerControlsShownInterval: null,\n  bufferingEventListener: null,\n  clickEventListener: null,\n  errorEventListener: null,\n  plexTimelineUpdaterCancelToken: null,\n  playerDestroyCancelToken: null,\n  isPlayerInitialized: false,\n  playerInitializedDeferredPromise: null,\n\n  // This is used to signal whether to mask the player state (time, etc) when sending updates\n  // before the media is loaded\n  maskPlayerState: false,\n  isInPictureInPicture: false,\n\n  // Subtitle state\n  originalSubtitleResolutionXCache: null,\n  originalSubtitleResolutionYCache: null,\n\n  subtitleSize: subtitleSizes.Normal,\n  subtitlePosition: subtitlePositions.Bottom,\n  subtitleColor: subtitleColors.White,\n  subtitleOffset: 0,\n  streamingProtocol: 'dash',\n  forceTranscodeRetry: false,\n});\n\nexport default state;\n","import stateFactory from './state';\n\nexport default {\n  RESET: (state) => {\n    Object.assign(state, stateFactory());\n  },\n\n  SET_PLAYER_STATE: (state, playerState) => {\n    state.playerState = playerState;\n  },\n\n  SET_SESSION: (state, session) => {\n    state.session = session;\n  },\n\n  SET_OFFSET_MS: (state, offset) => {\n    state.offsetMs = offset;\n  },\n\n  SET_MEDIA_INDEX: (state, index) => {\n    state.mediaIndex = index;\n  },\n\n  SET_PLEX_DECISION: (state, decision) => {\n    state.plexDecision = decision;\n  },\n\n  // DOM attributes aren't reactive so you have to update this periodically\n  UPDATE_PLAYER_CONTROLS_SHOWN: (state, shown) => {\n    state.playerControlsShown = shown;\n  },\n\n  SET_PLAYER_CONTROLS_SHOWN_INTERVAL: (state, interval) => {\n    state.playerControlsShownInterval = interval;\n  },\n\n  STOP_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL: (state) => {\n    clearInterval(state.playerControlsShownInterval);\n    state.playerControlsShownInterval = null;\n  },\n\n  SET_BUFFERING_EVENT_LISTENER: (state, listener) => {\n    state.bufferingEventListener = listener;\n  },\n\n  SET_CLICK_EVENT_LISTENER: (state, listener) => {\n    state.clickEventListener = listener;\n  },\n\n  SET_ERROR_EVENT_LISTENER: (state, listener) => {\n    state.errorEventListener = listener;\n  },\n\n  SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN: (state, token) => {\n    state.plexTimelineUpdaterCancelToken = token;\n  },\n\n  SET_PLAYER_DESTROY_CANCEL_TOKEN: (state, token) => {\n    state.playerDestroyCancelToken = token;\n  },\n\n  SET_IS_PLAYER_INITIALIZED: (state, isInitialized) => {\n    state.isPlayerInitialized = isInitialized;\n  },\n\n  SET_PLAYER_INITIALIZED_DEFERRED_PROMISE: (state, deferred) => {\n    state.playerInitializedDeferredPromise = deferred;\n  },\n\n  SET_MASK_PLAYER_STATE: (state, mask) => {\n    state.maskPlayerState = mask;\n  },\n\n  SET_IS_IN_PICTURE_IN_PICTURE: (state, isIn) => {\n    state.isInPictureInPicture = isIn;\n  },\n\n  SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE: (state, resolution) => {\n    state.originalSubtitleResolutionXCache = resolution;\n  },\n\n  SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE: (state, resolution) => {\n    state.originalSubtitleResolutionYCache = resolution;\n  },\n\n  SET_SUBTITLE_SIZE: (state, size) => {\n    state.subtitleSize = size;\n  },\n\n  SET_SUBTITLE_POSITION: (state, position) => {\n    state.subtitlePosition = position;\n  },\n\n  SET_SUBTITLE_COLOR: (state, color) => {\n    state.subtitleColor = color;\n  },\n\n  SET_SUBTITLE_OFFSET: (state, offset) => {\n    state.subtitleOffset = offset;\n  },\n\n  SET_STREAMING_PROTOCOL: (state, protocol) => {\n    state.streamingProtocol = protocol;\n  },\n\n  SET_FORCE_TRANSCODE_RETRY: (state, force) => {\n    state.forceTranscodeRetry = force;\n  },\n};\n","const h264Profiles = {\n  unknown: 0,\n  simple: 66,\n  base: 66,\n  main: 77,\n  high: 100,\n  422: 122,\n  high10: 110,\n  444: 144,\n  extended: 88,\n  scalablebase: 83,\n  scalablehigh: 86,\n  multiviewhigh: 118,\n  stereohigh: 128,\n  constrainedbase: 256,\n  ucconstrainedhigh: 257,\n  ucscalableconstrainedbase: 258,\n  ucscalableconstrainedhigh: 259,\n};\n\nconst getH264Mime = (videoProfile, level) => {\n  // https://blog.pearce.org.nz/2013/11/what-does-h264avc1-codecs-parameters.html\n  // Making avc1.PPCCLL\n  const profile = h264Profiles[videoProfile.toLowerCase()] || 0;\n  const ppcc = profile.toString(16).padStart(2, '0').padEnd(4, '0');\n  // Note: I'm ignoring the constraint_set flags because I appear I don't really need to set them\n  // and it looks like the microsoft profiles may set them too\n\n  const ee = level.toString(16).padStart(2, '0');\n\n  return `video/mp4; codecs=\"avc1.${ppcc}${ee}\"`;\n};\n\nexport const isVideoSupported = ({ codec, profile, level }) => {\n  console.log('isVideoSupported', codec);\n  switch (codec) {\n    case 'h264': {\n      return MediaSource.isTypeSupported(getH264Mime(profile, level));\n    }\n\n    case 'av1': {\n      // TODO: replace with proper AV1 mime type forming\n      return MediaSource.isTypeSupported('video/mp4; codecs=\"av01.0.00M.08\"');\n    }\n\n    default: {\n      return MediaSource.isTypeSupported(`video/mp4; codecs=\"${codec}`);\n    }\n  }\n};\n\nconst aacProfiles = {\n  main: 1,\n  lc: 2,\n  ssr: 3,\n  ltp: 4,\n  sbr: 5,\n  scalable: 6,\n  // TODO: fill out the rest based on how plex reports the profiles\n  ps: 29,\n};\n\nconst getAACMime = (profile) => {\n  const aacProfileNum = aacProfiles[profile] || 0;\n  return `audio/mp4; codecs=\"mp4a.40.${aacProfileNum}\"`;\n};\n\nexport const isAudioSupported = ({ codec, profile }) => {\n  console.log('isAudioSupported', codec);\n  switch (codec) {\n    case 'aac': {\n      return MediaSource.isTypeSupported(getAACMime(profile));\n    }\n\n    default: {\n      return MediaSource.isTypeSupported(`audio/mp4; codecs=\"${codec}`);\n    }\n  }\n};\n\nconst supportedContainers = [\n  'mp4',\n  'webm',\n  'ogg',\n  'wav',\n];\n\nexport const isContainerSupported = ({ container }) => supportedContainers.includes(container);\n","const makeQualityTemplate = (label, maxVideoBitrate) => ({\n  label, maxVideoBitrate,\n});\n\nconst qualities = [\n  makeQualityTemplate('Original', null),\n  makeQualityTemplate('20 Mbps 1080p', 20000),\n  makeQualityTemplate('12 Mbps 1080p', 12000),\n  makeQualityTemplate('10 Mbps 1080p', 10000),\n  makeQualityTemplate('8 Mbps 1080p', 8000),\n  makeQualityTemplate('4 Mbps 720p', 4000),\n  makeQualityTemplate('3 Mbps 720p', 3000),\n  makeQualityTemplate('2 Mbps 720p', 2000),\n  makeQualityTemplate('1.5 Mbps 480p', 1500),\n  makeQualityTemplate('720 Kbps', 720),\n  makeQualityTemplate('320 Kbps', 320),\n  makeQualityTemplate('208 Kbps', 208),\n  makeQualityTemplate('96 Kbps', 96),\n  makeQualityTemplate('64 Kbps', 64),\n];\n\nexport default qualities;\n","import { makeUrl } from '@/utils/fetchutils';\nimport { protocolExtension } from '@/utils/streamingprotocols';\nimport contenttitleutils from '@/utils/contenttitleutils';\nimport { isVideoSupported, isAudioSupported, isContainerSupported } from '@/utils/mediasupport';\nimport qualities from './qualities';\n\nconst buggyChromeBitrate = 23000;\n\nexport default {\n  GET_PLEX_DECISION: (state) => state.plexDecision,\n\n  IS_IN_BUGGY_CHROME_STATE: (state, getters, rootState, rootGetters) => (\n    rootGetters.GET_BROWSER.name === 'chrome'\n      || rootGetters.GET_BROWSER.name === 'edge-chromium')\n    && (rootGetters['settings/GET_SLPLAYERQUALITY'] == null\n      || rootGetters['settings/GET_SLPLAYERQUALITY'] > buggyChromeBitrate)\n    && rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ?.Media?.[getters.GET_MEDIA_INDEX]?.bitrate > buggyChromeBitrate,\n\n  // TODO: Remove this hack when this issue is fixed\n  // https://forums.plex.tv/t/plex-skipping-forward-by-a-few-seconds-on-web-player/402112\n  GET_STREAMING_PROTOCOL: (state, getters) => (getters.IS_IN_BUGGY_CHROME_STATE\n    ? 'hls'\n    : state.streamingProtocol),\n\n  GET_PLEX_SERVER: (state, getters, rootState, rootGetters) => rootGetters[\n    'plexservers/GET_PLEX_SERVER'](rootGetters['plexclients/GET_ACTIVE_SERVER_ID']),\n\n  GET_PLEX_SERVER_ACCESS_TOKEN: (state, getters) => (getters.GET_PLEX_SERVER\n    ? getters.GET_PLEX_SERVER.accessToken\n    : undefined),\n\n  // TODO: move this stuff into plexservers probably\n  GET_PLEX_SERVER_URL: (state, getters) => (getters.GET_PLEX_SERVER\n    ? getters.GET_PLEX_SERVER.chosenConnection.uri\n    : undefined),\n\n  // eslint-disable-next-line no-nested-ternary\n  GET_PLEX_SERVER_LOCATION: (state, getters) => (getters.GET_PLEX_SERVER\n    ? getters.GET_PLEX_SERVER.publicAddressMatches === '1'\n      ? 'lan'\n      : 'wan'\n    : undefined),\n\n  GET_PART_ID: (state, getters, rootState, rootGetters) => (\n    rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ? rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n        .Media[getters.GET_MEDIA_INDEX].Part[0].id\n      : null),\n\n  GET_DECISION_PART: (state, getters) => getters.GET_PLEX_DECISION?.MediaContainer\n    ?.Metadata?.[0]?.Media?.[0].Part?.[0],\n\n  IS_DECISION_DIRECT_PLAY: (state, getters) => getters.GET_DECISION_PART?.decision === 'directplay',\n\n  GET_SRC_PATH: (state, getters) => (getters.IS_DECISION_DIRECT_PLAY\n    ? getters.GET_DECISION_PART?.key\n    : `/video/:/transcode/universal/start.${protocolExtension[getters.GET_STREAMING_PROTOCOL]}`),\n\n  GET_SRC_URL: (state, getters) => makeUrl(\n    `${getters.GET_PLEX_SERVER_URL}${getters.GET_SRC_PATH}`,\n    getters.GET_DECISION_AND_START_PARAMS,\n  ),\n\n  GET_SUBTITLE_BASE_URL: (state, getters) => (getters.CAN_DIRECT_PLAY_SUBTITLES\n    ? `${getters.GET_PLEX_SERVER_URL}${getters.GET_SUBTITLE_STREAM.key}`\n    : `${getters.GET_PLEX_SERVER_URL}/video/:/transcode/universal/subtitles`),\n\n  GET_DECISION_URL: (state, getters) => `${getters.GET_PLEX_SERVER_URL\n  }/video/:/transcode/universal/decision`,\n\n  GET_PART_URL: (state, getters) => `${getters.GET_PLEX_SERVER_URL\n  }/library/parts/${getters.GET_PART_ID}`,\n\n  GET_TIMELINE_URL: (state, getters) => `${getters.GET_PLEX_SERVER_URL}/:/timeline`,\n\n  GET_PART: (state, getters, rootState, rootGetters) => rootGetters[\n    'plexclients/GET_ACTIVE_MEDIA_METADATA']?.Media?.[getters.GET_MEDIA_INDEX]?.Part?.[0],\n\n  GET_STREAMS: (state, getters) => getters.GET_PART?.Stream || [],\n\n  GET_SELECTED_SUBTITLE_STREAM: (state, getters) => getters.GET_STREAMS\n    ?.find(({ streamType, selected }) => streamType === 3 && selected),\n\n  CAN_DIRECT_PLAY_SUBTITLES: (state, getters) => {\n    if (getters.SHOULD_FORCE_BURN_SUBTITLES) {\n      return false;\n    }\n\n    const { key, codec } = getters.GET_SELECTED_SUBTITLE_STREAM;\n    // TODO: examine if I can only direct play with sidecar subtitles\n    return key && (codec === 'srt' || codec === 'ass');\n  },\n\n  CAN_DIRECT_PLAY: (state, getters, rootState, rootGetters) => {\n    if (!isContainerSupported(getters.GET_PART)) {\n      console.log(`CAN_DIRECT_PLAY: container not supported: ${getters.GET_PART.container}`);\n      return false;\n    }\n\n    const videoStream = getters.GET_STREAMS.find(({ streamType }) => streamType === 1);\n\n    // If bitrate of file is higher than our limit, then we can't\n    if (rootGetters['settings/GET_SLPLAYERQUALITY']\n      && rootGetters['settings/GET_SLPLAYERQUALITY'] < videoStream?.bitrate) {\n      console.debug('CAN_DIRECT_PLAY: false because video quality higher than desired');\n      return false;\n    }\n\n    if (getters.GET_SELECTED_SUBTITLE_STREAM) {\n      if (getters.SHOULD_FORCE_BURN_SUBTITLES) {\n        console.debug('CAN_DIRECT_PLAY: false because subtitles are set to be burned');\n        return false;\n      }\n\n      if (!getters.CAN_DIRECT_PLAY_SUBTITLES) {\n        console.debug(\n          'CAN_DIRECT_PLAY: false because subtitles enabled with incompatible codec or embedded',\n        );\n        return false;\n      }\n    }\n\n    if (!isVideoSupported(videoStream)) {\n      console.debug('CAN_DIRECT_PLAY: false video codec not supported');\n      return false;\n    }\n\n    const audioStreams = getters.GET_STREAMS.filter(({ streamType }) => streamType === 2);\n    const anyAudioSupported = audioStreams.some(isAudioSupported);\n\n    if (audioStreams.length > 0 && !anyAudioSupported) {\n      console.debug('CAN_DIRECT_PLAY: false audio codec not supported');\n      return false;\n    }\n\n    console.debug('CAN_DIRECT_PLAY: true');\n    return true;\n  },\n\n  GET_DECISION_STREAMS: (state, getters) => getters.GET_DECISION_PART?.Stream || [],\n\n  GET_SUBTITLE_STREAMS: (state, getters) => Array.of(({\n    id: 0,\n    text: 'None',\n  })).concat(getters.GET_STREAMS\n    .filter(({ streamType }) => streamType === 3) // Subtitles are type 3\n    .map(({ id, displayTitle }) => ({ id, text: displayTitle }))),\n\n  GET_AUDIO_STREAMS: (state, getters) => getters.GET_STREAMS\n    .filter(({ streamType }) => streamType === 2) // Audio streams are type 2\n    .map(({\n      id, displayTitle,\n    }) => ({ id, text: displayTitle })),\n\n  GET_MEDIA_LIST: (state, getters, rootState, rootGetters) => (\n    rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ? rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].Media.map(\n        ({ videoResolution, bitrate }, index) => ({\n          index,\n          text: `${Math.round(bitrate / 100) / 10} Mbps, ${videoResolution}p`,\n        }),\n      ) : []),\n\n  GET_QUALITIES: () => qualities,\n\n  GET_AUDIO_STREAM_ID: (state, getters) => {\n    const selectedAudioStream = getters.GET_DECISION_STREAMS\n      .find((stream) => stream.streamType === '2' && stream.selected === '1');\n    return selectedAudioStream ? parseInt(selectedAudioStream.id, 10) : 0;\n  },\n\n  GET_SUBTITLE_STREAM: (state, getters) => getters.GET_DECISION_STREAMS\n    .find((stream) => stream.streamType === '3' && stream.selected === '1'),\n\n  GET_SUBTITLE_STREAM_ID: (state, getters) => (getters.GET_SUBTITLE_STREAM\n    ? parseInt(getters.GET_SUBTITLE_STREAM.id, 10)\n    : 0),\n\n  GET_MEDIA_INDEX: (state) => state.mediaIndex,\n\n  GET_RELATIVE_THUMB_URL: (state, getters, rootState, rootGetters) => (\n    rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ? rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].grandparentThumb\n      || rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].thumb\n      : null),\n\n  GET_THUMB_URL: (state, getters, rootState, rootGetters) => (getters.GET_PLEX_SERVER\n    ? rootGetters['plexservers/GET_MEDIA_IMAGE_URL']({\n      machineIdentifier: rootGetters['plexclients/GET_ACTIVE_SERVER_ID'],\n      mediaUrl: getters.GET_RELATIVE_THUMB_URL,\n      width: 200,\n      height: 200,\n    })\n    : null),\n\n  GET_OFFSET_MS: (state) => state.offsetMs,\n\n  GET_PLAYER_STATE: (state) => state.playerState,\n\n  GET_TITLE: (state, getters, rootState, rootGetters) => (\n    rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ? contenttitleutils.getTitle(rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'])\n      : null),\n\n  GET_SECONDARY_TITLE: (state, getters, rootState, rootGetters) => (\n    rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA']\n      ? contenttitleutils.getSecondaryTitle(rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'])\n      : null),\n\n  GET_PART_PARAMS: (state, getters, rootState, rootGetters) => rootGetters[\n    'plex/GET_PLEX_BASE_PARAMS'](getters.GET_PLEX_SERVER_ACCESS_TOKEN),\n\n  GET_PLEX_PROFILE_EXTRAS: (state, getters, rootState, rootGetters) => {\n    const base = 'append-transcode-target-codec('\n      + `type=videoProfile&context=streaming&audioCodec=aac&protocol=${\n        getters.GET_STREAMING_PROTOCOL})`;\n    return rootGetters['settings/GET_SLPLAYERQUALITY']\n      ? `${base\n      }+add-limitation(scope=videoCodec&scopeName=*&type=upperBound&name=video.bitrate&value=${\n        rootGetters['settings/GET_SLPLAYERQUALITY']}&replace=true)`\n      : base;\n  },\n\n  SHOULD_FORCE_BURN_SUBTITLES: (state, getters) => getters.IS_IN_PICTURE_IN_PICTURE,\n\n  GET_SUBTITLE_PARAMS: (state, getters) => {\n    if (!getters.GET_SELECTED_SUBTITLE_STREAM || getters.CAN_DIRECT_PLAY\n      || getters.CAN_DIRECT_PLAY_SUBTITLES) {\n      return {\n        subtitles: 'none',\n      };\n    }\n\n    if (getters.SHOULD_FORCE_BURN_SUBTITLES) {\n      return {\n        subtitles: 'burn',\n      };\n    }\n\n    return {\n      subtitles: 'auto',\n      advancedSubtitles: 'text',\n    };\n  },\n\n  GET_DECISION_AND_START_PARAMS: (state, getters, rootState, rootGetters) => ({\n    hasMDE: 1,\n    path: rootGetters['plexclients/GET_ACTIVE_MEDIA_METADATA'].key,\n    mediaIndex: getters.GET_MEDIA_INDEX,\n    // TODO: investigate multipart file support\n    partIndex: 0,\n    protocol: getters.GET_STREAMING_PROTOCOL,\n    fastSeek: 1,\n    directPlay: getters.CAN_DIRECT_PLAY ? 1 : 0,\n    directStream: getters.GET_FORCE_TRANSCODE ? 0 : 1,\n    subtitleSize: 100,\n    audioBoost: 100,\n    location: getters.GET_PLEX_SERVER_LOCATION,\n    // only include if not null\n    ...rootGetters['settings/GET_SLPLAYERQUALITY'] && {\n      maxVideoBitrate: rootGetters['settings/GET_SLPLAYERQUALITY'],\n    },\n    addDebugOverlay: 0,\n\n    // TODO: figure out how to make autoAdjustQuality work\n    autoAdjustQuality: 0,\n    directStreamAudio: getters.GET_FORCE_TRANSCODE ? 0 : 1,\n    mediaBufferSize: 102400, // ~100MB (same as what Plex Web uses)\n    session: state.session,\n    ...getters.GET_SUBTITLE_PARAMS,\n    'Accept-Language': 'en',\n    'X-Plex-Session-Identifier': getters.GET_X_PLEX_SESSION_ID,\n    'X-Plex-Client-Profile-Extra': getters.GET_PLEX_PROFILE_EXTRAS,\n    'X-Plex-Incomplete-Segments': 1,\n    ...rootGetters['plex/GET_PLEX_BASE_PARAMS'](getters.GET_PLEX_SERVER_ACCESS_TOKEN),\n  }),\n\n  ARE_PLAYER_CONTROLS_SHOWN: (state) => state.playerControlsShown,\n\n  GET_X_PLEX_SESSION_ID: (state) => state.xplexsessionId,\n\n  GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN: (state) => state.plexTimelineUpdaterCancelToken,\n\n  GET_PLAYER_DESTROY_CANCEL_TOKEN: (state) => state.playerDestroyCancelToken,\n\n  GET_BUFFERING_EVENT_LISTENER: (state) => state.bufferingEventListener,\n\n  GET_CLICK_EVENT_LISTENER: (state) => state.clickEventListener,\n\n  GET_ERROR_EVENT_LISTENER: (state) => state.errorEventListener,\n\n  IS_PLAYER_INITIALIZED: (state) => state.isPlayerInitialized,\n\n  GET_PLAYER_INITIALIZED_DEFERRED_PROMISE: (state) => state.playerInitializedDeferredPromise,\n\n  GET_MASK_PLAYER_STATE: (state) => state.maskPlayerState,\n\n  IS_IN_PICTURE_IN_PICTURE: (state) => state.isInPictureInPicture,\n\n  GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE: (state) => state.originalSubtitleResolutionXCache,\n\n  GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE: (state) => state.originalSubtitleResolutionYCache,\n\n  GET_SUBTITLE_SIZE: (state) => state.subtitleSize,\n\n  GET_SUBTITLE_POSITION: (state) => state.subtitlePosition,\n\n  GET_SUBTITLE_COLOR: (state) => state.subtitleColor,\n\n  IS_USING_NATIVE_SUBTITLES: (state, getters) => getters.GET_SUBTITLE_STREAM_ID\n    && !getters.GET_SUBTITLE_STREAM?.burn,\n\n  GET_SUBTITLE_OFFSET: (state) => state.subtitleOffset,\n\n  IS_SUBTITLE_STREAM_NATIVE_SIDECAR: (state, getters) => getters.IS_USING_NATIVE_SUBTITLES\n   && getters.GET_SUBTITLE_STREAM?.file,\n\n  GET_FORCE_TRANSCODE_RETRY: (state) => state.forceTranscodeRetry,\n\n  GET_FORCE_TRANSCODE: (state, getters, rootState, rootGetters) => getters.GET_FORCE_TRANSCODE_RETRY\n    || rootGetters['settings/GET_SLPLAYERFORCETRANSCODE'],\n};\n","import actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n","import synclounge from './synclounge';\nimport settings from './settings';\nimport plex from './plex';\nimport plexclients from './plexclients';\nimport plexservers from './plexservers';\nimport slplayer from './slplayer';\n\nexport default {\n  synclounge,\n  plex,\n  plexclients,\n  plexservers,\n  settings,\n  slplayer,\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\n\nimport actions from './actions';\nimport state from './state';\nimport mutations from './mutations';\nimport getters from './getters';\nimport modules from './modules';\n\nVue.use(Vuex);\n\nconst persistedState = createPersistedState({\n  paths: [\n    'isLibraryListView',\n\n    'settings',\n\n    'plex.user',\n    'plex.plexAuthToken',\n    'plex.clientIdentifier',\n    'plex.areDevicesCached',\n\n    'plexclients.clients',\n\n    'plexservers.servers',\n    'plexservers.lastServerId',\n    'plexservers.blockedServerIds',\n\n    'synclounge.areNotificationsEnabled',\n    'synclounge.areSoundNotificationsEnabled',\n\n    'slplayer.subtitleSize',\n    'slplayer.subtitlePosition',\n    'slplayer.subtitleColor',\n    'slplayer.streamingProtocol',\n  ],\n});\n\nconst store = new Vuex.Store({\n  strict: process.env.NODE_ENV !== 'production',\n  state,\n  mutations,\n  actions,\n  getters,\n  modules,\n  plugins: [\n    persistedState,\n  ],\n});\n\nexport default store;\n","export const subtitleSettings = {\n  preciseOutlines: true,\n};\n\nexport const subtitlePositions = {\n  Top: 8,\n  Middle: 5,\n  Bottom: 2,\n};\n\nexport const subtitleSizes = {\n  Tiny: 0.5,\n  Small: 0.75,\n  Normal: 1,\n  Large: 1.25,\n  Huge: 2,\n};\n\nexport const subtitleColors = {\n  White: 'FFFFFF',\n  Yellow: 'FFEE00',\n  Black: '000000',\n  Cyan: '00FFFF',\n  Blue: '0000FF',\n  Green: '00FF00',\n  Magenta: 'EE00EE',\n  Red: 'FF0000',\n  Gray: '808080',\n};\n\n// from http://www.w3.org/TR/WCAG20/#relativeluminancedef\nconst relativeLuminanceW3C = (R8bit, G8bit, B8bit) => {\n  const RsRGB = R8bit / 255;\n  const GsRGB = G8bit / 255;\n  const BsRGB = B8bit / 255;\n\n  const R = (RsRGB <= 0.03928) ? RsRGB / 12.92 : ((RsRGB + 0.055) / 1.055) ** 2.4;\n  const G = (GsRGB <= 0.03928) ? GsRGB / 12.92 : ((GsRGB + 0.055) / 1.055) ** 2.4;\n  const B = (BsRGB <= 0.03928) ? BsRGB / 12.92 : ((BsRGB + 0.055) / 1.055) ** 2.4;\n\n  // For the sRGB colorspace, the relative luminance of a color is defined as:\n  const L = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n\n  return L;\n};\n\n// https://stackoverflow.com/a/3943023\nexport const getBestOutlineColor = ({ red, green, blue }) => (\n  relativeLuminanceW3C(red, green, blue) > 0.179\n    ? subtitleColors.Black\n    : subtitleColors.White);\n\nexport const hexToLibjassColor = async (hex) => {\n  const libjass = await import('synclounge-libjass');\n\n  const aRgbHex = hex.match(/.{1,2}/g);\n\n  return new libjass.parts.Color(\n    parseInt(aRgbHex[0], 16),\n    parseInt(aRgbHex[1], 16),\n    parseInt(aRgbHex[2], 16),\n    1,\n  );\n};\n","export const streamingProtocols = [\n  'dash',\n  'hls',\n];\n\nexport const protocolExtension = {\n  dash: 'mpd',\n  hls: 'm3u8',\n};\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'md',\n  },\n\n  theme: {\n    dark: true,\n    options: {\n      customProperties: true,\n    },\n\n    themes: {\n      dark: {\n        primary: '#e5a00d',\n      },\n    },\n  },\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('TheSidebarLeft'),_c('router-view',{attrs:{\"name\":\"rightSidebar\"}}),_c('v-app-bar',{staticStyle:{\"z-index\":\"5\"},attrs:{\"app\":\"\",\"scroll-off-screen\":\"\",\"scroll-threshold\":1},scopedSlots:_vm._u([(_vm.showAppBarExtension)?{key:\"extension\",fn:function(){return [_c('TheAppBarCrumbs'),_c('v-spacer'),_c('router-view',{staticStyle:{\"max-width\":\"400px\"},attrs:{\"name\":\"searchBar\"}}),_c('router-view',{attrs:{\"name\":\"appBarView\"}})]},proxy:true}:null],null,true)},[_c('v-app-bar-nav-icon',{on:{\"click\":_vm.SET_LEFT_SIDEBAR_OPEN}}),_c('router-link',{attrs:{\"to\":{ name: 'RoomCreation'}}},[_c('picture',[_c('source',{attrs:{\"srcset\":require(\"@/assets/images/logos/logo-small-light.png\"),\"media\":_vm.smallLogoMedia}}),_c('img',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"height\":\"42\",\"src\":require(\"@/assets/images/logos/logo-long-light.png\")}})])]),(_vm.showNowPlaying)?_c('TheNowPlayingChip',{staticClass:\"pl-4\"}):_vm._e(),_c('v-spacer'),_c('v-toolbar-items',[(_vm.inviteUrl)?_c('v-btn',{attrs:{\"color\":\"primary\",\"raised\":\"\"},on:{\"click\":function($event){return _vm.copyToClipboard(_vm.inviteUrl)}}},[_vm._v(\" Invite \")]):_vm._e(),_c('v-btn',{staticClass:\"hidden-lg-and-up\",attrs:{\"icon\":\"\"},on:{\"click\":_vm.toggleFullScreen}},[_c('v-icon',[_vm._v(\"fullscreen\")])],1),_vm._l((_vm.links),function(item){return _c('v-btn',{key:item.title,staticClass:\"hidden-sm-and-down\",attrs:{\"small\":\"\",\"tag\":\"a\",\"text\":\"\",\"href\":item.href,\"target\":item.target}},[_vm._v(\" \"+_vm._s(item.title)+\" \")])}),_c('DonateDialog',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._g(_vm._b({staticClass:\"hidden-sm-and-down\",attrs:{\"small\":\"\",\"text\":\"\"}},'v-btn',attrs,false),on),[_vm._v(\" Donate ♥ \")])]}}])})],2),_c('router-view',{attrs:{\"name\":\"rightSidebarButton\"}})],1),_c('v-main',{staticClass:\"main-content\",attrs:{\"app\":\"\"}},[_c('v-container',{staticClass:\"pa-0\",attrs:{\"align\":\"start\",\"fluid\":\"\"}},[_c('v-img',{attrs:{\"src\":_vm.GET_BACKGROUND,\"height\":_vm.bgHeight},on:{\"load\":_vm.backgroundLoad,\"error\":_vm.backgroundError}},[_c('v-sheet',{staticClass:\"overflow-y-auto pa-3\",attrs:{\"color\":_vm.sheetColor,\"height\":_vm.bgHeight}},[(!_vm.GET_CONFIG)?_c('v-container',{attrs:{\"fill-height\":\"\"}},[_c('v-row',{staticClass:\"pt-4 text-center\",attrs:{\"justify\":\"center\",\"align\":\"center\"}},[_c('v-col',[_c('v-progress-circular',{staticClass:\"amber--text\",attrs:{\"indeterminate\":\"\",\"size\":\"60\"}})],1)],1)],1):_c('router-view'),_c('v-snackbar',{attrs:{\"value\":_vm.GET_SNACKBAR_OPEN,\"color\":_vm.GET_SNACKBAR_MESSAGE.color,\"bottom\":\"\",\"timeout\":\"4000\",\"content-class\":\"text-center\"},on:{\"input\":_vm.SET_SNACKBAR_OPEN}},[_vm._v(\" \"+_vm._s(_vm.GET_SNACKBAR_MESSAGE.text)+\" \")]),(_vm.GET_UP_NEXT_POST_PLAY_DATA)?_c('TheUpnextDialog'):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-app>\n    <TheSidebarLeft />\n    <router-view name=\"rightSidebar\" />\n\n    <v-app-bar\n      app\n      scroll-off-screen\n      :scroll-threshold=\"1\"\n      style=\"z-index: 5;\"\n    >\n      <v-app-bar-nav-icon @click=\"SET_LEFT_SIDEBAR_OPEN\" />\n\n      <router-link\n        :to=\"{ name: 'RoomCreation'}\"\n      >\n        <picture>\n          <source\n            srcset=\"@/assets/images/logos/logo-small-light.png\"\n            :media=\"smallLogoMedia\"\n          >\n          <img\n            height=\"42\"\n            src=\"@/assets/images/logos/logo-long-light.png\"\n            style=\"vertical-align: middle;\"\n          >\n        </picture>\n      </router-link>\n\n      <TheNowPlayingChip\n        v-if=\"showNowPlaying\"\n        class=\"pl-4\"\n      />\n\n      <v-spacer />\n\n      <v-toolbar-items>\n        <v-btn\n          v-if=\"inviteUrl\"\n          color=\"primary\"\n          raised\n          @click=\"copyToClipboard(inviteUrl)\"\n        >\n          Invite\n        </v-btn>\n\n        <v-btn\n          class=\"hidden-lg-and-up\"\n          icon\n          @click=\"toggleFullScreen\"\n        >\n          <v-icon>fullscreen</v-icon>\n        </v-btn>\n\n        <v-btn\n          v-for=\"item in links\"\n          :key=\"item.title\"\n          small\n          tag=\"a\"\n          class=\"hidden-sm-and-down\"\n          text\n          :href=\"item.href\"\n          :target=\"item.target\"\n        >\n          {{ item.title }}\n        </v-btn>\n\n        <DonateDialog v-slot=\"{ on, attrs }\">\n          <v-btn\n            small\n            class=\"hidden-sm-and-down\"\n            text\n            v-bind=\"attrs\"\n            v-on=\"on\"\n          >\n            Donate ♥\n          </v-btn>\n        </DonateDialog>\n      </v-toolbar-items>\n\n      <router-view name=\"rightSidebarButton\" />\n\n      <template\n        v-if=\"showAppBarExtension\"\n        #extension\n      >\n        <TheAppBarCrumbs />\n\n        <v-spacer />\n        <router-view\n          style=\"max-width: 400px;\"\n          name=\"searchBar\"\n        />\n\n        <router-view name=\"appBarView\" />\n      </template>\n    </v-app-bar>\n\n    <v-main\n      class=\"main-content\"\n      app\n    >\n      <v-container\n        align=\"start\"\n        class=\"pa-0\"\n        fluid\n      >\n        <v-img\n          :src=\"GET_BACKGROUND\"\n          :height=\"bgHeight\"\n          @load=\"backgroundLoad\"\n          @error=\"backgroundError\"\n        >\n          <v-sheet\n            :color=\"sheetColor\"\n            class=\"overflow-y-auto pa-3\"\n            :height=\"bgHeight\"\n          >\n            <v-container\n              v-if=\"!GET_CONFIG\"\n              fill-height\n            >\n              <v-row\n                justify=\"center\"\n                align=\"center\"\n                class=\"pt-4 text-center\"\n              >\n                <v-col>\n                  <v-progress-circular\n                    indeterminate\n                    size=\"60\"\n                    class=\"amber--text\"\n                  />\n                </v-col>\n              </v-row>\n            </v-container>\n\n            <router-view v-else />\n\n            <v-snackbar\n              :value=\"GET_SNACKBAR_OPEN\"\n              :color=\"GET_SNACKBAR_MESSAGE.color\"\n              bottom\n              timeout=\"4000\"\n              content-class=\"text-center\"\n              @input=\"SET_SNACKBAR_OPEN\"\n            >\n              {{ GET_SNACKBAR_MESSAGE.text }}\n            </v-snackbar>\n\n            <TheUpnextDialog v-if=\"GET_UP_NEXT_POST_PLAY_DATA\" />\n          </v-sheet>\n        </v-img>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport './assets/css/style.css';\n\nimport {\n  mapActions, mapGetters, mapMutations, mapState,\n} from 'vuex';\nimport redirection from '@/mixins/redirection';\nimport clipboard from '@/mixins/clipboard';\nimport linkWithRoom from '@/mixins/linkwithroom';\nimport { slPlayerClientId } from '@/player/constants';\n\nexport default {\n  components: {\n    TheSidebarLeft: () => import('@/components/TheSidebarLeft.vue'),\n    TheUpnextDialog: () => import('@/components/TheUpnextDialog.vue'),\n    TheNowPlayingChip: () => import('@/components/TheNowPlayingChip.vue'),\n    DonateDialog: () => import('@/components/DonateDialog.vue'),\n    TheAppBarCrumbs: () => import('@/components/TheAppBarCrumbs.vue'),\n  },\n\n  mixins: [\n    redirection,\n    clipboard,\n    linkWithRoom,\n  ],\n\n  data: () => ({\n    numBackgroundErrors: 0,\n  }),\n\n  computed: {\n    ...mapGetters([\n      'GET_UP_NEXT_POST_PLAY_DATA',\n      'GET_CONFIG',\n      'GET_ACTIVE_METADATA',\n      'GET_SNACKBAR_MESSAGE',\n      'GET_SNACKBAR_OPEN',\n      'GET_BACKGROUND',\n      'GET_NAVIGATE_TO_PLAYER',\n      'GET_NAVIGATE_HOME',\n    ]),\n\n    ...mapGetters('plex', [\n      'GET_PLEX_AUTH_TOKEN',\n    ]),\n\n    ...mapGetters('plexclients', [\n      'GET_CHOSEN_CLIENT_ID',\n      'GET_ACTIVE_SERVER_ID',\n      'GET_PLEX_CLIENT_TIMELINE',\n      'GET_ACTIVE_MEDIA_METADATA',\n    ]),\n\n    ...mapGetters('plexservers', [\n      'GET_PLEX_SERVER',\n    ]),\n\n    ...mapGetters('synclounge', [\n      'IS_IN_ROOM',\n      'GET_ROOM',\n      'GET_SERVER',\n    ]),\n\n    ...mapState([\n      'repositoryUrl',\n      'discordUrl',\n    ]),\n\n    links() {\n      return [\n        {\n          title: 'Github',\n          href: this.repositoryUrl,\n          target: '_blank',\n        },\n        {\n          title: 'Discord',\n          target: '_blank',\n          href: this.discordUrl,\n        },\n      ];\n    },\n\n    showNowPlaying() {\n      return this.GET_ACTIVE_SERVER_ID && this.GET_CHOSEN_CLIENT_ID !== slPlayerClientId;\n    },\n\n    showAppBarExtension() {\n      return this.$route.meta.showAppBarExtension;\n    },\n\n    smallLogoMedia() {\n      return `(max-width: ${this.$vuetify.breakpoint.thresholds.xs}px)`;\n    },\n\n    sheetColor() {\n      return this.GET_BACKGROUND\n        ? 'rgba(0,0,0,0.7)'\n        : 'transparent';\n    },\n\n    bgHeight() {\n      return this.$vuetify.breakpoint.height - this.$vuetify.application.top;\n    },\n\n    inviteUrl() {\n      if (this.GET_ROOM) {\n        if (this.GET_CONFIG?.autojoin) {\n          // If autojoin, just link to main site\n          return window.location.origin;\n        }\n\n        const invitePart = this.$router.resolve({\n          name: 'RoomJoin',\n          params: {\n            room: this.GET_ROOM,\n            ...(this.GET_SERVER && { server: this.GET_SERVER }),\n          },\n        }).href;\n\n        const currentUrl = new URL(window.location.pathname, window.location.origin);\n        return new URL(invitePart, currentUrl).toString();\n      }\n      return '';\n    },\n  },\n\n  watch: {\n    GET_ACTIVE_MEDIA_METADATA(metadata) {\n      // This handles regular plex clients (nonslplayer) playback changes\n      if (this.IS_IN_ROOM && this.GET_CHOSEN_CLIENT_ID !== slPlayerClientId) {\n        if (metadata) {\n          this.redirectToMediaPage();\n        } else {\n          this.$router.push(this.linkWithRoom({ name: 'PlexHome' }));\n        }\n      }\n    },\n\n    GET_NAVIGATE_TO_PLAYER(navigate) {\n      if (navigate) {\n        this.$router.push(this.linkWithRoom({ name: 'WebPlayer' }));\n        this.SET_NAVIGATE_TO_PLAYER(false);\n      }\n    },\n\n    async GET_NAVIGATE_HOME(navigate) {\n      if (navigate) {\n        console.debug('NAVIGATE_HOME');\n        this.$router.push({ name: 'RoomCreation' });\n        this.SET_NAVIGATE_HOME(false);\n      }\n    },\n  },\n\n  async created() {\n    if (this.GET_PLEX_AUTH_TOKEN) {\n      // Kick off a bunch of requests that we need for later\n      this.FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE();\n\n      try {\n        await Promise.all([\n          this.FETCH_PLEX_USER(),\n          this.FETCH_PLEX_DEVICES(),\n        ]);\n      } catch (e) {\n        // If these fail, then the auth token is probably invalid\n        console.error(e);\n        await this.DISPLAY_NOTIFICATION({\n          text: 'Failed to connect to Plex API. Try logging out and back in.',\n          color: 'error',\n        });\n      }\n    }\n  },\n\n  mounted() {\n    document.addEventListener('fullscreenchange', this.onFullScreenChange);\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n  },\n\n  methods: {\n    ...mapActions([\n      'DISPLAY_NOTIFICATION',\n    ]),\n\n    ...mapActions('plex', [\n      'FETCH_PLEX_DEVICES',\n      'FETCH_PLEX_USER',\n    ]),\n\n    ...mapActions('plexservers', [\n      'FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE',\n    ]),\n\n    ...mapMutations([\n      'SET_SNACKBAR_OPEN',\n      'SET_NAVIGATE_TO_PLAYER',\n      'SET_NAVIGATE_HOME',\n      'SET_LEFT_SIDEBAR_OPEN',\n    ]),\n\n    backgroundLoad() {\n      this.numBackgroundFailures = 0;\n    },\n\n    async backgroundError(e) {\n      this.numBackgroundFailures += 1;\n      if (this.numBackgroundFailures > 3) {\n        console.error(`Failed ${this.numBackgroundFailures} times finding a background. Giving up`);\n        return;\n      }\n\n      console.warn('Error loading background, trying again', e);\n      await this.FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE();\n    },\n\n    onFullScreenChange() {\n      document.body.classList.toggle('is-fullscreen', document.fullscreenElement);\n    },\n\n    toggleFullScreen() {\n      if (!document.fullscreenElement) {\n        document.documentElement.requestFullscreen();\n      } else if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    },\n  },\n};\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=a03fa1be&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VAppBarNavIcon } from 'vuetify/lib/components/VAppBar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VMain } from 'vuetify/lib/components/VMain';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSheet } from 'vuetify/lib/components/VSheet';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VToolbarItems } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VApp,VAppBar,VAppBarNavIcon,VBtn,VCol,VContainer,VIcon,VImg,VMain,VProgressCircular,VRow,VSheet,VSnackbar,VSpacer,VToolbarItems})\n","import Vue from 'vue';\nimport Router from 'vue-router';\n\nVue.use(Router);\n\nconst searchBar = () => import('@/components/SearchBar.vue');\nconst rightSidebar = () => import('@/components/TheSidebarRight.vue');\nconst rightSidebarButton = () => import('@/components/TheSidebarRightButton.vue');\n\nexport default new Router({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      name: 'RoomCreation',\n      component: () => import('@/views/RoomCreation.vue'),\n      meta: {\n        requiresAuth: true,\n      },\n    },\n\n    {\n      path: '*',\n      redirect: {\n        name: 'RoomCreation',\n      },\n    },\n\n    {\n      path: '/signin',\n      name: 'SignIn',\n      component: () => import('@/views/SignIn.vue'),\n      meta: {\n        requiresNoAuth: true,\n      },\n    },\n\n    {\n      path: '/signout',\n      name: 'SignOut',\n      component: () => import('@/views/SignOut.vue'),\n      meta: {\n        requiresPlexToken: true,\n      },\n    },\n\n    {\n      path: '/join/:room/:server?',\n      name: 'RoomJoin',\n      component: () => import('@/views/RoomJoin.vue'),\n      props: true,\n      meta: {\n        requiresAuth: true,\n        redirectAfterAuth: true,\n      },\n    },\n\n    {\n      path: '/clientselect',\n      name: 'AdvancedRoomWalkthrough',\n      component: () => import('@/views/AdvancedRoomWalkthrough.vue'),\n      meta: {\n        requiresAuth: true,\n      },\n    },\n\n    {\n      path: '/joinroom',\n      name: 'AdvancedRoomJoin',\n      component: () => import('@/views/AdvancedRoomJoin.vue'),\n      meta: {\n        requiresAuth: true,\n      },\n    },\n\n    {\n      path: '/room/:room/player/:server?',\n      name: 'WebPlayer',\n      components: {\n        default: () => import('@/views/WebPlayer.vue'),\n        rightSidebar,\n        rightSidebarButton,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n      },\n    },\n\n    {\n      path: '/room/:room/browse/:server?',\n      name: 'PlexHome',\n      components: {\n        default: () => import('@/views/PlexHome.vue'),\n        searchBar,\n        rightSidebar,\n        rightSidebarButton,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n        showAppBarExtension: true,\n      },\n    },\n\n    {\n      path: '/room/:room/browse/server/:machineIdentifier/:server?',\n      name: 'PlexServer',\n      components: {\n        default: () => import('@/views/PlexServer.vue'),\n        searchBar,\n        rightSidebar,\n        rightSidebarButton,\n      },\n      props: {\n        default: true,\n        searchBar: true,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n        showAppBarExtension: true,\n      },\n    },\n\n    {\n      path: '/room/:room/browse/server/:machineIdentifier/library/:sectionId/:server?',\n      name: 'PlexLibrary',\n      components: {\n        default: () => import('@/views/PlexLibrary.vue'),\n        searchBar,\n        appBarView: () => import('@/components/LibraryViewButton.vue'),\n        rightSidebar,\n        rightSidebarButton,\n      },\n      props: {\n        default: true,\n        searchBar: true,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n        showAppBarExtension: true,\n      },\n    },\n\n    {\n      path: '/room/:room/browse/server/:machineIdentifier/ratingKey/:ratingKey/:server?',\n      name: 'PlexMedia',\n      components: {\n        default: () => import('@/views/PlexMedia.vue'),\n        searchBar,\n        rightSidebar,\n        rightSidebarButton,\n      },\n      props: {\n        default: true,\n        searchBar: true,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n        showAppBarExtension: true,\n      },\n    },\n\n    {\n      path: '/room/:room/search/:query/:server?',\n      name: 'PlexSearch',\n      components: {\n        default: () => import('@/views/PlexSearch.vue'),\n        searchBar,\n        rightSidebar,\n        rightSidebarButton,\n      },\n      props: {\n        default: true,\n        searchBar: true,\n      },\n      meta: {\n        requiresAuth: true,\n        protected: true,\n        showAppBarExtension: true,\n      },\n    },\n  ],\n});\n","import Vue from 'vue';\nimport VueChatScroll from 'vue-chat-scroll';\n\nimport vuetify from './plugins/vuetify';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\nVue.use(VueChatScroll);\n\nVue.config.errorHandler = (err) => {\n  store.dispatch('DISPLAY_NOTIFICATION', {\n    text: err.message,\n    color: 'error',\n  });\n\n  console.error(err);\n};\n\nconst isEqualIfExpectedTrue = (expected, got) => (expected\n  ? expected === got\n  : !got);\n\nconst doesServerMatch = (expected, got) => expected.room === got.room\n  && isEqualIfExpectedTrue(expected, got);\n\nrouter.beforeEach(async (to, from, next) => {\n  if (!store.getters.GET_CONFIG) {\n    await store.dispatch('FETCH_CONFIG');\n\n    // This will only happen once per refresh of the page\n    if (store.getters.GET_CONFIG.autojoin) {\n      next({\n        name: 'RoomJoin',\n        params: store.getters.GET_CONFIG.autojoin,\n      });\n      return;\n    }\n  }\n\n  if ((store.getters['plex/IS_UNAUTHORIZED']\n    && to.matched.some((record) => record.meta.requiresAuth))\n  || (!store.getters['plex/GET_PLEX_AUTH_TOKEN']\n    && to.matched.some((record) => record.meta.requiresPlexToken))) {\n    if (to.matched.some((record) => record.meta.redirectAfterAuth)) {\n      next({\n        name: 'SignIn',\n        query: {\n          redirect: to.fullPath,\n        },\n      });\n    } else {\n      next({ name: 'SignIn' });\n    }\n  } else if (to.matched.some((record) => record.meta.requiresNoAuth)\n    && store.getters['plex/GET_PLEX_AUTH_TOKEN'] && store.getters['plex/IS_USER_AUTHORIZED']) {\n    next({ name: 'RoomCreation' });\n  } else if (to.matched.some((record) => record.meta.protected)\n    && (!store.getters['synclounge/IS_IN_ROOM']\n      || doesServerMatch({\n        server: store.getters['synclounge/GET_SERVER'],\n        room: store.getters['synclounge/GET_ROOM'],\n      }, to.params))\n  ) {\n    // TODO: add redirect\n    if (to.params.room) {\n      next({\n        name: 'RoomJoin',\n        params: {\n          room: to.params.room,\n          ...(to.params.server && { server: to.params.server }),\n        },\n      });\n    } else {\n      next({ name: 'RoomCreation' });\n    }\n  } else {\n    next();\n  }\n});\n\nnew Vue({\n  router,\n  store,\n  vuetify,\n  render: (h) => h(App),\n}).$mount('#app');\n","module.exports = __webpack_public_path__ + \"media/notification_simple-01.27fbe8a5.wav\";","// eslint-disable-next-line import/prefer-default-export\nexport const slPlayerClientId = 'PTPLAYER9PLUS10';\n","import linkWithRoom from '@/mixins/helpers/linkwithroom';\n\nconst contentLink = (getters, { machineIdentifier, ratingKey }) => linkWithRoom(\n  getters, {\n    name: 'PlexMedia',\n    params: {\n      machineIdentifier,\n      ratingKey,\n    },\n  },\n);\n\nexport default contentLink;\n","let player = null;\nlet overlay = null;\n\nexport const getPlayer = () => player;\nexport const setPlayer = (newPlayer) => {\n  player = newPlayer;\n};\n\nexport const getOverlay = () => overlay;\nexport const setOverlay = (newOverlay) => {\n  overlay = newOverlay;\n};\n","import contentLink from '@/mixins/helpers/contentlink';\n\nexport default {\n  methods: {\n    redirectToMediaPage() {\n      this.$router.push(\n        contentLink(\n          this.$store.getters,\n          this.$store.getters['plexclients/GET_ACTIVE_MEDIA_METADATA'],\n        ),\n      );\n    },\n  },\n};\n","module.exports = __webpack_public_path__ + \"img/logo-small-light.7480f594.png\";","const cssText = 'position:fixed;pointer-events:none;z-index:-9999;opacity:0;';\n\nconst isString = (s) => typeof (s) === 'string' || s instanceof String;\n\nconst legacyCopy = (text) => {\n  const value = isString(text)\n    ? text\n    : JSON.stringify(text);\n\n  const textarea = document.createElement('textarea');\n\n  textarea.value = value;\n  textarea.setAttribute('readonly', '');\n  textarea.style.cssText = cssText;\n\n  document.body.appendChild(textarea);\n\n  if (navigator.userAgent.match(/ipad|ipod|iphone/i)) {\n    textarea.contentEditable = true;\n    textarea.readOnly = true;\n\n    const range = document.createRange();\n\n    range.selectNodeContents(textarea);\n\n    const selection = window.getSelection();\n\n    selection.removeAllRanges();\n    selection.addRange(range);\n    textarea.setSelectionRange(0, 999999);\n  } else {\n    textarea.select();\n  }\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(textarea);\n  }\n};\n\nexport default {\n  methods: {\n    async copyToClipboard(text) {\n      try {\n        // The clipboard API can only be used in secure contexts, so fall back to legacy method if\n        // this fails\n        await navigator.clipboard.writeText(text);\n      } catch (e) {\n        console.warn(e);\n      }\n\n      legacyCopy(text);\n      await this.$store.dispatch('DISPLAY_NOTIFICATION', {\n        text: 'Copied to clipboard',\n        color: 'success',\n      });\n    },\n  },\n};\n","import linkWithRoom from '@/mixins/helpers/linkwithroom';\n\nexport default {\n  methods: {\n    linkWithRoom(params) {\n      return linkWithRoom(this.$store.getters, params);\n    },\n  },\n};\n"],"sourceRoot":""}