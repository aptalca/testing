{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["name","props","openDelay","type","Number","default","closeDelay","data","openTimeout","closeTimeout","undefined","methods","clearTimeout","this","delay","parseInt","setTimeout","cb","open","close","stackElement","stackExclude","stackMinZIndex","isActive","computed","window","content","$refs","index","getMaxZIndex","exclude","base","zis","activeElements","document","Math","root","Boolean","$slots","node","baseMixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","slotType","keys","Object","on","attrs","genActivatorAttributes","role","String","e","getActivator","target","length","vm","m","self","validateAttachTarget","Node","attach","contentClass","hasDetached","Array","$el","parentNode","console","scopeId","_isDestroyed","active","activeClass","chipGroup","closeIcon","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","proxyClass","groupClasses","breakingProps","original","$attrs","hasOwnProperty","replacement","children","$createElement","staticClass","left","right","size","click","hasClose","tabindex","setBackgroundColor","color","h","setTextColor","directives","Resize","isInMenu","theme","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","offsetX","offsetY","openOnClick","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","menuWidth","dimensions","parseFloat","calcXOverflow","calcLeft","height","minWidth","width","pageWidth","calculatedMaxWidth","isNaN","top","calcYOverflow","find","tile","maxWidth","transformOrigin","zIndex","activeZIndex","next","prev","classList","remove","requestAnimationFrame","scrollTop","activeTile","maxScrollTop","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","contains","attributes","id","isContentActive","handler","closeConditional","include","options","class","menuable__content__active","style","ref","keydown","onKeyDown","$listeners","querySelectorAll","nextTile","prevTile","changeListIndex","arg","onResize","showLazyContent","light","dark","returnValue","originalValue","allowOverflow","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","positionX","positionY","absoluteX","absoluteY","activatedBy","activatorFixed","bottom","offsetTop","scrollHeight","offsetLeft","hasWindow","inputActivator","pageYOffset","stackClass","a","c","activatorLeft","$scopedSlots","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","el","onClick","rect","getRoundedBoundedClientRect","Promise","resolve","measure"],"mappings":"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","file":"js/chunk-f1283e9c-legacy.76481e43.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}