{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VItemGroup/VItemGroup.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///./src/views/RoomJoin.vue?e933","webpack:///src/views/RoomJoin.vue","webpack:///./src/views/RoomJoin.vue?ec90","webpack:///./src/views/RoomJoin.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","$attrs","hasOwnProperty","Array","value","length","methods","getValue","item","nextValue","index","toggleMethod","baseMixins","expansionPanel","h","showLazyContent","setBackgroundColor","staticClass","directives","isActive","class","BaseItemGroup","activeClass","type","default","mandatory","max","Number","multiple","internalLazyValue","undefined","items","themeClasses","selectedItem","indexOf","selectedItems","filter","internalValue","v","watch","classes","i","push","onClick","selectedValues","valueIndex","updateInternalValue","updateMultiple","updateSingle","defaultValue","val","isSame","$slots","itemGroup","eager","data","isBooted","hasContent","content","render","_vm","_h","$createElement","_c","_self","attrs","loading","_v","_s","error","_e","GET_CONFIG","force_slplayer","GET_CHOSEN_CLIENT","on","$event","clientConnectable","joinInvite","staticRenderFns","components","PlexClientPicker","mixins","room","String","required","server","DISCONNECT_IF_CONNECTED","SET_AND_CONNECT_AND_JOIN_ROOM","$route","GET_CHOSEN_CLIENT_ID","redirectToMediaPage","$router","linkWithRoom","console","e","message","component","VAlert","VBtn","VCard","VCardActions","VCardTitle","VCol","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VImg","VRow","ripple","disableIconRotate","expandIcon","hideActions","hasMousedown","icon","isDisabled","tabindex","click","mousedown","mouseup","open","header","nextIsActive","groupClasses","vm","$emit"],"mappings":"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","file":"js/chunk-2e970619.6b0cbca0.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Styles\nimport './VItemGroup.sass'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport type GroupableInstance = InstanceType<typeof Groupable> & {\n  id?: string\n  to?: any\n  value?: any\n }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active',\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null,\n    },\n    multiple: Boolean,\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[],\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-item-group': true,\n        ...this.themeClasses,\n      }\n    },\n    selectedIndex (): number {\n      return (this.selectedItem && this.items.indexOf(this.selectedItem)) || -1\n    },\n    selectedItem (): GroupableInstance | undefined {\n      if (this.multiple) return undefined\n\n      return this.selectedItems[0]\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      if (this.internalValue == null) return []\n\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    },\n  },\n\n  watch: {\n    internalValue: 'updateItemsState',\n    items: 'updateItemsState',\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n\n    genData (): object {\n      return {\n        class: this.classes,\n      }\n    },\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance) {\n      this.updateInternalValue(\n        this.getValue(item, this.items.indexOf(item))\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && !this.selectedValues.length) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    // https://github.com/vuetifyjs/vuetify/issues/5352\n    updateItemsState () {\n      this.$nextTick(() => {\n        if (this.mandatory &&\n          !this.selectedItems.length\n        ) {\n          return this.updateMandatory()\n        }\n\n        // TODO: Make this smarter so it\n        // doesn't have to iterate every\n        // child in an update\n        this.items.forEach(this.updateItem)\n      })\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const items = this.items.slice()\n\n      if (last) items.reverse()\n\n      const item = items.find(item => !item.disabled)\n\n      // If no tabs are available\n      // aborts mandatory value\n      if (!item) return\n\n      const index = this.items.indexOf(item)\n\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), this.$slots.default)\n  },\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this,\n    }\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"fill-height\"},[_c('v-row',{attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-col',[_c('v-card',{staticClass:\"mx-auto\",attrs:{\"max-width\":\"550\",\"loading\":_vm.loading}},[_c('v-card-title',[_c('v-img',{attrs:{\"contain\":\"\",\"src\":require(\"@/assets/images/logos/logo-long-light.png\")}})],1),(_vm.error)?_c('v-alert',{attrs:{\"type\":\"error\"}},[_vm._v(\" \"+_vm._s(_vm.error)+\" \")]):_vm._e(),_c('v-expansion-panels',{attrs:{\"multiple\":\"\"}},[_c('v-expansion-panel',{attrs:{\"readonly\":_vm.GET_CONFIG.force_slplayer}},[_c('v-expansion-panel-header',[_vm._v(\" Player: \"+_vm._s(_vm.GET_CHOSEN_CLIENT.name)+\" \")]),_c('v-expansion-panel-content',[_c('PlexClientPicker',{on:{\"loading-change\":function($event){_vm.loading = $event},\"client-connectable-change\":function($event){_vm.clientConnectable = $event}}})],1)],1)],1),_c('v-card-actions',{staticClass:\"mt-2\"},[_c('v-btn',{attrs:{\"color\":\"primary\",\"disabled\":!_vm.clientConnectable},on:{\"click\":_vm.joinInvite}},[_vm._v(\" Join Invite \")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container class=\"fill-height\">\n    <v-row\n      align=\"center\"\n      justify=\"center\"\n    >\n      <v-col>\n        <v-card\n          class=\"mx-auto\"\n          max-width=\"550\"\n          :loading=\"loading\"\n        >\n          <v-card-title>\n            <v-img\n              contain\n              src=\"@/assets/images/logos/logo-long-light.png\"\n            />\n          </v-card-title>\n\n          <v-alert\n            v-if=\"error\"\n            type=\"error\"\n          >\n            {{ error }}\n          </v-alert>\n\n          <v-expansion-panels\n            multiple\n          >\n            <v-expansion-panel\n              :readonly=\"GET_CONFIG.force_slplayer\"\n            >\n              <v-expansion-panel-header>\n                Player: {{ GET_CHOSEN_CLIENT.name }}\n              </v-expansion-panel-header>\n\n              <v-expansion-panel-content>\n                <PlexClientPicker\n                  @loading-change=\"loading = $event\"\n                  @client-connectable-change=\"clientConnectable = $event\"\n                />\n              </v-expansion-panel-content>\n            </v-expansion-panel>\n          </v-expansion-panels>\n\n          <v-card-actions class=\"mt-2\">\n            <v-btn\n              color=\"primary\"\n              :disabled=\"!clientConnectable\"\n              @click=\"joinInvite\"\n            >\n              Join Invite\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport redirection from '@/mixins/redirection';\nimport { slPlayerClientId } from '@/player/constants';\nimport linkWithRoom from '@/mixins/linkwithroom';\n\nexport default {\n  name: 'RoomJoin',\n\n  components: {\n    PlexClientPicker: () => import('@/components/PlexClientPicker.vue'),\n  },\n\n  mixins: [\n    redirection,\n    linkWithRoom,\n  ],\n\n  props: {\n    room: {\n      type: String,\n      required: true,\n    },\n\n    server: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    loading: false,\n    error: null,\n\n    // Default true because default client is slplayer\n    clientConnectable: true,\n  }),\n\n  computed: {\n    ...mapGetters([\n      'GET_CONFIG',\n    ]),\n\n    ...mapGetters('plexclients', [\n      'GET_CHOSEN_CLIENT_ID',\n      'GET_ACTIVE_MEDIA_METADATA',\n      'GET_CHOSEN_CLIENT',\n    ]),\n  },\n\n  async created() {\n    await this.DISCONNECT_IF_CONNECTED();\n  },\n\n  methods: {\n    ...mapActions('synclounge', [\n      'SET_AND_CONNECT_AND_JOIN_ROOM',\n      'DISCONNECT_IF_CONNECTED',\n    ]),\n\n    async joinInvite() {\n      this.error = null;\n      this.loading = true;\n\n      try {\n        await this.SET_AND_CONNECT_AND_JOIN_ROOM({\n          server: this.server,\n          room: this.room,\n        });\n\n        if (this.$route.name === 'RoomJoin') {\n          if (this.GET_CHOSEN_CLIENT_ID === slPlayerClientId || !this.GET_ACTIVE_MEDIA_METADATA) {\n            this.$router.push(this.linkWithRoom({ name: 'PlexHome' }));\n          } else {\n            this.redirectToMediaPage();\n          }\n        }\n      } catch (e) {\n        this.DISCONNECT_IF_CONNECTED();\n        console.error(e);\n        this.error = e.message;\n      }\n\n      this.loading = false;\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoomJoin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoomJoin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RoomJoin.vue?vue&type=template&id=16635ed0&\"\nimport script from \"./RoomJoin.vue?vue&type=script&lang=js&\"\nexport * from \"./RoomJoin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAlert,VBtn,VCard,VCardActions,VCardTitle,VCol,VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VImg,VRow})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}