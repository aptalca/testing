(function(e){function E(E){for(var _,n,T=E[0],r=E[1],s=E[2],o=0,c=[];o<T.length;o++)n=T[o],Object.prototype.hasOwnProperty.call(a,n)&&a[n]&&c.push(a[n][0]),a[n]=0;for(_ in r)Object.prototype.hasOwnProperty.call(r,_)&&(e[_]=r[_]);l&&l(E);while(c.length)c.shift()();return i.push.apply(i,s||[]),t()}function t(){for(var e,E=0;E<i.length;E++){for(var t=i[E],_=!0,n=1;n<t.length;n++){var T=t[n];0!==a[T]&&(_=!1)}_&&(i.splice(E--,1),e=r(r.s=t[0]))}return e}var _={},n={app:0},a={app:0},i=[];function T(e){return r.p+"js/"+({}[e]||e)+"."+{"chunk-0c5f3f74":"edac0611","chunk-2d0c8842":"8575d0ae","chunk-2e970619":"6b0cbca0","chunk-302d318c":"c4771f26","chunk-151b74e4":"139deb66","chunk-25fafa0f":"9424cdd9","chunk-5a6d5fba":"92614d03","chunk-f1283e9c":"76481e43","chunk-dd69c2f2":"ae1ed097","chunk-7ea287e8":"52efb18e","chunk-b26fb844":"2ae4e9d8","chunk-84836d94":"0c4b8b6f","chunk-2d0ba926":"40cc4906","chunk-2d0c7b5d":"6061f5c4","chunk-2d0c9594":"7df27969","chunk-2d213179":"c1c00c48","chunk-2d222010":"b42b526b","chunk-61fa40e0":"f1305b9a","chunk-6459bb05":"77da16cd","chunk-6890e64e":"dfa71331","chunk-784fb0b8":"ff794876","chunk-91dca3f0":"4c0d7103","chunk-039f81d5":"a5d6e818","chunk-966029d8":"b4850594","chunk-aa532ff8":"a124223f","chunk-28086afd":"4279f236","chunk-7d3c7b07":"cc59877d","chunk-b7cda9fa":"fbeb3503","chunk-b8319b1e":"91eaf2ca","chunk-692a6e88":"4ca1210e","chunk-d79830a2":"b889e251","chunk-2527183e":"50a423ef","chunk-4c36f41e":"874e3efc","chunk-2d21da11":"5043fee1","chunk-6996c7bd":"6ca23327","chunk-0a2cc99c":"7e58c409","chunk-2662bc6a":"fe857fa3","chunk-2d0baccc":"cb9565b4","chunk-2d0ea162":"e96dda62","chunk-62684a9c":"9e499094","chunk-2d0f0840":"f05b3ec7","chunk-2d0e9600":"eb9d1042","chunk-34b3058d":"dbe8ef01","chunk-4677f8af":"0376acd3","chunk-5ba7f638":"f9c45669","chunk-791a9f1d":"9b52fcac","chunk-64f970f0":"c61d4c01","chunk-235f86fc":"13b84c8f","chunk-eb8e3864":"a653eddc","chunk-0f07cb5d":"b4c01bdf","chunk-2d0bdbb9":"da447ae6","chunk-41b9c3f9":"d4cb5118","chunk-1d4021b4":"4a70edc2","chunk-52ac3bfe":"b4a4e640","chunk-fff59462":"b38dbcfa","chunk-67ac9a98":"c4451138"}[e]+".js"}function r(E){if(_[E])return _[E].exports;var t=_[E]={i:E,l:!1,exports:{}};return e[E].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var E=[],t={"chunk-0c5f3f74":1,"chunk-2e970619":1,"chunk-302d318c":1,"chunk-151b74e4":1,"chunk-25fafa0f":1,"chunk-5a6d5fba":1,"chunk-f1283e9c":1,"chunk-dd69c2f2":1,"chunk-7ea287e8":1,"chunk-b26fb844":1,"chunk-84836d94":1,"chunk-6459bb05":1,"chunk-784fb0b8":1,"chunk-039f81d5":1,"chunk-966029d8":1,"chunk-aa532ff8":1,"chunk-28086afd":1,"chunk-7d3c7b07":1,"chunk-b7cda9fa":1,"chunk-b8319b1e":1,"chunk-692a6e88":1,"chunk-d79830a2":1,"chunk-2527183e":1,"chunk-4c36f41e":1,"chunk-6996c7bd":1,"chunk-0a2cc99c":1,"chunk-2662bc6a":1,"chunk-62684a9c":1,"chunk-34b3058d":1,"chunk-4677f8af":1,"chunk-5ba7f638":1,"chunk-791a9f1d":1,"chunk-64f970f0":1,"chunk-235f86fc":1,"chunk-eb8e3864":1,"chunk-0f07cb5d":1,"chunk-41b9c3f9":1,"chunk-1d4021b4":1,"chunk-52ac3bfe":1,"chunk-fff59462":1,"chunk-67ac9a98":1};n[e]?E.push(n[e]):0!==n[e]&&t[e]&&E.push(n[e]=new Promise((function(E,t){for(var _="css/"+({}[e]||e)+"."+{"chunk-0c5f3f74":"81b2a921","chunk-2d0c8842":"31d6cfe0","chunk-2e970619":"ef1bbbac","chunk-302d318c":"ef1bbbac","chunk-151b74e4":"fd56734d","chunk-25fafa0f":"db1478cd","chunk-5a6d5fba":"dff54012","chunk-f1283e9c":"babf8163","chunk-dd69c2f2":"48590adb","chunk-7ea287e8":"b3bc8438","chunk-b26fb844":"82e5f3f2","chunk-84836d94":"6d0822e7","chunk-2d0ba926":"31d6cfe0","chunk-2d0c7b5d":"31d6cfe0","chunk-2d0c9594":"31d6cfe0","chunk-2d213179":"31d6cfe0","chunk-2d222010":"31d6cfe0","chunk-61fa40e0":"31d6cfe0","chunk-6459bb05":"e0fe7b8a","chunk-6890e64e":"31d6cfe0","chunk-784fb0b8":"5d57faa0","chunk-91dca3f0":"31d6cfe0","chunk-039f81d5":"fdbb189c","chunk-966029d8":"fdddcb9e","chunk-aa532ff8":"7d887a01","chunk-28086afd":"672f62b2","chunk-7d3c7b07":"05026a29","chunk-b7cda9fa":"f528ff13","chunk-b8319b1e":"ca2c4df4","chunk-692a6e88":"51b275e5","chunk-d79830a2":"8eac1839","chunk-2527183e":"404be123","chunk-4c36f41e":"f831ae51","chunk-2d21da11":"31d6cfe0","chunk-6996c7bd":"74c61c5f","chunk-0a2cc99c":"3b5bfe6e","chunk-2662bc6a":"f831ae51","chunk-2d0baccc":"31d6cfe0","chunk-2d0ea162":"31d6cfe0","chunk-62684a9c":"698e6059","chunk-2d0f0840":"31d6cfe0","chunk-2d0e9600":"31d6cfe0","chunk-34b3058d":"5c8076a7","chunk-4677f8af":"a075366f","chunk-5ba7f638":"53b022d7","chunk-791a9f1d":"e02cf3b7","chunk-64f970f0":"c5a96224","chunk-235f86fc":"fdddcb9e","chunk-eb8e3864":"8a0da11f","chunk-0f07cb5d":"23b9284a","chunk-2d0bdbb9":"31d6cfe0","chunk-41b9c3f9":"8a0da11f","chunk-1d4021b4":"52d61794","chunk-52ac3bfe":"6961f5c7","chunk-fff59462":"fd2ec502","chunk-67ac9a98":"6961f5c7"}[e]+".css",a=r.p+_,i=document.getElementsByTagName("link"),T=0;T<i.length;T++){var s=i[T],o=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(o===_||o===a))return E()}var c=document.getElementsByTagName("style");for(T=0;T<c.length;T++){s=c[T],o=s.getAttribute("data-href");if(o===_||o===a)return E()}var l=document.createElement("link");l.rel="stylesheet",l.type="text/css",l.onload=E,l.onerror=function(E){var _=E&&E.target&&E.target.src||a,i=new Error("Loading CSS chunk "+e+" failed.\n("+_+")");i.code="CSS_CHUNK_LOAD_FAILED",i.request=_,delete n[e],l.parentNode.removeChild(l),t(i)},l.href=a;var I=document.getElementsByTagName("head")[0];I.appendChild(l)})).then((function(){n[e]=0})));var _=a[e];if(0!==_)if(_)E.push(_[2]);else{var i=new Promise((function(E,t){_=a[e]=[E,t]}));E.push(_[2]=i);var s,o=document.createElement("script");o.charset="utf-8",o.timeout=120,r.nc&&o.setAttribute("nonce",r.nc),o.src=T(e);var c=new Error;s=function(E){o.onerror=o.onload=null,clearTimeout(l);var t=a[e];if(0!==t){if(t){var _=E&&("load"===E.type?"missing":E.type),n=E&&E.target&&E.target.src;c.message="Loading chunk "+e+" failed.\n("+_+": "+n+")",c.name="ChunkLoadError",c.type=_,c.request=n,t[1](c)}a[e]=void 0}};var l=setTimeout((function(){s({type:"timeout",target:o})}),12e4);o.onerror=o.onload=s,document.head.appendChild(o)}return Promise.all(E)},r.m=e,r.c=_,r.d=function(e,E,t){r.o(e,E)||Object.defineProperty(e,E,{enumerable:!0,get:t})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,E){if(1&E&&(e=r(e)),8&E)return e;if(4&E&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&E&&"string"!=typeof e)for(var _ in e)r.d(t,_,function(E){return e[E]}.bind(null,_));return t},r.n=function(e){var E=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(E,"a",E),E},r.o=function(e,E){return Object.prototype.hasOwnProperty.call(e,E)},r.p="",r.oe=function(e){throw console.error(e),e};var s=window["webpackJsonp"]=window["webpackJsonp"]||[],o=s.push.bind(s);s.push=E,s=s.slice();for(var c=0;c<s.length;c++)E(s[c]);var l=o;i.push([0,"chunk-vendors"]),t()})({0:function(e,E,t){e.exports=t("56d7")},1602:function(e,E,t){"use strict";t.d(E,"b",(function(){return r})),t.d(E,"a",(function(){return o}));t("84c3");const _=65536,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",a=_-_%n.length,i=e=>{let E="";const t=Math.ceil(1.1*e);while(E.length<e){const _=new Uint16Array(t);window.crypto.getRandomValues(_);for(let t=0;t<_.length&&E.length<e;t+=1){const e=_[t];if(e<=a){const t=n[e%n.length];E+=t}}}return E},T=5,r=()=>i(T),s=24,o=()=>i(s)},"27ff":function(e,E,t){"use strict";const _={section:"in",actor:"with",director:"by"};E["a"]={getTitle:(e,E)=>{switch(e.type){case"movie":return e.title;case"show":return e.title;case"season":return E?e.parentTitle:e.title;case"episode":return E?e.title:e.grandparentTitle;default:return e.title}},getSecondaryTitle:(e,E)=>{switch(e.type){case"movie":return e.year;case"show":return`${e.childCount} ${1===e.childCount?"season":"seasons"}`;case"season":return E?e.title:e.leafCount+" episodes";case"episode":return E?"Episode "+e.index:`S${e.parentIndex}E${e.index} - ${e.title}`;default:return e.title}},getCombinedTitle:({type:e,grandparentTitle:E,title:t,parentIndex:_,index:n})=>{switch(e){case"episode":return`${E} - ${t} S${_}-E${n}`;default:return t}},getReasonTitle:({reason:e,reasonTitle:E})=>`${_[e]} ${E}`}},"2aff":function(e,E,t){"use strict";const _=(e,{params:E,...t})=>({...t,params:{...E,room:e["synclounge/GET_ROOM"],...e["synclounge/GET_SERVER"]&&{server:e["synclounge/GET_SERVER"]}}});E["a"]=_},"336e":function(e,E,t){e.exports=t.p+"img/logo-long-light.70d02a5f.png"},"391c":function(e,E,t){"use strict";t.d(E,"b",(function(){return n})),t.d(E,"f",(function(){return a})),t.d(E,"g",(function(){return i})),t.d(E,"s",(function(){return T})),t.d(E,"u",(function(){return r})),t.d(E,"q",(function(){return s})),t.d(E,"t",(function(){return o})),t.d(E,"h",(function(){return c})),t.d(E,"i",(function(){return l})),t.d(E,"k",(function(){return I})),t.d(E,"o",(function(){return S})),t.d(E,"C",(function(){return A})),t.d(E,"y",(function(){return d})),t.d(E,"x",(function(){return u})),t.d(E,"v",(function(){return N})),t.d(E,"r",(function(){return R})),t.d(E,"a",(function(){return L})),t.d(E,"z",(function(){return C})),t.d(E,"E",(function(){return P})),t.d(E,"c",(function(){return h})),t.d(E,"w",(function(){return p})),t.d(E,"D",(function(){return m})),t.d(E,"m",(function(){return G})),t.d(E,"B",(function(){return f})),t.d(E,"A",(function(){return M})),t.d(E,"n",(function(){return g})),t.d(E,"e",(function(){return b})),t.d(E,"j",(function(){return U})),t.d(E,"p",(function(){return y})),t.d(E,"l",(function(){return v})),t.d(E,"d",(function(){return w}));t("ddb0");var _=t("9eb5");const n=()=>{var e,E,t;return!Object(_["a"])()||(null===(e=Object(_["a"])())||void 0===e?void 0:e.getControls().enabled_)&&(null!=(null===(E=Object(_["a"])())||void 0===E?void 0:E.getControls().getControlsContainer().getAttribute("shown"))||null!=(null===(t=Object(_["a"])())||void 0===t?void 0:t.getControls().getControlsContainer().getAttribute("casting")))},a=e=>{var E,t;return.025*((null===(E=Object(_["b"])())||void 0===E||null===(t=E.getMediaElement())||void 0===t?void 0:t.offsetHeight)||e)+48||0},i=e=>n()?a(e):0,T=()=>{var e,E;return null===(e=Object(_["b"])())||void 0===e||null===(E=e.getMediaElement())||void 0===E?void 0:E.paused},r=()=>T()&&!Object(_["a"])().getControls().isSeeking(),s=()=>{var e;return null===(e=Object(_["b"])())||void 0===e?void 0:e.isBuffering()},o=()=>!T()&&!s(),c=()=>{var e;return null===(e=Object(_["b"])())||void 0===e?void 0:e.getMediaElement().currentTime},l=()=>{var e;return 1e3*(null===(e=Object(_["b"])())||void 0===e?void 0:e.getMediaElement().currentTime)},I=()=>1e3*Object(_["b"])().getMediaElement().duration,S=()=>Object(_["b"])().getMediaElement().volume,A=e=>{Object(_["b"])().getMediaElement().volume=e},d=()=>Object(_["b"])().getMediaElement().play(),u=()=>Object(_["b"])().getMediaElement().pause(),N=e=>{const E=Object(_["b"])().getMediaElement().buffered;for(let t=0;t<E.length;t+=1)if(e>=1e3*E.start(t)&&e<=1e3*E.end(t))return!0;return!1},R=()=>{var e;return null!=(null===(e=Object(_["b"])())||void 0===e?void 0:e.getMediaElement)},L=(...e)=>Object(_["b"])().addEventListener(...e),C=(...e)=>Object(_["b"])().removeEventListener(...e),O=(...e)=>Object(_["b"])().getMediaElement().addEventListener(...e),D=(...e)=>Object(_["b"])().getMediaElement().removeEventListener(...e),P=({signal:e,type:E})=>new Promise((t,_)=>{e.pr.catch(e=>{D(E,t),_(e)}),O(E,t,{once:!0})}),h=()=>Object(_["b"])().cancelTrickPlay(),p=(...e)=>Object(_["b"])().load(...e),m=(...e)=>Object(_["b"])().unload(...e),G=()=>Object(_["b"])().getPlaybackRate(),f=e=>{Object(_["b"])().getMediaElement().playbackRate=e},M=e=>{Object(_["b"])().getMediaElement().currentTime=e/1e3},g=()=>Object(_["a"])().getControls().getControlsContainer().getElementsByClassName("shaka-small-play-button")[0],b=()=>Object(_["a"])().getControls().getControlsContainer().getElementsByClassName("shaka-play-button")[0],U=()=>{const{videoWidth:e,videoHeight:E,offsetWidth:t,offsetHeight:n}=Object(_["b"])().getMediaElement();return{videoWidth:e,videoHeight:E,offsetWidth:t,offsetHeight:n}},y=e=>{const E=Object(_["b"])().getMediaElement().parentNode;E.insertBefore(e,Object(_["b"])().getMediaElement())},v=()=>Object(_["b"])().getMediaElement(),w=async()=>{const e=Object(_["a"])();Object(_["d"])(null),Object(_["c"])(null),await e.destroy()}},4360:function(e,E,t){"use strict";var _=t("2b0e"),n=t("2f62"),a=t("0e44");t("ddb0"),t("2b3d");const i=(e,E)=>E?`${e}?${new URLSearchParams(E)}`:e,T=async(...e)=>{const E=await fetch(...e);if(!E.ok)throw new Error(E.statusText);return E},r=(e,E,t)=>T(i(e,E),t),s=async(...e)=>{const E=await r(...e);return E.text()},o=async(e,E,{headers:t,..._}={})=>{const n=await r(e,E,{headers:{Accept:"application/json",...t},..._});return n.json()},c=async(...e)=>{const E=await s(...e),_=(await t.e("chunk-61fa40e0").then(t.bind(null,"33f7"))).default;return _.parse(E)},l=async(...e)=>{const E=await r(...e);return E.body.getReader()};var I={RESET:({commit:e})=>{e("RESET"),e("plex/RESET"),e("plexclients/RESET"),e("plexservers/RESET"),e("settings/RESET"),e("slplayer/RESET"),e("synclounge/RESET")},DISPLAY_NOTIFICATION:({commit:e},E)=>{e("SET_SNACKBAR_MESSAGE",E),e("SET_SNACKBAR_OPEN",!0)},FETCH_CONFIG:async({dispatch:e,commit:E})=>{try{const e=await o("config.json");E("SET_CONFIGURATION",e)}catch(t){console.error(t),await e("DISPLAY_NOTIFICATION",{text:"Error fetching config",color:"error"})}},NAVIGATE_HOME:async({getters:e,commit:E})=>{e.GET_NAVIGATE_HOME||E("SET_NAVIGATE_HOME",!0)}},S=t("7b46");const A=()=>({version:"4.0.10",repositoryUrl:"https://github.com/synclounge/synclounge",discordUrl:"https://discord.gg/fKQB3yt",background:null,configuration:null,isLeftSidebarOpen:!1,isRightSidebarOpen:!0,upNextPostPlayData:null,activeMetadata:null,snackbarMessage:{},snackbarOpen:!1,navigateToPlayer:!1,browser:Object(S["a"])(),navigateHome:!1,isLibraryListView:!1});var d=A,u={RESET:e=>{Object.assign(e,d())},SET_BACKGROUND(e,E){e.background=E},SET_LEFT_SIDEBAR_OPEN:(e,E)=>{e.isLeftSidebarOpen=E},SET_RIGHT_SIDEBAR_OPEN:(e,E)=>{e.isRightSidebarOpen=E},TOGGLE_RIGHT_SIDEBAR_OPEN:e=>{e.isRightSidebarOpen=!e.isRightSidebarOpen},SET_UP_NEXT_POST_PLAY_DATA:(e,E)=>{e.upNextPostPlayData=E},SET_ACTIVE_METADATA:(e,E)=>{e.activeMetadata=E},SET_SNACKBAR_MESSAGE:(e,E)=>{e.snackbarMessage=E},SET_SNACKBAR_OPEN:(e,E)=>{e.snackbarOpen=E},SET_NAVIGATE_TO_PLAYER:(e,E)=>{e.navigateToPlayer=E},SET_CONFIGURATION:(e,E)=>{e.configuration=E},SET_NAVIGATE_HOME:(e,E)=>{e.navigateHome=E},TOGGLE_LIBRARY_LIST_VIEW:e=>{e.isLibraryListView=!e.isLibraryListView}},N={GET_RELEASE_URL:e=>`${e.repositoryUrl}/releases/tag/v${e.version}`,GET_BACKGROUND:e=>e.background,GET_UP_NEXT_POST_PLAY_DATA:e=>e.upNextPostPlayData,GET_CONFIG:e=>e.configuration,GET_ACTIVE_METADATA:e=>e.activeMetadata,GET_SNACKBAR_MESSAGE:e=>e.snackbarMessage,GET_SNACKBAR_OPEN:e=>e.snackbarOpen,GET_NAVIGATE_TO_PLAYER:e=>e.navigateToPlayer,GET_BROWSER:e=>e.browser,GET_NAVIGATE_HOME:e=>e.navigateHome,IS_LIBRARY_LIST_VIEW:e=>e.isLibraryListView},R=t("b4ef"),L=t.n(R);let C=null;const O=async(e,E)=>{const _=await t.e("chunk-6890e64e").then(t.t.bind(null,"8055",7));return new Promise((t,n)=>{C=_.connect(e,E),C.once("connect",()=>{t(C)}),C.once("connect_error",()=>{n(new Error("connect_error"))}),C.once("connect_timeout",()=>{n(new Error("connect_timeout"))})})},D=()=>{C.close(),C=null},P=({eventName:e,data:E})=>{C.emit(e,E)},h=({eventName:e,handler:E})=>{C.on(e,E)},p=e=>new Promise((E,t)=>{C.once(e,E),C.once("disconnect",t)}),m=()=>{var e;return null===(e=C)||void 0===e?void 0:e.connected},G=()=>{var e;return null===(e=C)||void 0===e?void 0:e.id};var f={HANDLE_SET_PARTY_PAUSING_ENABLED:async({getters:e,dispatch:E,commit:t},_)=>{await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:e.GET_HOST_ID,text:"Party Pausing has been turned "+(_?"on":"off")}),t("SET_IS_PARTY_PAUSING_ENABLED",_)},HANDLE_SET_AUTO_HOST_ENABLED:async({getters:e,dispatch:E,commit:t},_)=>{await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:e.GET_HOST_ID,text:"Auto Host has been turned "+(_?"on":"off")}),t("SET_IS_AUTO_HOST_ENABLED",_)},HANDLE_USER_JOINED:async({commit:e,dispatch:E},{id:t,..._})=>{e("SET_USER",{id:t,data:{..._,updatedAt:Date.now()}}),await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:t,text:_.username+" joined"})},HANDLE_USER_LEFT:async({getters:e,dispatch:E,commit:t},{id:_,newHostId:n})=>{await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:_,text:e.GET_USER(_).username+" left the room"}),n&&await E("HANDLE_NEW_HOST",n),t("DELETE_USER",_)},HANDLE_NEW_HOST:async({getters:e,dispatch:E,commit:t},_)=>{t("SET_HOST_ID",_),await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:_,text:e.GET_USER(_).username+" is now the host"}),await E("CANCEL_IN_PROGRESS_SYNC"),await E("SYNC_MEDIA_AND_PLAYER_STATE")},HANDLE_DISCONNECT:async({dispatch:e})=>{console.log("disconnect"),await e("DISPLAY_NOTIFICATION",{text:"Disconnected from the SyncLounge server",color:"info"},{root:!0})},HANDLE_RECONNECT:async({dispatch:e,commit:E})=>{console.log("Rejoining"),await p("slPing"),E("SET_SOCKET_ID",G());try{await e("JOIN_ROOM_AND_INIT")}catch(t){const E="Error reconnecting: "+t.message;console.error(E),await e("DISPLAY_NOTIFICATION",{text:E,color:"error"},{root:!0}),await e("NAVIGATE_HOME",null,{root:!0})}},HANDLE_SLPING:async(e,E)=>{P({eventName:"slPong",data:E})},HANDLE_PLAYER_STATE_UPDATE:async({getters:e,dispatch:E,commit:t},_)=>{t("SET_USER_PLAYER_STATE",_),_.id===e.GET_HOST_ID&&(await E("CANCEL_IN_PROGRESS_SYNC"),await E("SYNC_PLAYER_STATE"))},HANDLE_MEDIA_UPDATE:async({getters:e,dispatch:E,commit:t},{id:_,state:n,time:a,duration:i,media:T,makeHost:r})=>{t("SET_USER_PLAYER_STATE",{id:_,state:n,time:a,duration:i}),t("SET_USER_MEDIA",{id:_,media:T}),r?await E("HANDLE_NEW_HOST",_):_===e.GET_HOST_ID&&(await E("CANCEL_IN_PROGRESS_SYNC"),await E("SYNC_MEDIA_AND_PLAYER_STATE"))},HANDLE_SYNC_FLEXIBILITY_UPDATE:({commit:e},E)=>{e("SET_USER_SYNC_FLEXIBILITY",E)},HANDLE_PARTY_PAUSE:async({getters:e,dispatch:E},{senderId:t,isPause:_})=>{const n=`${e.GET_USER(t).username} pressed ${_?"pause":"play"}`;await E("ADD_MESSAGE_AND_CACHE_AND_NOTIFY",{senderId:t,text:n}),await E("DISPLAY_NOTIFICATION",{text:n,color:"info"},{root:!0}),await E("CANCEL_IN_PROGRESS_SYNC"),_?await E("plexclients/PRESS_PAUSE",null,{root:!0}):await E("plexclients/PRESS_PLAY",null,{root:!0})},HANDLE_KICKED:async({dispatch:e})=>{console.log("HANDLE_KICKED"),await e("DISCONNECT_AND_NAVIGATE_HOME")}};const M=(e,E)=>{const t="/"===E.charAt(E.length-1)?E:E+"/";return new URL(e,t)},g=(e,E)=>e&&"/"!==e.charAt(e.length-1)?`${e}/${E}`:`${e}${E}`;var b=t("6827"),U=t("5a05"),y=t.n(U);const v=new Audio(y.a);var w={CONNECT_AND_JOIN_ROOM:async({dispatch:e})=>{await e("ESTABLISH_SOCKET_CONNECTION"),await e("JOIN_ROOM_AND_INIT")},SET_AND_CONNECT_AND_JOIN_ROOM:({commit:e,dispatch:E},{server:t,room:_})=>(e("SET_SERVER",t),e("SET_ROOM",_),E("CONNECT_AND_JOIN_ROOM")),DISCONNECT_IF_CONNECTED:async({dispatch:e})=>{m()&&await e("DISCONNECT")},ESTABLISH_SOCKET_CONNECTION:async({getters:e,commit:E,dispatch:t})=>{await t("DISCONNECT_IF_CONNECTED");const _=new URL(window.location.pathname,window.location.origin),n=new URL(e.GET_SERVER,_.toString()),a=M("socket.io",n.toString());console.log("ESTABLISH_SOCKET_CONNECTION",a.toString());const{id:i}=await O(a.origin,{path:a.pathname,transports:["websocket","polling"]});E("SET_SOCKET_ID",i);const T=await p("slPing");await t("HANDLE_SLPING",T),await t("ADD_EVENT_HANDLERS")},JOIN_ROOM:async({getters:e,rootGetters:E,dispatch:t})=>{const _=await t("plexclients/FETCH_JOIN_PLAYER_DATA",null,{root:!0});P({eventName:"join",data:{roomId:e.GET_ROOM,desiredUsername:e.GET_DISPLAY_USERNAME,desiredPartyPausingEnabled:e.IS_PARTY_PAUSING_ENABLED,desiredAutoHostEnabled:e.IS_AUTO_HOST_ENABLED,thumb:E["plex/GET_PLEX_USER"].thumb,syncFlexibility:E["settings/GET_SYNCFLEXIBILITY"],..._}});const{success:n,error:a,...i}=await p("joinResult");if(!n)throw new Error(a);return i},JOIN_ROOM_AND_INIT:async({rootGetters:e,dispatch:E,commit:t})=>{const{user:{id:_,...n},users:a,isPartyPausingEnabled:i,isAutoHostEnabled:T,hostId:r}=await E("JOIN_ROOM"),s=Date.now();t("SET_HOST_ID",r),t("SET_USERS",Object.fromEntries(Object.entries(a).map(([e,E])=>[e,{...E,updatedAt:s}]))),t("SET_USER",{id:_,data:{...n,thumb:e["plex/GET_PLEX_USER"].thumb,media:e["plexclients/GET_ACTIVE_MEDIA_POLL_METADATA"],playerProduct:e["plexclients/GET_CHOSEN_CLIENT"].product,syncFlexibility:e["settings/GET_SYNCFLEXIBILITY"],updatedAt:s,...await E("plexclients/FETCH_TIMELINE_POLL_DATA_CACHE",null,{root:!0})}}),t("SET_IS_PARTY_PAUSING_ENABLED",i),t("SET_IS_AUTO_HOST_ENABLED",T),t("SET_IS_IN_ROOM",!0),E("plexclients/START_CLIENT_POLLER_IF_NEEDED",null,{root:!0}),await E("DISPLAY_NOTIFICATION",{text:"Joined room",color:"success"},{root:!0}),await E("SYNC_MEDIA_AND_PLAYER_STATE")},DISCONNECT:async({commit:e,dispatch:E})=>{await E("plexclients/CANCEL_CLIENT_POLLER_IF_NEEDED",null,{root:!0}),D(),e("SET_IS_IN_ROOM",!1),e("SET_USERS",{}),e("SET_HOST_ID",null),e("SET_SERVER",null),e("SET_ROOM",null),e("SET_SOCKET_ID",null),e("CLEAR_MESSAGES"),e("SET_MESSAGES_USER_CACHE",{}),e("SET_IS_PARTY_PAUSING_ENABLED",null),e("SET_IS_AUTO_HOST_ENABLED",null)},SEND_MESSAGE:async({dispatch:e,getters:E},t)=>{await e("ADD_MESSAGE_AND_CACHE",{senderId:E.GET_SOCKET_ID,text:t}),P({eventName:"sendMessage",data:t})},TRANSFER_HOST:(e,E)=>{P({eventName:"transferHost",data:E})},SEND_SET_PARTY_PAUSING_ENABLED:(e,E)=>{P({eventName:"setPartyPausingEnabled",data:E})},SEND_SET_AUTO_HOST_ENABLED:(e,E)=>{P({eventName:"setAutoHostEnabled",data:E})},sendPartyPause:({getters:e,rootGetters:E},t)=>{e.AM_I_HOST&&E["plexclients/GET_CHOSEN_CLIENT_ID"]===b["a"]||!e.IS_PARTY_PAUSING_ENABLED||P({eventName:"partyPause",data:t})},FETCH_SERVERS_HEALTH:async({rootGetters:e,commit:E})=>{const t=Date.now(),_=new AbortController,n=setTimeout(()=>{_.abort()},e.GET_CONFIG.socket_server_health_timeout),a=await Promise.allSettled(e.GET_CONFIG.servers.map(async({url:e})=>[e,{...await o(g(e,"health"),null,{signal:_.signal}),latency:Date.now()-t}]));clearTimeout(n);const i=Object.fromEntries(a.filter(e=>"fulfilled"===e.status).map(({value:e})=>e));E("SET_SERVERS_HEALTH",i)},ADD_EVENT_HANDLERS:({dispatch:e})=>{const E=E=>t=>e(E,t),t=({eventName:e,action:t})=>h({eventName:e,handler:E(t)});t({eventName:"userJoined",action:"HANDLE_USER_JOINED"}),t({eventName:"userLeft",action:"HANDLE_USER_LEFT"}),t({eventName:"newHost",action:"HANDLE_NEW_HOST"}),t({eventName:"newMessage",action:"ADD_MESSAGE_AND_CACHE_AND_NOTIFY"}),t({eventName:"slPing",action:"HANDLE_SLPING"}),t({eventName:"playerStateUpdate",action:"HANDLE_PLAYER_STATE_UPDATE"}),t({eventName:"mediaUpdate",action:"HANDLE_MEDIA_UPDATE"}),t({eventName:"syncFlexibilityUpdate",action:"HANDLE_SYNC_FLEXIBILITY_UPDATE"}),t({eventName:"setPartyPausingEnabled",action:"HANDLE_SET_PARTY_PAUSING_ENABLED"}),t({eventName:"setAutoHostEnabled",action:"HANDLE_SET_AUTO_HOST_ENABLED"}),t({eventName:"partyPause",action:"HANDLE_PARTY_PAUSE"}),t({eventName:"disconnect",action:"HANDLE_DISCONNECT"}),t({eventName:"connect",action:"HANDLE_RECONNECT"}),t({eventName:"kicked",action:"HANDLE_KICKED"})},CANCEL_UPNEXT:({getters:e,commit:E})=>{null!=e.GET_UPNEXT_TIMEOUT_ID&&(clearTimeout(e.GET_UPNEXT_TIMEOUT_ID),E("SET_UPNEXT_TIMEOUT_ID",null))},DISPLAY_UPNEXT:async({rootGetters:e,dispatch:E,commit:t})=>{console.debug("DISPLAY_UPNEXT"),e["plexclients/ACTIVE_PLAY_QUEUE_NEXT_ITEM_EXISTS"]&&t("SET_UP_NEXT_POST_PLAY_DATA",await E("plexclients/FETCH_METADATA_OF_PLAY_QUEUE_ITEM",e["plexclients/GET_ACTIVE_PLAY_QUEUE"].Metadata[e["plexclients/GET_ACTIVE_PLAY_QUEUE"].playQueueSelectedItemOffset+1],{root:!0}),{root:!0}),t("SET_UP_NEXT_TRIGGERED",!0)},SCHEDULE_UPNEXT:async({rootGetters:e,dispatch:E,commit:t},_)=>{if(_.duration&&!Number.isNaN(_.time)){const n=_.duration-_.time-e.GET_CONFIG.synclounge_upnext_trigger_time_from_end;console.debug("SCHEDULE_UPNEXT",n),t("SET_UPNEXT_TIMEOUT_ID",setTimeout(()=>E("DISPLAY_UPNEXT"),n))}},CALC_IS_IN_UPNEXT_REGION:async({rootGetters:e},E)=>E.duration&&E.time&&E.duration-E.time<e.GET_CONFIG.synclounge_upnext_trigger_time_from_end,PROCESS_UPNEXT:async({getters:e,rootGetters:E,dispatch:t,commit:_},n)=>{await t("CANCEL_UPNEXT"),e.AM_I_HOST&&"stopped"!==n.state&&!E.GET_UP_NEXT_POST_PLAY_DATA?(await t("CALC_IS_IN_UPNEXT_REGION",n)?e.GET_UP_NEXT_TRIGGERED||await t("DISPLAY_UPNEXT"):"playing"===n.state&&await t("SCHEDULE_UPNEXT",n),_("SET_UP_NEXT_TRIGGERED",!1)):e.GET_UP_NEXT_TRIGGERED&&_("SET_UP_NEXT_TRIGGERED",!1)},PROCESS_PLAYER_STATE_UPDATE:async({getters:e,dispatch:E,commit:t},_)=>{const n=await E("plexclients/FETCH_TIMELINE_POLL_DATA_CACHE",null,{root:!0});t("SET_USER_PLAYER_STATE",{...n,id:e.GET_SOCKET_ID}),P({eventName:"playerStateUpdate",data:n}),await E("PROCESS_UPNEXT",n),"buffering"===n.state||_||await E("SYNC_PLAYER_STATE")},PROCESS_MEDIA_UPDATE:async({dispatch:e,getters:E,commit:t,rootGetters:_},n)=>{const a=await e("plexclients/FETCH_TIMELINE_POLL_DATA_CACHE",null,{root:!0});"stopped"!==a.state&&_.GET_UP_NEXT_POST_PLAY_DATA&&t("SET_UP_NEXT_POST_PLAY_DATA",null,{root:!0}),E.GET_UP_NEXT_TRIGGERED&&t("SET_UP_NEXT_TRIGGERED",!1),t("SET_USER_MEDIA",{id:E.GET_SOCKET_ID,media:_["plexclients/GET_ACTIVE_MEDIA_POLL_METADATA"]}),t("SET_USER_PLAYER_STATE",{...a,id:E.GET_SOCKET_ID}),P({eventName:"mediaUpdate",data:{media:_["plexclients/GET_ACTIVE_MEDIA_POLL_METADATA"],...a,userInitiated:n}}),await e("PROCESS_UPNEXT",a),n||await e("SYNC_PLAYER_STATE")},ADD_MESSAGE_AND_CACHE_AND_NOTIFY:async({getters:e,dispatch:E},t)=>{if(await E("ADD_MESSAGE_AND_CACHE",t),e.ARE_SOUND_NOTIFICATIONS_ENABLED&&v.play(),e.ARE_NOTIFICATIONS_ENABLED){if("granted"!==Notification.permission){const e=await Notification.requestPermission();if("granted"!==e)return}const{username:E,thumb:_}=e.GET_MESSAGES_USER_CACHE_USER(t.senderId);new Notification(E,{body:t.text,icon:_})}},ADD_MESSAGE_AND_CACHE:({getters:e,commit:E},t)=>{const{username:_,thumb:n}=e.GET_USER(t.senderId);e.GET_MESSAGES_USER_CACHE_USER(t.senderId)||E("SET_MESSAGES_USER_CACHE_USER",{id:t.senderId,data:{username:_,thumb:n}}),E("ADD_MESSAGE",{...t,time:Date.now()})},CANCEL_IN_PROGRESS_SYNC:({getters:e,commit:E})=>{e.GET_SYNC_CANCEL_TOKEN&&(e.GET_SYNC_CANCEL_TOKEN.abort("Sync cancelled"),console.log("sync cancelled"),E("SET_SYNC_CANCEL_TOKEN",null))},MANUAL_SYNC:async({getters:e,rootGetters:E,dispatch:t,commit:_})=>{console.debug("MANUAL_SYNC"),await t("CANCEL_IN_PROGRESS_SYNC");const n=e.GET_ADJUSTED_HOST_TIME(),a=E["plexclients/GET_CHOSEN_CLIENT_ID"]!==b["a"]&&"playing"===e.GET_HOST_USER.state?n+E["plexclients/GET_LATENCY"]:n,i=new L.a.cancelToken;_("SET_SYNC_CANCEL_TOKEN",i);try{await t("plexclients/SEEK_TO",{cancelSignal:i.signal,offset:a},{root:!0})}catch(T){console.warn("Error caught in sync logic",T)}_("SET_SYNC_CANCEL_TOKEN",null)},SYNC_MEDIA_AND_PLAYER_STATE:async({getters:e,commit:E,dispatch:t})=>{if(e.AM_I_HOST||e.GET_SYNC_CANCEL_TOKEN)return;const _=new L.a.cancelToken;E("SET_SYNC_CANCEL_TOKEN",_);try{await t("_SYNC_MEDIA_AND_PLAYER_STATE",_.signal)}catch(n){console.log("Error caught in sync logic",n)}E("SET_SYNC_CANCEL_TOKEN",null)},_SYNC_MEDIA_AND_PLAYER_STATE:async({getters:e,dispatch:E,rootGetters:t},_)=>{console.debug("_SYNC_MEDIA_AND_PLAYER_STATE");const n=await E("plexclients/FETCH_TIMELINE_POLL_DATA_CACHE",null,{root:!0});if(t["plexclients/ALREADY_SYNCED_ON_CURRENT_TIMELINE"])throw new Error("Already synced with this timeline. Need to wait for new one to sync again");if("stopped"===e.GET_HOST_USER.state)return"stopped"!==n.state?(await E("DISPLAY_NOTIFICATION",{text:"The host pressed stop",color:"info"},{root:!0}),void await E("plexclients/PRESS_STOP",null,{root:!0})):void 0;if(t["settings/GET_AUTOPLAY"]){const _=await E("plexservers/FIND_BEST_MEDIA_MATCH",e.GET_HOST_USER.media,{root:!0});if(_){if(!t["plexclients/IS_THIS_MEDIA_PLAYING"](_))return void await E("PLAY_MEDIA_AND_SYNC_TIME",_)}else{const t=`Failed to find a compatible copy of ${e.GET_HOST_USER.media.title}. If you have access to the content try manually playing it.`;console.warn(t),await E("DISPLAY_NOTIFICATION",{text:t,color:"error"},{root:!0})}}await E("_SYNC_PLAYER_STATE",_)},SYNC_PLAYER_STATE:async({dispatch:e,getters:E,commit:t})=>{if(E.AM_I_HOST||E.GET_SYNC_CANCEL_TOKEN)return;const _=new L.a.cancelToken;t("SET_SYNC_CANCEL_TOKEN",_);try{await e("_SYNC_PLAYER_STATE",_.signal)}catch(n){console.log("Error caught in sync logic",n)}t("SET_SYNC_CANCEL_TOKEN",null)},_SYNC_PLAYER_STATE:async({getters:e,dispatch:E},t)=>{console.debug("_SYNC_PLAYER_STATE");const _=await E("plexclients/FETCH_TIMELINE_POLL_DATA_CACHE",null,{root:!0});if("buffering"!==_.state&&"stopped"!==_.state){if("playing"===e.GET_HOST_USER.state&&"paused"===_.state)return await E("DISPLAY_NOTIFICATION",{text:"Resuming..",color:"info"},{root:!0}),void await E("plexclients/PRESS_PLAY",t,{root:!0});if(("paused"===e.GET_HOST_USER.state||"buffering"===e.GET_HOST_USER.state)&&"playing"===_.state)return await E("DISPLAY_NOTIFICATION",{text:"Pausing..",color:"info"},{root:!0}),void await E("plexclients/PRESS_PAUSE",t,{root:!0});await E("plexclients/SYNC",t,{root:!0}),console.log("done sync")}},PLAY_MEDIA_AND_SYNC_TIME:async({getters:e,rootGetters:E,dispatch:t},_)=>{const n=e.GET_ADJUSTED_HOST_TIME(),a=E["plexclients/GET_CHOSEN_CLIENT_ID"]!==b["a"]&&"playing"===e.GET_HOST_USER.state?n+E["plexclients/GET_LATENCY"]:n;await t("plexclients/PLAY_MEDIA",{mediaIndex:_.mediaIndex||0,offset:a||0,metadata:_,machineIdentifier:_.machineIdentifier},{root:!0})},REQUEST_ALLOW_NOTIFICATIONS:async({commit:e})=>{const E=await Notification.requestPermission();e("SET_ARE_NOTIFICATIONS_ENABLED","granted"===E)},CHANGE_NOTIFICATIONS_ENABLED:async({commit:e,dispatch:E},t)=>{t?"granted"===Notification.permission?e("SET_ARE_NOTIFICATIONS_ENABLED",!0):await E("REQUEST_ALLOW_NOTIFICATIONS"):e("SET_ARE_NOTIFICATIONS_ENABLED",!1)},SEND_SYNC_FLEXIBILITY_UPDATE:({rootGetters:e})=>{P({eventName:"syncFlexibilityUpdate",data:e["settings/GET_SYNCFLEXIBILITY"]})},UPDATE_SYNC_FLEXIBILITY:async({getters:e,dispatch:E,commit:t},_)=>{t("settings/SET_SYNCFLEXIBILITY",_,{root:!0}),e.IS_IN_ROOM&&(t("SET_USER_SYNC_FLEXIBILITY",{id:e.GET_SOCKET_ID,syncFlexibility:_}),await E("SEND_SYNC_FLEXIBILITY_UPDATE"))},KICK_USER:(e,E)=>{console.log("KICK_USER",E),P({eventName:"kick",data:E})},DISCONNECT_AND_NAVIGATE_HOME:async({dispatch:e})=>{await e("DISCONNECT"),await e("NAVIGATE_HOME",null,{root:!0})},...f};const H=()=>({socketId:null,server:null,room:null,users:{},hostId:null,messagesUserCache:{},messages:[],isPartyPausingEnabled:null,isAutoHostEnabled:null,serversHealth:null,syncCancelToken:null,isInRoom:!1,upnextTimeoutId:null,upNextTriggered:!1,areNotificationsEnabled:null,areSoundNotificationsEnabled:null});var Y=H,k={RESET:e=>{Object.assign(e,Y())},SET_USERS:(e,E)=>{e.users=E},SET_ROOM:(e,E)=>{e.room=E},SET_IS_PARTY_PAUSING_ENABLED:(e,E)=>{e.isPartyPausingEnabled=E},SET_IS_AUTO_HOST_ENABLED:(e,E)=>{e.isAutoHostEnabled=E},ADD_MESSAGE(e,E){e.messages.push(E)},CLEAR_MESSAGES(e){e.messages=[]},SET_SERVERS_HEALTH:(e,E)=>{e.serversHealth=E},SET_SERVER:(e,E)=>{e.server=E},SET_SYNC_CANCEL_TOKEN:(e,E)=>{e.syncCancelToken=E},SET_IS_IN_ROOM:(e,E)=>{e.isInRoom=E},SET_SOCKET_ID:(e,E)=>{e.socketId=E},SET_USER:(e,{id:E,data:t})=>{_["a"].set(e.users,E,t)},SET_MESSAGES_USER_CACHE:(e,E)=>{e.messagesUserCache=E},SET_MESSAGES_USER_CACHE_USER:(e,{id:E,data:t})=>{_["a"].set(e.messagesUserCache,E,t)},SET_HOST_ID:(e,E)=>{e.hostId=E},DELETE_USER:(e,E)=>{_["a"].delete(e.users,E)},SET_USER_PLAYER_STATE:(e,{id:E,state:t,time:n,duration:a,playbackRate:i})=>{_["a"].set(e.users[E],"state",t),_["a"].set(e.users[E],"time",n),_["a"].set(e.users[E],"duration",a),_["a"].set(e.users[E],"playbackRate",i),_["a"].set(e.users[E],"updatedAt",Date.now())},SET_USER_MEDIA:(e,{id:E,media:t})=>{_["a"].set(e.users[E],"media",t)},SET_USER_SYNC_FLEXIBILITY:(e,{id:E,syncFlexibility:t})=>{_["a"].set(e.users[E],"syncFlexibility",t)},SET_UPNEXT_TIMEOUT_ID:(e,E)=>{e.upnextTimeoutId=E},SET_UP_NEXT_TRIGGERED:(e,E)=>{e.upNextTriggered=E},SET_ARE_NOTIFICATIONS_ENABLED:(e,E)=>{e.areNotificationsEnabled=E},SET_ARE_SOUND_NOTIFICATIONS_ENABLED:(e,E)=>{e.areSoundNotificationsEnabled=E}};const V=e=>{switch(e){case"low":return 1;case"medium":return 2;case"high":return 3;default:return 1e3}},F=e=>e.latency+10*V(e.load);var x={GET_MESSAGES_USER_CACHE_USER:e=>E=>e.messagesUserCache[E],GET_USER:(e,E)=>e=>E.GET_USERS[e],GET_SOCKET_ID:e=>e.socketId,GET_HOST_ID:e=>e.hostId,GET_ROOM:e=>e.room,GET_USERS:e=>e.users,GET_MESSAGES:e=>e.messages,IS_PARTY_PAUSING_ENABLED:(e,E,t,_)=>{var n;return null!==(n=e.isPartyPausingEnabled)&&void 0!==n?n:_.GET_CONFIG.default_party_pause_enabled},IS_AUTO_HOST_ENABLED:(e,E,t,_)=>{var n;return null!==(n=e.isAutoHostEnabled)&&void 0!==n?n:_.GET_CONFIG.default_auto_host_enabled},GET_HOST_USER:(e,E)=>E.GET_USER(E.GET_HOST_ID),AM_I_HOST:(e,E)=>E.GET_HOST_ID===E.GET_SOCKET_ID,GET_SERVERS_HEALTH:e=>e.serversHealth,GET_SERVER_HEALTH:e=>E=>{var t;return null===(t=e.serversHealth)||void 0===t?void 0:t[E]},GET_SERVER_HEALTH_SCORES:(e,E)=>E.GET_SERVERS_HEALTH?Object.fromEntries(Object.entries(E.GET_SERVERS_HEALTH).map(([e,E])=>[e,F(E)])):null,GET_BEST_SERVER:(e,E)=>E.GET_SERVER_HEALTH_SCORES?Object.entries(E.GET_SERVER_HEALTH_SCORES).reduce((e,E)=>E[1]<e[1]?E:e)[0]:null,GET_DISPLAY_USERNAME:(e,E,t,_)=>_["settings/GET_ALTUSERNAME"]||_["plex/GET_PLEX_USER"].username||_["plex/GET_PLEX_USER"].title,GET_SERVER:e=>e.server,GET_SYNC_CANCEL_TOKEN:e=>e.syncCancelToken,IS_IN_ROOM:e=>e.isInRoom,GET_ADJUSTED_HOST_TIME:(e,E)=>()=>E.GET_HOST_USER?"playing"===E.GET_HOST_USER.state?E.GET_HOST_USER.time+(Date.now()-E.GET_HOST_USER.updatedAt)*E.GET_HOST_USER.playbackRate:E.GET_HOST_USER.time:null,GET_UPNEXT_TIMEOUT_ID:e=>e.upnextTimeoutId,GET_UP_NEXT_TRIGGERED:e=>e.upNextTriggered,ARE_NOTIFICATIONS_ENABLED:(e,E,t,_)=>{var n,a;return null!==(n=e.areNotificationsEnabled)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_are_notification_enabled},ARE_SOUND_NOTIFICATIONS_ENABLED:(e,E,t,_)=>{var n,a;return null!==(n=e.areSoundNotificationsEnabled)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_are_sound_notification_enabled}},X={namespaced:!0,state:Y,getters:x,mutations:k,actions:w},B={};const K=()=>({autoplay:null,clientPollInterval:null,syncMode:null,syncFlexibility:null,customServerUrl:"https://",slPlayerQuality:null,slPlayerVolume:null,slPlayerForceTranscode:null,altUsername:null,autoSkipIntro:null});var j=K,Q={RESET:e=>{Object.assign(e,j())},SET_AUTOPLAY:(e,E)=>{e.autoplay=E},SET_SLPLAYERFORCETRANSCODE:(e,E)=>{e.slPlayerForceTranscode=E},SET_CLIENTPOLLINTERVAL:(e,E)=>{e.clientPollInterval=E},SET_SYNCFLEXIBILITY:(e,E)=>{e.syncFlexibility=E},SET_SYNCMODE:(e,E)=>{e.syncMode=E},SET_ALTUSERNAME:(e,E)=>{e.altUsername=E},SET_CUSTOM_SERVER_URL:(e,E)=>{e.customServerUrl=E},SET_SLPLAYERQUALITY:(e,E)=>{e.slPlayerQuality=E},SET_SLPLAYERVOLUME:(e,E)=>{e.slPlayerVolume=E},SET_AUTO_SKIP_INTRO:(e,E)=>{e.autoSkipIntro=E}},$={GET_AUTOPLAY:(e,E,t,_)=>{var n,a;return null!==(n=e.autoplay)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_slplayer_autoplay},GET_CLIENTPOLLINTERVAL:(e,E,t,_)=>{var n,a;return null!==(n=e.clientPollInterval)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_client_poll_interval},GET_SYNCMODE:(e,E,t,_)=>{var n,a;return null!==(n=e.syncMode)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_sync_mode},GET_SYNCFLEXIBILITY:(e,E,t,_)=>{var n,a;return null!==(n=e.syncFlexibility)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_sync_flexability},GET_SLPLAYERQUALITY:(e,E,t,_)=>{var n,a,i;return null!==(n=null!==(a=e.slPlayerQuality)&&void 0!==a?a:null===(i=_.GET_CONFIG)||void 0===i?void 0:i.default_slplayer_quality)&&void 0!==n?n:null},GET_SLPLAYERVOLUME:(e,E,t,_)=>{var n,a;return null!==(n=e.slPlayerVolume)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_slplayer_volume},GET_SLPLAYERFORCETRANSCODE:(e,E,t,_)=>{var n,a;return null!==(n=e.slPlayerForceTranscode)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_slplayer_force_transcode},GET_ALTUSERNAME:e=>e.altUsername,GET_AUTO_SKIP_INTRO:(e,E,t,_)=>{var n,a;return null!==(n=e.autoSkipIntro)&&void 0!==n?n:null===(a=_.GET_CONFIG)||void 0===a?void 0:a.default_auto_skip_intro}},W={namespaced:!0,state:j,mutations:Q,getters:$,actions:B},Z={any:e=>Promise.all(e.map(e=>e.then(e=>{throw e},e=>e))).then(e=>{throw e},e=>e)};const z=e=>e.reduce((e,E)=>e.filter(e=>!E.includes(e))),q=e=>e.reduce((e,E)=>e.filter(e=>E.includes(e))),J=(e=1,E=0)=>{const t=Math.ceil(Math.min(e,E)),_=Math.floor(Math.max(e,E));return Math.floor(t+Math.random()*(_-t+1))};var ee={FETCH_PLEX_INIT_AUTH:async({getters:e},E)=>o("https://plex.tv/api/v2/pins",{strong:!0},{method:"POST",headers:e.GET_PLEX_INITIAL_AUTH_PARAMS,signal:E}),REQUEST_PLEX_AUTH_TOKEN:async({getters:e,commit:E,dispatch:t},{signal:_,id:n})=>{const a=await o("https://plex.tv/api/v2/pins/"+n,null,{headers:e.GET_PLEX_INITIAL_AUTH_PARAMS,signal:_});if(!a.authToken)throw new Error("Plex didn't give authToken");E("SET_PLEX_AUTH_TOKEN",a.authToken),await t("FETCH_PLEX_USER",_)},FETCH_PLEX_USER:async({getters:e,commit:E},t)=>{const _=await o("https://plex.tv/api/v2/user",{...e.GET_PLEX_BASE_PARAMS(),includeSubscriptions:1,includeProviders:1,includeSettings:1,includeSharedSettings:1},{signal:t});E("SET_PLEX_USER",_)},_FETCH_PLEX_DEVICES:async({state:{areDevicesCached:e},commit:E,dispatch:t,getters:_,rootGetters:n})=>{const a=n["plexclients/GET_PLEX_CLIENT_IDS"].filter(e=>e!==b["a"]),i=n["plexservers/GET_PLEX_SERVER_IDS"],T=await o("https://plex.tv/api/v2/resources",{..._.GET_PLEX_BASE_PARAMS(),includeHttps:1,includeRelay:1});await Promise.allSettled(T.map(async e=>{if(-1!==e.provides.indexOf("player"))E("plexclients/ADD_PLEX_CLIENT",e,{root:!0});else if(-1!==e.provides.indexOf("server"))try{const _=await t("FIND_WORKING_CONNECTION_PREFERRED",{name:e.name,connections:e.connections,accessToken:e.accessToken}),n=await t("plexservers/FETCH_ALL_LIBRARIES",{machineIdentifier:e.clientIdentifier,manualConnection:{chosenConnection:_,accessToken:e.accessToken}},{root:!0});E("plexservers/ADD_PLEX_SERVER",{...e,libraries:n,chosenConnection:_},{root:!0})}catch(_){const E="Unable to find working connection to plex server: "+e.name;await t("DISPLAY_NOTIFICATION",{text:E,color:"error"},{root:!0}),console.error(E,_)}}));const r=z([a,n["plexclients/GET_PLEX_CLIENT_IDS"]]);r.forEach(e=>{E("plexclients/DELETE_PLEX_CLIENT",e,{root:!0})});const s=z([i,n["plexservers/GET_PLEX_SERVER_IDS"]]);s.forEach(e=>{E("plexservers/DELETE_PLEX_SERVER",e,{root:!0})}),E("plexclients/UPDATE_SLPLAYER_LAST_SEEN_TO_NOW",null,{root:!0}),e||E("SET_ARE_DEVICES_CACHED",!0)},FETCH_PLEX_DEVICES:async({getters:e,commit:E,dispatch:t})=>{if(!e.GET_DEVICE_FETCH_PROMISE){const e=t("_FETCH_PLEX_DEVICES");E("SET_DEVICE_FETCH_PROMISE",e)}await e.GET_DEVICE_FETCH_PROMISE,E("SET_DEVICE_FETCH_PROMISE",null)},FETCH_PLEX_DEVICES_IF_NEEDED:async({state:{areDevicesCached:e},getters:E,dispatch:t})=>{e||null!=E.GET_DEVICE_FETCH_PROMISE||await t("FETCH_PLEX_DEVICES"),await E.GET_DEVICE_FETCH_PROMISE},TEST_PLEX_CONNECTION:async({getters:e},{connection:E,accessToken:t,signal:_})=>(await r(E.uri,e.GET_PLEX_BASE_PARAMS(t),{signal:_}),E),FIND_WORKING_CONNECTION:async({dispatch:e},{connections:E,accessToken:t})=>{const _=new AbortController,n=await Z.any(E.map(E=>e("TEST_PLEX_CONNECTION",{connection:E,accessToken:t,signal:_.signal})));return _.abort(),n},FIND_WORKING_CONNECTION_PREFERRED:async({dispatch:e},{name:E,connections:t,accessToken:_})=>{console.debug("FIND_WORKING_CONNECTION_PREFERRED",E);const n=t.filter(e=>!e.relay),a=n.filter(e=>"https"===e.protocol);try{const t=await e("FIND_WORKING_CONNECTION",{connections:a,accessToken:_});return console.log(E,"using secure connection",t),t}catch(r){console.warn(E,"no working secure connections found")}const i=n.filter(e=>"http"===e.protocol);try{const t=await e("FIND_WORKING_CONNECTION",{connections:i,accessToken:_});return console.log(E,"using insecure connection",t),t}catch(r){console.warn(E,"no working insecure connections found")}const T=t.filter(e=>e.relay);try{const t=await e("FIND_WORKING_CONNECTION",{connections:T,accessToken:_});return console.log(E,"using relay connection",E),t}catch(r){throw console.error(E,"no working connections found",t),r}}},Ee=t("1602");const te=()=>({user:null,areDevicesCached:!1,deviceFetchPromise:null,plexAuthToken:null,clientIdentifier:Object(Ee["a"])()});var _e=te,ne={RESET:e=>{Object.assign(e,_e())},SET_ARE_DEVICES_CACHED:(e,E)=>{e.areDevicesCached=E},SET_DEVICE_FETCH_PROMISE:(e,E)=>{e.deviceFetchPromise=E},SET_PLEX_USER:(e,E)=>{e.user=E},SET_PLEX_AUTH_TOKEN:(e,E)=>{e.plexAuthToken=E}};const ae=e=>e[0].toUpperCase()+e.slice(1);var ie={IS_UNAUTHORIZED:(e,E)=>!E.GET_PLEX_AUTH_TOKEN||e.areDevicesCached&&!E.IS_USER_AUTHORIZED,GET_PLEX_DEVICE_NAME:(e,E,t,_)=>{switch(_.GET_BROWSER.name){case"edge-chromium":return"Microsoft Edge";default:return ae(_.GET_BROWSER.name)}},GET_PLEX_PRODUCT_HEADER:()=>"SyncLounge",GET_PLEX_DEVICE_DEVICE_HEADER:(e,E,t,_)=>_.GET_BROWSER.os,GET_PLEX_DEVICE_NAME_HEADER:(e,E)=>E.GET_PLEX_DEVICE_NAME,GET_PLEX_PLATFORM_HEADER:(e,E)=>E.GET_PLEX_DEVICE_NAME,GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER:()=>`${window.screen.availWidth}x${window.screen.availHeight},${window.screen.width}x${window.screen.height}`,GET_PLEX_INITIAL_AUTH_PARAMS:(e,E,t,_)=>({"X-Plex-Product":E.GET_PLEX_PRODUCT_HEADER,"X-Plex-Version":t.version,"X-Plex-Client-Identifier":E.GET_CLIENT_IDENTIFIER,"X-Plex-Platform":E.GET_PLEX_PLATFORM_HEADER,"X-Plex-Platform-Version":_.GET_BROWSER.version,"X-Plex-Features":"external-media,indirect-media","X-Plex-Model":"hosted","X-Plex-Device":E.GET_PLEX_DEVICE_DEVICE_HEADER,"X-Plex-Device-Name":E.GET_PLEX_DEVICE_NAME_HEADER,"X-Plex-Device-Screen-Resolution":E.GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER,"X-Plex-Language":"en"}),GET_PLEX_TOKEN_PARAMS:(e,E)=>e=>({"X-Plex-Token":e||E.GET_PLEX_AUTH_TOKEN}),GET_PLEX_BASE_PARAMS:(e,E)=>e=>({...E.GET_PLEX_INITIAL_AUTH_PARAMS,...E.GET_PLEX_TOKEN_PARAMS(e),"X-Plex-Text-Format":"plain","X-Plex-Provider-Version":1.3}),GET_PLEX_AUTH_URL:(e,E,t,_)=>e=>{const n={"context[device][product]":E.GET_PLEX_PRODUCT_HEADER,"context[device][version]":t.version,"context[device][platform]":E.GET_PLEX_PLATFORM_HEADER,"context[device][platformVersion]":_.GET_BROWSER.version,"context[device][device]":E.GET_PLEX_DEVICE_DEVICE_HEADER,"context[device][name]":E.GET_PLEX_DEVICE_NAME_HEADER,"context[device][model]":"hosted","context[device][screenResolution]":E.GET_PLEX_DEVICE_SCREEN_RESOLUTION_HEADER,"context[device][environment]":"bundled","context[device][layout]":"desktop",clientID:E.GET_CLIENT_IDENTIFIER,code:e};return i("https://app.plex.tv/auth#",n)},GET_DEVICE_FETCH_PROMISE:e=>e.deviceFetchPromise,GET_PLEX_USER:e=>e.user,IS_USER_AUTHORIZED:(e,E,t,_)=>E.IS_AUTHENTICATION_TYPE_NONE||_["plexservers/DOES_USER_HAVE_AUTHORIZED_SERVER"]||E.IS_PLEX_USER_AUTHORIZED,IS_PLEX_USER_AUTHORIZED:(e,E,t,_)=>{var n,a;return(null===(n=_.GET_CONFIG)||void 0===n||null===(a=n.authentication)||void 0===a?void 0:a.type.includes("user"))&&E.GET_PLEX_USER&&q([[E.GET_PLEX_USER.username,E.GET_PLEX_USER.email],_.GET_CONFIG.authentication.authorized]).length>0},IS_AUTHENTICATION_TYPE_NONE:(e,E,t,_)=>{var n;return"none"===(null===(n=_.GET_CONFIG)||void 0===n?void 0:n.authentication.mechanism)},GET_PLEX_AUTH_TOKEN:e=>e.plexAuthToken,GET_CLIENT_IDENTIFIER:e=>e.clientIdentifier},Te={namespaced:!0,state:_e,actions:ee,getters:ie,mutations:ne},re=t("27ff"),se={FIND_AND_SET_CONNECTION:async({dispatch:e,commit:E},{clientIdentifier:t,signal:_})=>{const n=await e("FIND_CONNECTION",{clientIdentifier:t,signal:_});E("SET_CLIENT_CHOSEN_CONNECTION",{clientIdentifier:t,chosenConnection:n})},FIND_CONNECTION:({getters:e,dispatch:E},{clientIdentifier:t,signal:_})=>{if(t===b["a"])return!0;const{connections:n,accessToken:a}=e.GET_PLEX_CLIENT(t);return E("FIND_WORKING_CONNECTION",{clientIdentifier:t,connections:n,accessToken:a,signal:_})},FIND_WORKING_CONNECTION:async({dispatch:e},{connections:E,accessToken:t,clientIdentifier:_,signal:n})=>{const a=new AbortController,i=L.a.signalRace([n,a.signal]),T=await Z.any(E.map(E=>e("TEST_PLEX_CLIENT_CONNECTION",{connection:E,accessToken:t,clientIdentifier:_,signal:i})));return a.abort(),T},TEST_PLEX_CLIENT_CONNECTION:async({dispatch:e},{connection:E,...t})=>(await e("SEND_CLIENT_REQUEST_WITH_URI",{path:"/player/timeline/poll",params:{wait:0},uri:E.uri,...t}),E),PLAY_MEDIA:async({getters:e,commit:E,dispatch:t,rootGetters:_},{mediaIndex:n,offset:a,metadata:i,machineIdentifier:T,userInitiated:r})=>{console.debug("PLAY_MEDIA");const s=_["plexservers/GET_PLEX_SERVER"](T);if(E("SET_ACTIVE_PLAY_QUEUE",await t("plexservers/CREATE_PLAY_QUEUE",{machineIdentifier:T,ratingKey:i.ratingKey},{root:!0})),E("SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER",T),e.GET_CHOSEN_CLIENT_ID===b["a"])E("SET_ACTIVE_MEDIA_METADATA",i),E("SET_ACTIVE_SERVER_ID",T),E("plexservers/SET_LAST_SERVER_ID",T,{root:!0}),E("slplayer/SET_MEDIA_INDEX",n,{root:!0}),E("slplayer/SET_OFFSET_MS",Math.round(a)||0,{root:!0}),E("slplayer/SET_PLAYER_STATE","buffering",{root:!0}),E("slplayer/SET_MASK_PLAYER_STATE",!0,{root:!0}),await t("synclounge/PROCESS_MEDIA_UPDATE",r,{root:!0}),_["slplayer/IS_PLAYER_INITIALIZED"]?await t("slplayer/CHANGE_PLAYER_SRC",!0,{root:!0}):await t("slplayer/NAVIGATE_AND_INITIALIZE_PLAYER",null,{root:!0});else{const _=e.GET_COMMAND_ID;await t("SEND_CHOSEN_CLIENT_REQUEST",{path:"/player/playback/playMedia",params:{wait:0,key:i.key,offset:Math.round(a)||0,machineIdentifier:T,address:s.chosenConnection.address,port:s.chosenConnection.port,protocol:s.chosenConnection.protocol,path:s.chosenConnection.uri+i.key,token:s.accessToken,containerKey:"/playQueues/"+e.GET_ACTIVE_PLAY_QUEUE.playQueueID,...n&&{mediaIndex:n}}}),E("SET_LAST_PLAY_MEDIA_COMMAND_ID",_)}},RESERVE_COMMAND_ID:({getters:e,commit:E})=>{const t=e.GET_COMMAND_ID;return E("INCREMENT_COMMAND_ID"),t},SEND_CLIENT_REQUEST_WITH_URI:async({dispatch:e,rootGetters:E},{clientIdentifier:t,accessToken:_,uri:n,path:a,params:i,signal:T})=>{const r=await e("RESERVE_COMMAND_ID");return c(`${n}${a}`,{commandID:r,type:"video",...i},{headers:{...E["plex/GET_PLEX_BASE_PARAMS"](_),"X-Plex-Target-Client-Identifier":t},signal:T})},SEND_CLIENT_REQUEST:({dispatch:e,getters:E},{clientIdentifier:t,..._})=>{const{accessToken:n,chosenConnection:{uri:a}}=E.GET_PLEX_CLIENT(t);return e("SEND_CLIENT_REQUEST_WITH_URI",{accessToken:n,uri:a,clientIdentifier:t,..._})},SEND_CHOSEN_CLIENT_REQUEST:({dispatch:e,getters:E},t)=>e("SEND_CLIENT_REQUEST",{clientIdentifier:E.GET_CHOSEN_CLIENT_ID,...t}),FETCH_CHOSEN_CLIENT_TIMELINE:async({dispatch:e,commit:E},t)=>{const _=Date.now(),n=await e("SEND_CHOSEN_CLIENT_REQUEST",{path:"/player/timeline/poll",params:{wait:0},signal:t}),a=(Date.now()-_)/2;E("SET_LATENCY",a);const i=n.MediaContainer[0].Timeline.find(e=>"video"===e.type),T=parseInt(i.time,10);return{...i,time:"playing"===i.state?T+a:T,duration:parseInt(i.duration,10),updatedAt:Date.now(),playQueueItemID:parseInt(i.playQueueItemID,10),commandID:parseInt(n.MediaContainer[0].commandID,10)}},UPDATE_PLEX_CLIENT_TIMELINE:async({getters:e,rootGetters:E,dispatch:t,commit:_},n)=>{if(e.GET_PLEX_CLIENT_TIMELINE&&e.GET_PLEX_CLIENT_TIMELINE.machineIdentifier===n.machineIdentifier&&e.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM&&e.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM.playQueueItemID===n.playQueueItemID)(e.GET_PLEX_CLIENT_TIMELINE.state!==n.state||e.GET_PLEX_CLIENT_TIMELINE.duration!==n.duration||Math.abs(e.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA().time-n.time)>E.GET_CONFIG.plex_client_time_delta_state_change_threshold)&&(_("SET_PLEX_CLIENT_TIMELINE",n),await t("synclounge/PROCESS_PLAYER_STATE_UPDATE",null,{root:!0}));else{if("stopped"===n.state)_("SET_ACTIVE_MEDIA_METADATA",null),_("SET_ACTIVE_SERVER_ID",null);else{_("SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER",n.machineIdentifier),_("SET_ACTIVE_PLAY_QUEUE",await t("plexservers/FETCH_PLAY_QUEUE",{machineIdentifier:e.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,playQueueID:n.playQueueID},{root:!0})),await t("UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM");const a=E["plexservers/GET_PLEX_SERVER"](e.GET_ACTIVE_SERVER_ID).name;await t("DISPLAY_NOTIFICATION",{text:`Now Playing: ${re["a"].getCombinedTitle(e.GET_ACTIVE_MEDIA_METADATA)} from ${a}`,color:"info"},{root:!0})}_("SET_PLEX_CLIENT_TIMELINE",n),E["synclounge/IS_IN_ROOM"]&&await t("synclounge/PROCESS_MEDIA_UPDATE",null,{root:!0})}},POLL_PLEX_CLIENT:async({getters:e,dispatch:E,commit:t},_)=>{let n=e.GET_COMMAND_ID;try{const a=await E("FETCH_CHOSEN_CLIENT_TIMELINE",_);if(null!=e.GET_LAST_PLAY_MEDIA_COMMAND_ID&&a.commandID<e.GET_LAST_PLAY_MEDIA_COMMAND_ID)return;a.commandID>e.GET_COMMAND_ID&&(n=a.commandID,t("SET_COMMAND_ID",a.commandID+1)),t("SET_PLEX_CLIENT_TIMELINE_COMMAND_ID",n),await E("UPDATE_PLEX_CLIENT_TIMELINE",a)}catch(a){console.error("Failed fetching client timeline: ",a)}},FETCH_TIMELINE_POLL_DATA_CACHE:({getters:e,dispatch:E})=>{switch(e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/FETCH_TIMELINE_POLL_DATA",null,{root:!0});default:return e.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA()}},FETCH_TIMELINE_POLL_DATA:async({getters:e,dispatch:E})=>{switch(e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/FETCH_TIMELINE_POLL_DATA",null,{root:!0});default:return await E("POLL_PLEX_CLIENT"),e.GET_ADJUSTED_PLEX_CLIENT_POLL_DATA()}},FETCH_JOIN_PLAYER_DATA:async({getters:e,dispatch:E})=>({...await E("FETCH_TIMELINE_POLL_DATA"),media:e.GET_ACTIVE_MEDIA_POLL_METADATA,playerProduct:e.GET_CHOSEN_CLIENT.product}),UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID:({commit:e,getters:E})=>{E.GET_CHOSEN_CLIENT_ID!==b["a"]&&e("SET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID",E.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID)},SYNC:async({getters:e,dispatch:E,rootGetters:t},_)=>{await E("UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID");const n=await E("FETCH_TIMELINE_POLL_DATA_CACHE"),a=t["synclounge/GET_ADJUSTED_HOST_TIME"](),i=a-n.time,T=Math.abs(i);if(console.debug("SYNC difference",i),T>t["settings/GET_SYNCFLEXIBILITY"]||"paused"===t["synclounge/GET_HOST_USER"].state&&T>t.GET_CONFIG.paused_sync_flexibility){const n=e.GET_CHOSEN_CLIENT_ID!==b["a"]&&"playing"===t["synclounge/GET_HOST_USER"].state?a+e.GET_LATENCY:a;return"cleanseek"===t["settings/GET_SYNCMODE"]||"paused"===t["synclounge/GET_HOST_USER"].state?E("SEEK_TO",{cancelSignal:_,offset:n}):E("SKIP_AHEAD",{cancelSignal:_,offset:n})}return e.GET_CHOSEN_CLIENT_ID===b["a"]&&T>t.GET_CONFIG.slplayer_soft_seek_threshold?E("slplayer/SOFT_SEEK",a,{root:!0}):"No sync needed"},PRESS_PLAY:async({getters:e,dispatch:E},t)=>{switch(e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/PRESS_PLAY",null,{root:!0});default:return await E("UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID"),E("SEND_CHOSEN_CLIENT_REQUEST",{cancelSignal:t,path:"/player/playback/play",params:{wait:0}})}},PRESS_PAUSE:({getters:e,dispatch:E},t)=>{switch(e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/PRESS_PAUSE",null,{root:!0});default:return E("SEND_CHOSEN_CLIENT_REQUEST",{cancelSignal:t,path:"/player/playback/pause",params:{wait:0}})}},PRESS_STOP:async({getters:e,dispatch:E})=>{switch(e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/PRESS_STOP",null,{root:!0});default:return await E("UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID"),E("SEND_CHOSEN_CLIENT_REQUEST",{path:"/player/playback/stop",params:{wait:0}})}},SEEK_TO:async({getters:e,dispatch:E},{cancelSignal:t,offset:_})=>{switch(console.debug("SEEK_TO",_),e.GET_CHOSEN_CLIENT_ID){case b["a"]:return E("slplayer/SPEED_OR_NORMAL_SEEK",{cancelSignal:t,seekToMs:_},{root:!0});default:return await E("UPDATE_PREVIOUS_SYNC_TIMELINE_COMMAND_ID"),E("SEND_CHOSEN_CLIENT_REQUEST",{cancelSignal:t,path:"/player/playback/seekTo",params:{wait:0,offset:Math.round(_)}})}},SKIP_AHEAD:async({rootGetters:e,dispatch:E},{offset:t,cancelSignal:_})=>{const n=Date.now(),a=e.GET_CONFIG.skip_ahead_time;await E("SEEK_TO",{offset:t+a,cancelSignal:_}),await E("PRESS_PAUSE",_);const i=Date.now()-n;await L.a.delay(_,a-i),await E("PRESS_PLAY",_)},UPDATE_ACTIVE_PLAY_QUEUE:async({getters:e,dispatch:E,commit:t})=>{t("SET_ACTIVE_PLAY_QUEUE",await E("plexservers/FETCH_PLAY_QUEUE",{machineIdentifier:e.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,playQueueID:e.GET_ACTIVE_PLAY_QUEUE.playQueueID},{root:!0}))},UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM:async({getters:e,dispatch:E,commit:t})=>{const _=await E("FETCH_METADATA_OF_PLAY_QUEUE_ITEM",e.GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM);e.GET_ACTIVE_MEDIA_METADATA&&_.ratingKey===e.GET_ACTIVE_MEDIA_METADATA.ratingKey&&e.GET_ACTIVE_SERVER_ID===_.machineIdentifier||(t("SET_ACTIVE_SERVER_ID",_.machineIdentifier),t("plexservers/SET_LAST_SERVER_ID",_.machineIdentifier,{root:!0}),t("SET_ACTIVE_MEDIA_METADATA",_))},FETCH_METADATA_OF_PLAY_QUEUE_ITEM:({getters:e,dispatch:E},t)=>{if(t.source){const e=/^server:\/\/(\w+)\//,_=t.source.match(e)[1];return E("plexservers/FETCH_PLEX_METADATA",{machineIdentifier:_,ratingKey:t.ratingKey},{root:!0})}return{machineIdentifier:e.GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER,...t}},PLAY_NEXT:({getters:e,rootGetters:E,dispatch:t},_)=>{switch(console.debug("plexclients/PLAY_NEXT"),e.GET_CHOSEN_CLIENT_ID){case b["a"]:{if(E["slplayer/IS_PLAYER_INITIALIZED"])return t("slplayer/PLAY_NEXT",null,{root:!0});const{viewOffset:e,machineIdentifier:n}=_;return t("PLAY_MEDIA",{mediaIndex:0,offset:e,machineIdentifier:n,metadata:_,userInitiated:!0})}default:return t("SEND_CHOSEN_CLIENT_REQUEST",{path:"/player/playback/skipNext",params:{wait:0}})}},START_CLIENT_POLLER_IF_NEEDED:async({getters:e,commit:E,dispatch:t,rootGetters:_})=>{if(e.GET_CHOSEN_CLIENT_ID!==b["a"]&&!e.GET_CLIENT_POLLER_CANCEL_TOKEN){const e=new L.a.cancelToken;E("SET_CLIENT_POLLER_CANCEL_TOKEN",e);const a=L()((function*(e){while(1){yield L.a.delay(e,_["settings/GET_CLIENTPOLLINTERVAL"]);try{yield t("POLL_PLEX_CLIENT",e)}catch(E){console.error(E)}}}));try{await a(e.signal)}catch(n){console.debug("PLEX_TIMELINE_UPDATER canceled")}}},CANCEL_CLIENT_POLLER_IF_NEEDED:({getters:e,commit:E})=>{e.GET_CLIENT_POLLER_CANCEL_TOKEN&&(e.GET_CLIENT_POLLER_CANCEL_TOKEN.abort(),E("SET_CLIENT_POLLER_CANCEL_TOKEN",null))},RELOAD_ACTIVE_MEDIA_METADATA:async({getters:e,dispatch:E,commit:t})=>{const _=await E("plexservers/FETCH_PLEX_METADATA",{machineIdentifier:e.GET_ACTIVE_SERVER_ID,ratingKey:e.GET_ACTIVE_MEDIA_METADATA.ratingKey},{root:!0});t("SET_ACTIVE_MEDIA_METADATA",_)}};const oe=()=>({clients:{[b["a"]]:{provides:"player",clientIdentifier:b["a"],platform:"Web",device:"Web",product:"SyncLounge",name:"SyncLounge Player",labels:[["Recommended","green"]],lastSeenAt:(new Date).toISOString()}},chosenClientId:b["a"],activeMediaMetadata:null,activeServerId:null,activePlayQueue:null,activePlayQueueMachineIdentifier:null,plexClientTimeline:null,plexClientTimelineCommmandId:null,commandId:0,previousSyncTimelineCommandId:null,clientPollerCancelToken:null,lastPlayMediaCommandId:null,latency:0});var ce=oe,le={RESET:e=>{Object.assign(e,ce())},ADD_PLEX_CLIENT:(e,E)=>{_["a"].set(e.clients,E.clientIdentifier,E)},DELETE_PLEX_CLIENT:(e,E)=>{_["a"].delete(e.clients,E)},SET_CHOSEN_CLIENT_ID:(e,E)=>{e.chosenClientId=E},SET_PLEX_CLIENT_TIMELINE:(e,E)=>{e.plexClientTimeline=E},SET_ACTIVE_MEDIA_METADATA:(e,E)=>{e.activeMediaMetadata=E},SET_ACTIVE_SERVER_ID:(e,E)=>{e.activeServerId=E},SET_COMMAND_ID:(e,E)=>{e.commandId=E},INCREMENT_COMMAND_ID:e=>{e.commandId+=1},SET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID:(e,E)=>{e.previousSyncTimelineCommandId=E},SET_CLIENT_CHOSEN_CONNECTION:(e,{clientIdentifier:E,chosenConnection:t})=>{_["a"].set(e.clients[E],"chosenConnection",t)},SET_PLEX_CLIENT_TIMELINE_COMMAND_ID:(e,E)=>{e.plexClientTimelineCommmandId=E},SET_ACTIVE_PLAY_QUEUE:(e,E)=>{e.activePlayQueue=E},SET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER:(e,E)=>{e.activePlayQueueMachineIdentifier=E},INCREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET:e=>{e.activePlayQueue.playQueueSelectedItemOffset+=1},DECREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET:e=>{e.activePlayQueue.playQueueSelectedItemOffset-=1},SET_CLIENT_POLLER_CANCEL_TOKEN:(e,E)=>{e.clientPollerCancelToken=E},SET_LAST_PLAY_MEDIA_COMMAND_ID:(e,E)=>{e.lastPlayMediaCommandId=E},SET_LATENCY:(e,E)=>{e.latency=E},UPDATE_SLPLAYER_LAST_SEEN_TO_NOW:e=>{e.clients[b["a"]].lastSeenAt=(new Date).toISOString()}},Ie={GET_CHOSEN_CLIENT_ID:e=>e.chosenClientId,GET_PLEX_CLIENT_IDS:e=>Object.keys(e.clients),GET_PLEX_CLIENT:e=>E=>e.clients[E],GET_CHOSEN_CLIENT:e=>e.clients[e.chosenClientId],GET_PLEX_CLIENT_IDS_SORTED_BY_LAST_SEEN:e=>Object.values(e.clients).sort((e,E)=>-e.lastSeenAt.localeCompare(E.lastSeenAt)).map(e=>e.clientIdentifier),GET_ACTIVE_MEDIA_METADATA:e=>e.activeMediaMetadata,GET_ACTIVE_SERVER_ID:e=>e.activeServerId,GET_PLEX_CLIENT_TIMELINE:e=>e.plexClientTimeline,GET_ACTIVE_MEDIA_POLL_METADATA:(e,E)=>E.GET_ACTIVE_MEDIA_METADATA?{title:E.GET_ACTIVE_MEDIA_METADATA.title,type:E.GET_ACTIVE_MEDIA_METADATA.type,grandparentTitle:E.GET_ACTIVE_MEDIA_METADATA.grandparentTitle,parentTitle:E.GET_ACTIVE_MEDIA_METADATA.parentTitle,ratingKey:E.GET_ACTIVE_MEDIA_METADATA.ratingKey,machineIdentifier:E.GET_ACTIVE_MEDIA_METADATA.machineIdentifier}:null,GET_ADJUSTED_PLEX_CLIENT_POLL_DATA:(e,E)=>()=>E.GET_PLEX_CLIENT_TIMELINE?{time:"playing"===E.GET_PLEX_CLIENT_TIMELINE.state?E.GET_PLEX_CLIENT_TIMELINE.time+Date.now()-E.GET_PLEX_CLIENT_TIMELINE.updatedAt:E.GET_PLEX_CLIENT_TIMELINE.time,duration:E.GET_PLEX_CLIENT_TIMELINE.duration,playbackRate:1,state:E.GET_PLEX_CLIENT_TIMELINE.state}:null,GET_COMMAND_ID:e=>e.commandId,GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID:e=>e.previousSyncTimelineCommandId,ALREADY_SYNCED_ON_CURRENT_TIMELINE:(e,E)=>E.GET_CHOSEN_CLIENT_ID!==b["a"]&&null===E.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID&&null!==E.GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID&&E.GET_PLEX_CLIENT_TIMELINE_COMMAND_ID<=E.GET_PREVIOUS_SYNC_TIMELINE_COMMAND_ID,GET_PLEX_CLIENT_TIMELINE_COMMAND_ID:e=>e.plexClientTimelineCommmandId,GET_ACTIVE_PLAY_QUEUE:e=>e.activePlayQueue,GET_ACTIVE_PLAY_QUEUE_MACHINE_IDENTIFIER:e=>e.activePlayQueueMachineIdentifier,GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM:(e,E)=>E.GET_ACTIVE_PLAY_QUEUE?E.GET_ACTIVE_PLAY_QUEUE.Metadata[E.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset]:null,ACTIVE_PLAY_QUEUE_NEXT_ITEM_EXISTS:(e,E)=>!!E.GET_ACTIVE_PLAY_QUEUE&&E.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset<E.GET_ACTIVE_PLAY_QUEUE.size-1,ACTIVE_PLAY_QUEUE_PREVIOUS_ITEM_EXISTS:(e,E)=>!!E.GET_ACTIVE_PLAY_QUEUE&&E.GET_ACTIVE_PLAY_QUEUE.playQueueSelectedItemOffset>0,GET_CLIENT_POLLER_CANCEL_TOKEN:e=>e.clientPollerCancelToken,IS_THIS_MEDIA_PLAYING:(e,E)=>e=>!!E.GET_ACTIVE_MEDIA_METADATA&&(E.GET_ACTIVE_MEDIA_METADATA.machineIdentifier===e.machineIdentifier&&E.GET_ACTIVE_MEDIA_METADATA.ratingKey===e.ratingKey),GET_LAST_PLAY_MEDIA_COMMAND_ID:e=>e.lastPlayMediaCommandId,GET_ACTIVE_MEDIA_METADATA_MARKERS:(e,E)=>{var t;return(null===(t=E.GET_ACTIVE_MEDIA_METADATA)||void 0===t?void 0:t.Marker)||[]},GET_ACTIVE_MEDIA_METADATA_INTRO_MARKER:(e,E)=>E.GET_ACTIVE_MEDIA_METADATA_MARKERS.find(e=>"intro"===e.type),GET_LATENCY:e=>e.latency},Se={namespaced:!0,state:ce,getters:Ie,mutations:le,actions:se};const Ae=e=>e.reduce((e,E,t)=>[...e,e.length>0?E+e[t-1]:E],[]),de=e=>{const E=Object.keys(e),t=Object.values(e),_=t.reduce((e,E)=>e+E,0),n=Ae(t),a=Math.random()*_;return E[n.findIndex(e=>e>a)]};var ue=de,Ne=t("d63f"),Re=t.n(Ne);const Le=(e,E)=>{const t=Re.a.compareTwoStrings(E.title,e.title),_=E.parentTitle&&e.parentTitle?Re.a.compareTwoStrings(E.parentTitle,e.parentTitle):0,n=E.grandparentTitle&&e.grandparentTitle?Re.a.compareTwoStrings(E.grandparentTitle,e.grandparentTitle):0,a=E.type===e.type?1:0;return t+_+n+a};var Ce=Le;const Oe={own:1,includeChapters:1,includeMarkers:1,includeGeolocation:1,includeExternalMedia:1},De=["movie","show","episode"];var Pe={FETCH_RANDOM_SECTION_ID:async({getters:e},E)=>{const t=ue(e.GET_SERVER_LIBRARY_SIZES(E));if(!t)throw new Error("No valid libraries found");return t},FETCH_RANDOM_SERVER:async({getters:e})=>{const E=ue(e.GET_CONNECTABLE_SERVER_SIZES);if(!E)throw new Error("No valid servers found");return E},FETCH_RANDOM_LIBRARY_ITEM:async({getters:e,dispatch:E},{machineIdentifier:t,sectionId:_,signal:n})=>{const a=J(e.GET_SERVER_LIBRARY_SIZE({machineIdentifier:t,sectionId:_})-1),[i]=await E("FETCH_LIBRARY_CONTENTS",{machineIdentifier:t,sectionId:_,start:a,size:1,signal:n});return i},FETCH_RANDOM_ITEM:async({dispatch:e},{machineIdentifier:E,sectionId:t,signal:_}={})=>{const n=E||await e("FETCH_RANDOM_SERVER"),a=t||await e("FETCH_RANDOM_SECTION_ID",n),i=await e("FETCH_RANDOM_LIBRARY_ITEM",{machineIdentifier:n,sectionId:a,signal:_});return{...i,machineIdentifier:n}},FETCH_PLEX_SERVER:({getters:e,rootGetters:E},{machineIdentifier:t,path:_,params:n,manualConnection:a,...i})=>{const{accessToken:T,chosenConnection:{uri:r}}=a||e.GET_PLEX_SERVER(t);return o(`${r}${_}`,{...E["plex/GET_PLEX_BASE_PARAMS"](T),...n},i)},QUERY_PLEX_SERVER:({getters:e,rootGetters:E},{machineIdentifier:t,path:_,params:n,...a})=>{const{accessToken:i,chosenConnection:{uri:T}}=e.GET_PLEX_SERVER(t);return r(`${T}${_}`,{...E["plex/GET_PLEX_BASE_PARAMS"](i),...n},a)},SEARCH_PLEX_SERVER:async({dispatch:e},{query:E,machineIdentifier:t,signal:_})=>{const{MediaContainer:{Metadata:n}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:t,path:"/search",params:{query:E},signal:_});return n?n.map(e=>({...e,machineIdentifier:t})):[]},FETCH_PLEX_METADATA:async({dispatch:e},{ratingKey:E,machineIdentifier:t,signal:_})=>{const{MediaContainer:{Metadata:[n]}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:t,path:"/library/metadata/"+E,params:{includeConcerts:1,includeExtras:1,includeOnDeck:1,includePopularLeaves:1,includePreferences:1,includeChapters:1,includeStations:1,includeExternalMedia:1,asyncAugmentMetadata:1,asyncRefreshLocalMediaAgent:1,asyncRefreshAnalysis:1,checkFiles:1,includeMarkers:1},signal:_});return{...n,machineIdentifier:t}},SEARCH_UNBLOCKED_PLEX_SERVERS:({getters:e,dispatch:E},t)=>Promise.allSettled(e.GET_UNBLOCKED_PLEX_SERVER_IDS.map(e=>E("SEARCH_PLEX_SERVER",{machineIdentifier:e,query:t}))).then(e=>e.filter(e=>"fulfilled"===e.status).flatMap(e=>e.value)),FIND_BEST_MEDIA_MATCH:async({getters:e,dispatch:E},t)=>{if(e.IS_PLEX_SERVER_UNBLOCKED(t.machineIdentifier))try{const e=await E("FETCH_PLEX_METADATA",{ratingKey:t.ratingKey,machineIdentifier:t.machineIdentifier});return{...e,mediaIndex:t.mediaIndex}}catch(i){console.warn("Error fetching metadata for same media as host",i)}const _=await E("SEARCH_UNBLOCKED_PLEX_SERVERS",t.title);if(_.length<=0)return null;const n=_.map(e=>({result:e,score:Ce(e,t)})).reduce((e,E)=>e.score>E.score?e:E).result,a=await E("FETCH_PLEX_METADATA",{ratingKey:n.ratingKey,machineIdentifier:n.machineIdentifier});return a},FETCH_ON_DECK:async({dispatch:e},{machineIdentifier:E,start:t,size:_,signal:n})=>{const{MediaContainer:{Metadata:a}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:"/library/onDeck",params:{"X-Plex-Container-Start":t,"X-Plex-Container-Size":_},signal:n});return(null===a||void 0===a?void 0:a.map(e=>({machineIdentifier:E,...e})))||[]},FETCH_ALL_LIBRARIES:async({dispatch:e},{machineIdentifier:E,signal:t,..._})=>{const{MediaContainer:{Directory:n}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:"/library/sections",signal:t,..._});return Object.fromEntries(await Promise.all(n.map(async n=>[n.key,{...n,size:await e("FETCH_LIBRARY_SIZE",{machineIdentifier:E,sectionId:n.key,signal:t,..._})}])))},FETCH_RECENTLY_ADDED_MEDIA:async({dispatch:e},{machineIdentifier:E,signal:t})=>{const{MediaContainer:{Metadata:_}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:"/library/recentlyAdded",signal:t});return(null===_||void 0===_?void 0:_.map(e=>({machineIdentifier:E,...e})))||[]},FETCH_CHILDREN_CONTAINER:async({dispatch:e},{machineIdentifier:E,ratingKey:t,start:_,size:n,excludeAllLeaves:a,signal:i})=>{var T;const{MediaContainer:r}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:`/library/metadata/${t}/children`,params:{"X-Plex-Container-Start":_,"X-Plex-Container-Size":n,excludeAllLeaves:a},signal:i});return{...r,Metadata:(null===(T=r.Metadata)||void 0===T?void 0:T.map(e=>({librarySectionID:r.librarySectionID,machineIdentifier:E,...e})))||[]}},FETCH_MEDIA_CHILDREN:async({dispatch:e},E)=>{const{Metadata:t}=await e("FETCH_CHILDREN_CONTAINER",E);return t},FETCH_RELATED:async({dispatch:e},{machineIdentifier:E,ratingKey:t,count:_,signal:n})=>{try{var a,i;const{MediaContainer:{Hub:T,librarySectionID:r}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:`/library/metadata/${t}/related`,params:{excludeFields:"summary",count:_},signal:n});return(null===T||void 0===T||null===(a=T[0])||void 0===a||null===(i=a.Metadata)||void 0===i?void 0:i.map(e=>({librarySectionID:r,machineIdentifier:E,...e})))||[]}catch(T){return console.error(T),[]}},FETCH_LIBRARY_ALL:async({dispatch:e},{machineIdentifier:E,sectionId:t,start:_,size:n,sort:a,signal:i,...T})=>{const{MediaContainer:r}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:`/library/sections/${t}/all`,params:{"X-Plex-Container-Start":_,"X-Plex-Container-Size":n,...a&&{sort:a},includeCollections:0,includeAdvanced:1,includeMeta:1},signal:i,...T});return r},FETCH_LIBRARY_CONTENTS:async({dispatch:e},E)=>{const{librarySectionID:t,Metadata:_}=await e("FETCH_LIBRARY_ALL",E);return _.map(e=>({librarySectionID:t,machineIdentifier:E.machineIdentifier,...e}))},FETCH_LIBRARY_SIZE:async({dispatch:e},{machineIdentifier:E,sectionId:t,signal:_,...n})=>{const{totalSize:a}=await e("FETCH_LIBRARY_ALL",{machineIdentifier:E,sectionId:t,start:0,size:0,signal:_,...n});return a},CREATE_PLAY_QUEUE:async({dispatch:e},{machineIdentifier:E,ratingKey:t,signal:_})=>{const{MediaContainer:n}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,method:"POST",path:"/playQueues",params:{type:"video",continuous:1,uri:`server://${E}/com.plexapp.plugins.library/library/metadata/${t}`,repeat:0,...Oe},signal:_});return n},FETCH_PLAY_QUEUE:async({dispatch:e},{machineIdentifier:E,playQueueID:t,signal:_})=>{const{MediaContainer:n}=await e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:"/playQueues/"+t,params:Oe,signal:_});return n},MARK_WATCHED:({dispatch:e},{machineIdentifier:E,ratingKey:t,signal:_})=>e("FETCH_PLEX_SERVER",{machineIdentifier:E,path:"/:/scrobble",params:{identifier:"com.plexapp.plugins.library",key:t},signal:_}),UPDATE_STREAM:({dispatch:e},{machineIdentifier:E,id:t,offset:_,signal:n})=>e("QUERY_PLEX_SERVER",{machineIdentifier:E,method:"PUT",path:"/library/streams/"+t,params:{offset:_},signal:n}),SET_MEDIA_AS_BACKGROUND:async({getters:e,commit:E},t)=>{const _=e.GET_MEDIA_BACKGROUND_URL(t);E("SET_BACKGROUND",_,{root:!0})},FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE:async({dispatch:e},E)=>{await e("plex/FETCH_PLEX_DEVICES_IF_NEEDED",null,{root:!0});const t=await e("FETCH_RANDOM_ITEM",E);return e("SET_MEDIA_AS_BACKGROUND",t)},SEARCH_PLEX_SERVER_HUB:async({dispatch:e},{query:E,machineIdentifier:t,signal:_,...n})=>{const{MediaContainer:{Hub:a}}=await e("FETCH_PLEX_SERVER",{machineIdentifier:t,path:"/hubs/search",params:{...n,query:E,includeCollections:0},signal:_});return a.filter(({Metadata:e,type:E})=>e&&De.includes(E)).map(({Metadata:e,...E})=>({...E,Metadata:e.map(e=>({...e,machineIdentifier:t}))}))}};const he=()=>({servers:{},lastServerId:null,blockedServerIds:[]});var pe=he,me={RESET:e=>{Object.assign(e,pe())},SET_LAST_SERVER_ID:(e,E)=>{e.lastServerId=E},ADD_PLEX_SERVER:(e,E)=>{_["a"].set(e.servers,E.clientIdentifier,E)},DELETE_PLEX_SERVER:(e,E)=>{_["a"].delete(e.servers,E)},SET_BLOCKED_SERVER_IDS:(e,E)=>{e.blockedServerIds=E}},Ge={GET_PLEX_SERVERS:e=>Object.values(e.servers),GET_PLEX_SERVER_IDS:e=>Object.keys(e.servers),GET_PLEX_SERVER:e=>E=>e.servers[E],GET_UNBLOCKED_PLEX_SERVER_IDS:(e,E)=>z([E.GET_PLEX_SERVER_IDS,E.GET_BLOCKED_SERVER_IDS]),GET_CONNECTABLE_PLEX_SERVER_IDS:(e,E)=>E.GET_PLEX_SERVER_IDS.filter(E=>e.servers[E].chosenConnection),IS_PLEX_SERVER_UNBLOCKED:(e,E)=>e=>E.GET_UNBLOCKED_PLEX_SERVER_IDS.includes(e),GET_LAST_SERVER_ID:(e,E)=>{var t;return e.lastServerId||(null===(t=E.GET_PLEX_SERVER_IDS)||void 0===t?void 0:t[0])},GET_LAST_SERVER:(e,E)=>E.GET_PLEX_SERVER(E.GET_LAST_SERVER_ID),DOES_USER_HAVE_AUTHORIZED_SERVER:(e,E,t,_)=>{var n,a;return(null===(n=_.GET_CONFIG)||void 0===n||null===(a=n.authentication)||void 0===a?void 0:a.type.includes("server"))&&q([E.GET_PLEX_SERVER_IDS,_.GET_CONFIG.authentication.authorized]).length>0},GET_MEDIA_IMAGE_URL:(e,E,t,_)=>({machineIdentifier:e,mediaUrl:t,width:n,height:a,blur:T})=>{const r=E.GET_PLEX_SERVER(e),s={..._["plex/GET_PLEX_TOKEN_PARAMS"](r.accessToken),url:t,width:Math.round(n),height:Math.round(a),...T&&{blur:T},upscale:1,minSize:1};return i(r.chosenConnection.uri+"/photo/:/transcode/",s)},GET_MEDIA_BACKGROUND_URL:(e,E)=>({machineIdentifier:e,art:t,thumb:_})=>E.GET_MEDIA_IMAGE_URL({machineIdentifier:e,mediaUrl:t||_,width:window.screen.width,height:window.screen.height,blur:10}),GET_BLOCKED_SERVER_IDS:e=>e.blockedServerIds,GET_SERVER_LIBRARY_SIZE:(e,E)=>({machineIdentifier:e,sectionId:t})=>E.GET_PLEX_SERVER(e).libraries[t].size,GET_SERVER_LIBRARY_SIZES:(e,E)=>e=>Object.fromEntries(Object.keys(E.GET_PLEX_SERVER(e).libraries).map(t=>[t,E.GET_SERVER_LIBRARY_SIZE({machineIdentifier:e,sectionId:t})])),GET_SERVER_SIZE:(e,E)=>e=>Object.values(E.GET_SERVER_LIBRARY_SIZES(e)).reduce((e,E)=>e+E,0),GET_CONNECTABLE_SERVER_SIZES:(e,E)=>Object.fromEntries(E.GET_CONNECTABLE_PLEX_SERVER_IDS.map(e=>[e,E.GET_SERVER_SIZE(e)]))},fe={namespaced:!0,state:pe,getters:Ge,mutations:me,actions:Pe},Me=t("391c");const ge=()=>{let e=null,E=null;const t=new Promise((t,_)=>{e=t,E=_});return Object.freeze({promise:t,resolve:e,reject:E})};var be=ge;const Ue=(e,E)=>{const t=new TextDecoder(e,{ignoreBOM:!0}),_=async()=>{const{value:e,done:_}=await E.read(),n=e?t.decode(e,{stream:!_}):"";return{text:n,done:_}};return _};async function*ye(e,E){const t=await l(e,null,{signal:E}),_=Ue("utf-8",t);let{text:n,done:a}=await _();while(1){const e=n.indexOf("\n");if(-1===e){if(a){yield n.length>0?n:null;break}{let e;({text:e,done:a}=await _()),n+=e}}else yield n.substring(0,e),n=n.substr(e+1)}}const ve=async e=>{try{const{done:E,value:t}=await e;return E?null:t}catch(E){return null}},we=(e,E)=>{const t=ye(e,E);return{nextLine:()=>ve(t.next())}};var He=we,Ye=t("454e");class ke{constructor(e,E){this._autoClock=E,e.addEventListener("playing",()=>this._autoClock.play(),!1),e.addEventListener("pause",()=>this._autoClock.pause(),!1),e.addEventListener("seeking",()=>this._autoClock.seeking(),!1),e.addEventListener("ratechange",()=>this._autoClock.setRate(e.playbackRate),!1)}get currentTime(){return this._autoClock.currentTime}get enabled(){return this._autoClock.enabled}get paused(){return this._autoClock.paused}get rate(){return this._autoClock.rate}enable(){return this._autoClock.enable()}disable(){return this._autoClock.disable()}toggle(){this._autoClock.enabled?this.disable():this.enable()}setEnabled(e){return e?this.enable():this.disable()}addEventListener(e,E){this._autoClock.addEventListener(e,E)}}let Ve=null,Fe=null,xe=null;const Xe=async e=>{try{await e}catch(E){if(xe)throw E}};var Be={CACHE_ORIGINAL_SUBTITLE_RESOLUTION:({getters:e,commit:E})=>{e.GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE&&e.GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE||(E("SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE",Fe.ass.properties.resolutionX),E("SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE",Fe.ass.properties.resolutionY))},SYNCHRONIZE_SUBTITLE_CLOCK:()=>{Object(Me["s"])()&&!Ve.paused?Ve._autoClock.pause():!Object(Me["s"])()&&Ve.paused&&Ve._autoClock.play(),Object(Me["m"])()&&!Ve.rate&&Ve._autoClock.setRate(Object(Me["m"])()),Object(Me["i"])()&&!Ve.currentTime&&Ve._autoClock.seeking()},GET_OR_MAKE_VIDEO_CLOCK:async({getters:e,dispatch:E})=>{const _=await t.e("chunk-2d0c7b5d").then(t.t.bind(null,"527a",7));return Ve||(Ve=new ke(Object(Me["l"])(),new _.renderers.AutoClock(()=>Math.max(Object(Me["h"])()+e.GET_SUBTITLE_OFFSET/1e3,0),100))),await E("SYNCHRONIZE_SUBTITLE_CLOCK"),Ve},PUBLISH_SUBTITLE_POSITION:({getters:e})=>{console.debug("PUBLISH_SUBTITLE_POSITION"),Fe.ass.styles.get("Default")._alignment=e.GET_SUBTITLE_POSITION},PUBLISH_SUBTITLE_COLOR:async({getters:e})=>{console.debug("PUBLISH_SUBTITLE_COLOR");const E=Fe.ass.styles.get("Default");E._primaryColor=await Object(Ye["b"])(e.GET_SUBTITLE_COLOR),E._outlineColor=await Object(Ye["b"])(Object(Ye["a"])(E._primaryColor))},PUBLISH_SUBTITLE_SIZE:async({getters:e,dispatch:E})=>{console.debug("PUBLISH_SUBTITLE_SIZE"),await E("CACHE_ORIGINAL_SUBTITLE_RESOLUTION");const t=Fe.ass.properties;t.resolutionX=e.GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE/e.GET_SUBTITLE_SIZE,t.resolutionY=e.GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE/e.GET_SUBTITLE_SIZE},RERENDER_SUBTITLE_CONTAINER:async({dispatch:e})=>{if(!Fe)return;const E=Object(Me["g"])();console.debug("RERENDER_SUBTITLE_CONTAINER",E);const{videoWidth:t,videoHeight:_,offsetWidth:n,offsetHeight:a}=Object(Me["j"])(),i=Math.min(n/t,(a-E)/_),T=t*i,r=_*i,s=(n-T)/2,o=(a-E-r)/2;await e("PUBLISH_SUBTITLE_COLOR"),await e("PUBLISH_SUBTITLE_POSITION"),Fe.resize(T,r,s,o)},DESTROY_ASS:async({dispatch:e,commit:E})=>{xe&&(console.debug("DESTROY_ASS"),xe.abort(),xe=null,Fe&&(Fe._ass._dialogues=[],Fe._ass._attachments=[],E("SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE",null),E("SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE",null),await e("RERENDER_SUBTITLE_CONTAINER")))},MAKE_ASS:async({getters:e})=>{console.debug("MAKE_ASS");const E=await t.e("chunk-2d0c7b5d").then(t.t.bind(null,"527a",7));xe=new AbortController;const _=He(i(e.GET_SUBTITLE_BASE_URL,e.GET_DECISION_AND_START_PARAMS),xe.signal),n=e.CAN_DIRECT_PLAY_SUBTITLES&&("srt"===e.GET_SUBTITLE_STREAM.codec||"srt"===e.GET_SELECTED_SUBTITLE_STREAM.codec),a=n?new E.parser.SrtStreamParser(_):new E.parser.StreamParser(_);return n||Xe(a.ass),n?a.ass:a.minimalASS},INIT_SUBTITLE_RENDERER:async({dispatch:e},E)=>{console.debug("INIT_SUBTITLE_RENDERER");const _=await t.e("chunk-2d0c7b5d").then(t.t.bind(null,"527a",7));Fe=new _.renderers.WebRenderer(E,await e("GET_OR_MAKE_VIDEO_CLOCK"),document.createElement("div"),Ye["e"]),Object(Me["p"])(Fe.libjassSubsWrapper)},SET_SUBTITLE_URL:async({dispatch:e})=>{await e("DESTROY_ASS");try{const E=await e("MAKE_ASS");Fe?Fe._ass=E:await e("INIT_SUBTITLE_RENDERER",E),await e("PUBLISH_SUBTITLE_SIZE"),await e("RERENDER_SUBTITLE_CONTAINER")}catch(E){if(xe)throw E}},DESTROY_SUBTITLES:async({dispatch:e})=>{Ve&&Ve._autoClock._manualClock._eventListeners.clear(),await e("DESTROY_ASS"),Fe&&(Fe.libjassSubsWrapper.remove(),Fe=null),Ve=null},CHANGE_SUBTITLE_COLOR:async({commit:e,dispatch:E},t)=>{e("SET_SUBTITLE_COLOR",t),await E("RERENDER_SUBTITLE_CONTAINER")},CHANGE_SUBTITLE_POSITION:async({commit:e,dispatch:E},t)=>{e("SET_SUBTITLE_POSITION",t),await E("RERENDER_SUBTITLE_CONTAINER")},CHANGE_SUBTITLE_SIZE:async({commit:e,dispatch:E},t)=>{e("SET_SUBTITLE_SIZE",t),await E("PUBLISH_SUBTITLE_SIZE"),await E("RERENDER_SUBTITLE_CONTAINER")},CHANGE_SUBTITLE_OFFSET:async({getters:e,rootGetters:E,commit:t,dispatch:_},n)=>{console.debug("CHANGE_SUBTITLE_OFFSET",n),t("SET_SUBTITLE_OFFSET",0===n?0:e.GET_SUBTITLE_OFFSET+n),Ve._autoClock.seeking(),await _("plexservers/UPDATE_STREAM",{machineIdentifier:E["plexclients/GET_ACTIVE_SERVER_ID"],id:e.GET_SUBTITLE_STREAM.id,offset:e.GET_SUBTITLE_OFFSET},{root:!0})}},Ke={MAKE_TIMELINE_PARAMS:async({getters:e,rootGetters:E,dispatch:t})=>({ratingKey:E["plexclients/GET_ACTIVE_MEDIA_METADATA"].ratingKey,key:E["plexclients/GET_ACTIVE_MEDIA_METADATA"].key,playQueueItemID:E["plexclients/GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM"].playQueueItemID,state:e.GET_PLAYER_STATE,hasMDE:1,time:Math.floor(await t("FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK")),duration:Math.floor(Object(Me["k"])()),"X-Plex-Session-Identifier":e.GET_X_PLEX_SESSION_ID,...e.GET_PART_PARAMS}),FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK:({getters:e})=>e.GET_MASK_PLAYER_STATE?e.GET_OFFSET_MS:Object(Me["i"])()||e.GET_OFFSET_MS,SEND_PLEX_DECISION_REQUEST:async({getters:e,commit:E})=>{var t;const _=await o(e.GET_DECISION_URL,e.GET_DECISION_AND_START_PARAMS);E("SET_PLEX_DECISION",_),E("SET_SUBTITLE_OFFSET",parseInt((null===(t=e.GET_SUBTITLE_STREAM)||void 0===t?void 0:t.offset)||0,10))},CHANGE_MAX_VIDEO_BITRATE:async({commit:e,dispatch:E},t)=>{e("settings/SET_SLPLAYERQUALITY",t,{root:!0}),await E("UPDATE_PLAYER_SRC_AND_KEEP_TIME")},CHANGE_AUDIO_STREAM:async({getters:e,dispatch:E},t)=>{await r(e.GET_PART_URL,{audioStreamID:t,...e.GET_PART_PARAMS},{method:"PUT"}),await E("plexclients/RELOAD_ACTIVE_MEDIA_METADATA",null,{root:!0}),await E("UPDATE_PLAYER_SRC_AND_KEEP_TIME")},CHANGE_SUBTITLE_STREAM:async({getters:e,dispatch:E},t)=>{await r(e.GET_PART_URL,{subtitleStreamID:t,...e.GET_PART_PARAMS},{method:"PUT"}),await E("plexclients/RELOAD_ACTIVE_MEDIA_METADATA",null,{root:!0}),await E("UPDATE_PLAYER_SRC_AND_KEEP_TIME")},CHANGE_MEDIA_INDEX:async({commit:e,dispatch:E},t)=>{e("SET_MEDIA_INDEX",t),await E("UPDATE_PLAYER_SRC_AND_KEEP_TIME")},UPDATE_PLAYER_SRC_AND_KEEP_TIME:async({commit:e,dispatch:E})=>{e("SET_OFFSET_MS",await E("FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK")),await E("CHANGE_PLAYER_SRC")},CHANGE_SUBTITLES:async({getters:e,dispatch:E})=>{e.IS_USING_NATIVE_SUBTITLES?await E("SET_SUBTITLE_URL"):await E("DESTROY_ASS")},CHANGE_PLAYER_SRC:async({getters:e,commit:E,dispatch:t})=>{console.debug("CHANGE_PLAYER_SRC"),await t("DESTROY_ASS"),e.GET_FORCE_TRANSCODE_RETRY&&E("SET_FORCE_TRANSCODE_RETRY",!1),E("SET_SESSION",Object(Ee["a"])());try{await t("SEND_PLEX_DECISION_REQUEST"),await t("LOAD_PLAYER_SRC")}catch(_){if(e.GET_FORCE_TRANSCODE)throw _;console.warn("Error loading stream from plex. Retrying with forced transcoding",_),E("SET_FORCE_TRANSCODE_RETRY",!0),await t("SEND_PLEX_DECISION_REQUEST"),await t("LOAD_PLAYER_SRC")}await t("CHANGE_SUBTITLES"),e.GET_MASK_PLAYER_STATE&&E("SET_MASK_PLAYER_STATE",!1)},SEND_PLEX_TIMELINE_UPDATE:async({getters:e,dispatch:E},{signal:t,..._}={})=>r(e.GET_TIMELINE_URL,{...await E("MAKE_TIMELINE_PARAMS"),..._},{signal:t}),FETCH_TIMELINE_POLL_DATA:async({getters:e,dispatch:E})=>Object(Me["r"])()?{time:await E("FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK"),duration:Object(Me["k"])(),playbackRate:Object(Me["m"])(),state:e.GET_PLAYER_STATE}:{time:e.GET_OFFSET_MS,duration:0,playbackRate:0,state:e.GET_PLAYER_STATE},HANDLE_PLAYER_PLAYING:async({dispatch:e})=>{Object(Me["t"])()&&await e("CHANGE_PLAYER_STATE","playing")},HANDLE_PLAYER_PAUSE:async({getters:e,dispatch:E})=>{Object(Me["q"])()?(E("PROCESS_STATE_UPDATE_ON_PLAYER_EVENT",{type:"seeking",signal:e.GET_PLAYER_DESTROY_CANCEL_TOKEN.signal}),await E("synclounge/PROCESS_PLAYER_STATE_UPDATE",null,{root:!0})):Object(Me["u"])()&&await E("CHANGE_PLAYER_STATE","paused")},HANDLE_PLAYER_BUFFERING:async({dispatch:e},E)=>{E.buffering?await e("CHANGE_PLAYER_STATE","buffering"):await e("CHANGE_PLAYER_STATE",Object(Me["s"])()?"paused":"playing")},HANDLE_PLAYER_VOLUME_CHANGE:({commit:e})=>{e("settings/SET_SLPLAYERVOLUME",Object(Me["o"])(),{root:!0})},HANDLE_PLAYER_CLICK:async({dispatch:e},E)=>{E.target.classList.contains("shaka-close-button")||await e("SEND_PARTY_PLAY_PAUSE")},HANDLE_SEEKING:async({dispatch:e})=>{console.debug("HANDLE_SEEKING"),await e("DESTROY_ASS")},HANDLE_SEEKED:async({dispatch:e})=>{console.debug("HANDLE_SEEKED"),await e("CHANGE_SUBTITLES")},HANDLE_PICTURE_IN_PICTURE_CHANGE:async({getters:e,commit:E,dispatch:t})=>{E("SET_IS_IN_PICTURE_IN_PICTURE",null!=document.pictureInPictureElement),e.IS_IN_PICTURE_IN_PICTURE&&e.IS_USING_NATIVE_SUBTITLES&&await t("UPDATE_PLAYER_SRC_AND_KEEP_TIME")},HANDLE_ERROR:({dispatch:e},E)=>(console.error(E),e("UPDATE_PLAYER_SRC_AND_KEEP_TIME")),PRESS_PLAY:()=>{Object(Me["y"])()},PRESS_PAUSE:()=>{Object(Me["x"])()},PRESS_STOP:async({dispatch:e})=>{await e("CHANGE_PLAYER_STATE","stopped")},SOFT_SEEK:({commit:e},E)=>{if(console.debug("SOFT_SEEK",E),!Object(Me["v"])(E))throw new Error("Soft seek not allowed outside of buffered range");e("SET_OFFSET_MS",E),Object(Me["A"])(E)},PROCESS_STATE_UPDATE_ON_PLAYER_EVENT:async({dispatch:e},{signal:E,type:t,noSync:_})=>{await Object(Me["E"])({signal:E,type:t}),await e("synclounge/PROCESS_PLAYER_STATE_UPDATE",_,{root:!0})},SPEED_SEEK:async({dispatch:e,rootGetters:E},{cancelSignal:t,seekToMs:_})=>{console.debug("SPEED_SEEK",_);const n=await e("FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK"),a=_-n,i=1+Math.sign(a)*E.GET_CONFIG.slplayer_speed_sync_rate,T=(_-n)/(i-1);console.log("ms until synced: ",T);const r=L()((function*(E){Object(Me["B"])(i);try{yield Promise.all([L.a.delay(E,T),e("PROCESS_STATE_UPDATE_ON_PLAYER_EVENT",{signal:E,type:"ratechange",noSync:!0})])}finally{Object(Me["B"])(1),e("PROCESS_STATE_UPDATE_ON_PLAYER_EVENT",{signal:E,type:"ratechange",noSync:E.aborted})}}));return r(t)},NORMAL_SEEK:async({rootGetters:e,commit:E},{cancelSignal:t,seekToMs:_})=>{console.debug("NORMAL_SEEK",_),E("SET_OFFSET_MS",_),Object(Me["A"])(_);const n=L.a.timeout(e.GET_CONFIG.slplayer_seek_timeout,"Normal seek took too long"),a=L.a.signalRace([t,n.signal]),i=L()((function*(e){yield Object(Me["E"])({signal:e,type:"seeked"})}));try{await i(a)}finally{n.abort()}},SPEED_OR_NORMAL_SEEK:async({dispatch:e,getters:E,rootGetters:t},{cancelSignal:_,seekToMs:n})=>{const a=await e("FETCH_PLAYER_CURRENT_TIME_MS_OR_FALLBACK"),i=n-a;return Math.abs(i)<=t.GET_CONFIG.slplayer_speed_sync_max_diff&&"playing"===E.GET_PLAYER_STATE?e("SPEED_SEEK",{cancelSignal:_,seekToMs:n}):e("NORMAL_SEEK",{cancelSignal:_,seekToMs:n})},START_PERIODIC_PLEX_TIMELINE_UPDATE:async({commit:e,dispatch:E,rootGetters:t})=>{const _=new L.a.cancelToken;e("SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN",_);const n=L()((function*(e){while(1){yield L.a.delay(e,t.GET_CONFIG.slplayer_plex_timeline_update_interval);try{yield E("SEND_PLEX_TIMELINE_UPDATE",e)}catch(_){console.error(_)}}}));try{await n(_.signal)}catch(a){console.debug("PLEX_TIMELINE_UPDATER canceled")}},START_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL:({commit:e,rootGetters:E})=>{e("SET_PLAYER_CONTROLS_SHOWN_INTERVAL",setInterval(()=>{e("UPDATE_PLAYER_CONTROLS_SHOWN",Object(Me["b"])())},E.GET_CONFIG.slplayer_controls_visible_checker_interval))},CHANGE_PLAYER_STATE:async({commit:e,dispatch:E},t)=>{console.debug("CHANGE_PLAYER_STATE",t),e("SET_PLAYER_STATE",t);const _=E("SEND_PLEX_TIMELINE_UPDATE");"stopped"!==t&&await E("synclounge/PROCESS_PLAYER_STATE_UPDATE",null,{root:!0}),await _},LOAD_PLAYER_SRC:async({getters:e})=>{await Object(Me["D"])(),await Object(Me["w"])(e.GET_SRC_URL),e.GET_OFFSET_MS>0&&Object(Me["A"])(e.GET_OFFSET_MS)},NAVIGATE_AND_INITIALIZE_PLAYER:({commit:e})=>{console.debug("NAVIGATE_AND_INITIALIZE_PLAYER");const E=be();return e("SET_PLAYER_INITIALIZED_DEFERRED_PROMISE",E),e("SET_NAVIGATE_TO_PLAYER",!0,{root:!0}),E.promise},INIT_PLAYER_STATE:async({getters:e,rootGetters:E,commit:t,dispatch:_})=>{console.debug("INIT_PLAYER_STATE"),t("SET_PLAYER_DESTROY_CANCEL_TOKEN",new L.a.cancelToken);try{await _("REGISTER_PLAYER_EVENTS"),await _("START_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL"),Object(Me["C"])(E["settings/GET_SLPLAYERVOLUME"]),await _("CHANGE_PLAYER_SRC"),_("START_PERIODIC_PLEX_TIMELINE_UPDATE")}catch(n){e.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE&&(e.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE.reject(n),t("SET_PLAYER_INITIALIZED_DEFERRED_PROMISE",null))}e.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE&&(e.GET_PLAYER_INITIALIZED_DEFERRED_PROMISE.resolve(),t("SET_PLAYER_INITIALIZED_DEFERRED_PROMISE",null)),t("SET_IS_PLAYER_INITIALIZED",!0)},CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE:({getters:e,commit:E})=>{e.GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN&&(e.GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN.abort(),E("SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN",null))},DESTROY_PLAYER_STATE:async({getters:e,commit:E,dispatch:t})=>{console.debug("DESTROY_PLAYER_STATE"),e.GET_PLAYER_DESTROY_CANCEL_TOKEN.abort(),E("SET_PLAYER_DESTROY_CANCEL_TOKEN",null),E("SET_FORCE_TRANSCODE_RETRY",!1),E("STOP_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL"),E("UPDATE_PLAYER_CONTROLS_SHOWN",!1),await t("UNREGISTER_PLAYER_EVENTS"),await t("CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE"),E("plexclients/SET_ACTIVE_MEDIA_METADATA",null,{root:!0}),E("plexclients/SET_ACTIVE_SERVER_ID",null,{root:!0}),E("SET_IS_PLAYER_INITIALIZED",!1),E("SET_IS_IN_PICTURE_IN_PICTURE",!1),await t("DESTROY_SUBTITLES"),E("SET_SUBTITLE_OFFSET",0),await Object(Me["d"])(),E("SET_OFFSET_MS",0),await t("synclounge/PROCESS_MEDIA_UPDATE",null,{root:!0})},REGISTER_PLAYER_EVENTS:({commit:e,dispatch:E})=>{const t=e=>E("HANDLE_PLAYER_BUFFERING",e);Object(Me["a"])("buffering",t),e("SET_BUFFERING_EVENT_LISTENER",t);const _=e=>E("HANDLE_PLAYER_CLICK",e);Object(Me["n"])().addEventListener("click",_),Object(Me["e"])().addEventListener("click",_),e("SET_CLICK_EVENT_LISTENER",_);const n=e=>E("HANDLE_ERROR",e);Object(Me["a"])("error",n),e("SET_ERROR_EVENT_LISTENER",n)},UNREGISTER_PLAYER_EVENTS:({getters:e,commit:E})=>{Object(Me["z"])("buffering",e.GET_BUFFERING_EVENT_LISTENER),E("SET_BUFFERING_EVENT_LISTENER",null),Object(Me["n"])().removeEventListener("click",e.GET_CLICK_EVENT_LISTENER),Object(Me["e"])().removeEventListener("click",e.GET_CLICK_EVENT_LISTENER),E("SET_CLICK_EVENT_LISTENER",null),Object(Me["z"])("buffering",e.GET_ERROR_EVENT_LISTENER),E("SET_ERROR_EVENT_LISTENER",null)},PLAY_PAUSE_VIDEO:async({dispatch:e})=>{Object(Me["k"])()&&(Object(Me["c"])(),Object(Me["u"])()?await e("PRESS_PLAY"):await e("PRESS_PAUSE"))},SEND_PARTY_PLAY_PAUSE:async({dispatch:e})=>{await e("synclounge/sendPartyPause",Object(Me["u"])(),{root:!0})},PLAY_NEXT:async({dispatch:e,commit:E})=>{console.debug("slplayer/PLAY_NEXT"),E("plexclients/INCREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET",null,{root:!0}),await e("PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM")},PLAY_PREVIOUS:async({dispatch:e,commit:E})=>{E("plexclients/DECREMENT_ACTIVE_PLAY_QUEUE_SELECTED_ITEM_OFFSET",null,{root:!0}),await e("PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM")},PLAY_ACTIVE_PLAY_QUEUE_SELECTED_ITEM:async({dispatch:e,commit:E,rootGetters:t})=>{await e("CANCEL_PERIODIC_PLEX_TIMELINE_UPDATE"),await e("SEND_PLEX_TIMELINE_UPDATE",{state:"stopped",continuing:1}),await e("plexclients/UPDATE_STATE_FROM_ACTIVE_PLAY_QUEUE_SELECTED_ITEM",null,{root:!0}),E("SET_MEDIA_INDEX",0),E("SET_OFFSET_MS",t["plexclients/GET_ACTIVE_PLAY_QUEUE_SELECTED_ITEM"].viewOffset||0),E("SET_MASK_PLAYER_STATE",!0),await e("synclounge/PROCESS_MEDIA_UPDATE",!0,{root:!0}),await e("CHANGE_PLAYER_SRC"),e("START_PERIODIC_PLEX_TIMELINE_UPDATE"),await e("plexclients/UPDATE_ACTIVE_PLAY_QUEUE",null,{root:!0})},SKIP_INTRO:async({dispatch:e,commit:E,rootGetters:t})=>{const _=t["plexclients/GET_ACTIVE_MEDIA_METADATA_INTRO_MARKER"].endTimeOffset;console.debug("SKIP_INTRO",_),await e("DISPLAY_NOTIFICATION",{text:"Skipping intro",color:"info"},{root:!0}),E("SET_OFFSET_MS",_),Object(Me["A"])(_)},...Be};const je=()=>({session:null,xplexsessionId:Object(Ee["a"])(),plexDecision:null,mediaIndex:0,offsetMs:0,playerState:"stopped",playerControlsShown:!1,playerControlsShownInterval:null,bufferingEventListener:null,clickEventListener:null,errorEventListener:null,plexTimelineUpdaterCancelToken:null,playerDestroyCancelToken:null,isPlayerInitialized:!1,playerInitializedDeferredPromise:null,maskPlayerState:!1,isInPictureInPicture:!1,originalSubtitleResolutionXCache:null,originalSubtitleResolutionYCache:null,subtitleSize:Ye["f"].Normal,subtitlePosition:Ye["d"].Bottom,subtitleColor:Ye["c"].White,subtitleOffset:0,streamingProtocol:"dash",forceTranscodeRetry:!1});var Qe=je,$e={RESET:e=>{Object.assign(e,Qe())},SET_PLAYER_STATE:(e,E)=>{e.playerState=E},SET_SESSION:(e,E)=>{e.session=E},SET_OFFSET_MS:(e,E)=>{e.offsetMs=E},SET_MEDIA_INDEX:(e,E)=>{e.mediaIndex=E},SET_PLEX_DECISION:(e,E)=>{e.plexDecision=E},UPDATE_PLAYER_CONTROLS_SHOWN:(e,E)=>{e.playerControlsShown=E},SET_PLAYER_CONTROLS_SHOWN_INTERVAL:(e,E)=>{e.playerControlsShownInterval=E},STOP_UPDATE_PLAYER_CONTROLS_SHOWN_INTERVAL:e=>{clearInterval(e.playerControlsShownInterval),e.playerControlsShownInterval=null},SET_BUFFERING_EVENT_LISTENER:(e,E)=>{e.bufferingEventListener=E},SET_CLICK_EVENT_LISTENER:(e,E)=>{e.clickEventListener=E},SET_ERROR_EVENT_LISTENER:(e,E)=>{e.errorEventListener=E},SET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN:(e,E)=>{e.plexTimelineUpdaterCancelToken=E},SET_PLAYER_DESTROY_CANCEL_TOKEN:(e,E)=>{e.playerDestroyCancelToken=E},SET_IS_PLAYER_INITIALIZED:(e,E)=>{e.isPlayerInitialized=E},SET_PLAYER_INITIALIZED_DEFERRED_PROMISE:(e,E)=>{e.playerInitializedDeferredPromise=E},SET_MASK_PLAYER_STATE:(e,E)=>{e.maskPlayerState=E},SET_IS_IN_PICTURE_IN_PICTURE:(e,E)=>{e.isInPictureInPicture=E},SET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE:(e,E)=>{e.originalSubtitleResolutionXCache=E},SET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE:(e,E)=>{e.originalSubtitleResolutionYCache=E},SET_SUBTITLE_SIZE:(e,E)=>{e.subtitleSize=E},SET_SUBTITLE_POSITION:(e,E)=>{e.subtitlePosition=E},SET_SUBTITLE_COLOR:(e,E)=>{e.subtitleColor=E},SET_SUBTITLE_OFFSET:(e,E)=>{e.subtitleOffset=E},SET_STREAMING_PROTOCOL:(e,E)=>{e.streamingProtocol=E},SET_FORCE_TRANSCODE_RETRY:(e,E)=>{e.forceTranscodeRetry=E}},We=t("48be");const Ze={unknown:0,simple:66,base:66,main:77,high:100,422:122,high10:110,444:144,extended:88,scalablebase:83,scalablehigh:86,multiviewhigh:118,stereohigh:128,constrainedbase:256,ucconstrainedhigh:257,ucscalableconstrainedbase:258,ucscalableconstrainedhigh:259},ze=(e,E)=>{const t=Ze[e.toLowerCase()]||0,_=t.toString(16).padStart(2,"0").padEnd(4,"0"),n=E.toString(16).padStart(2,"0");return`video/mp4; codecs="avc1.${_}${n}"`},qe=({codec:e,profile:E,level:t})=>{switch(console.log("isVideoSupported",e),e){case"h264":return MediaSource.isTypeSupported(ze(E,t));case"av1":return MediaSource.isTypeSupported('video/mp4; codecs="av01.0.00M.08"');default:return MediaSource.isTypeSupported('video/mp4; codecs="'+e)}},Je={main:1,lc:2,ssr:3,ltp:4,sbr:5,scalable:6,ps:29},eE=e=>{const E=Je[e]||0;return`audio/mp4; codecs="mp4a.40.${E}"`},EE=({codec:e,profile:E})=>{switch(console.log("isAudioSupported",e),e){case"aac":return MediaSource.isTypeSupported(eE(E));default:return MediaSource.isTypeSupported('audio/mp4; codecs="'+e)}},tE=["mp4","webm","ogg","wav"],_E=({container:e})=>tE.includes(e),nE=(e,E)=>({label:e,maxVideoBitrate:E}),aE=[nE("Original",null),nE("20 Mbps 1080p",2e4),nE("12 Mbps 1080p",12e3),nE("10 Mbps 1080p",1e4),nE("8 Mbps 1080p",8e3),nE("4 Mbps 720p",4e3),nE("3 Mbps 720p",3e3),nE("2 Mbps 720p",2e3),nE("1.5 Mbps 480p",1500),nE("720 Kbps",720),nE("320 Kbps",320),nE("208 Kbps",208),nE("96 Kbps",96),nE("64 Kbps",64)];var iE=aE;const TE=23e3;var rE={GET_PLEX_DECISION:e=>e.plexDecision,IS_IN_BUGGY_CHROME_STATE:(e,E,t,_)=>{var n,a,i;return("chrome"===_.GET_BROWSER.name||"edge-chromium"===_.GET_BROWSER.name)&&(null==_["settings/GET_SLPLAYERQUALITY"]||_["settings/GET_SLPLAYERQUALITY"]>TE)&&(null===(n=_["plexclients/GET_ACTIVE_MEDIA_METADATA"])||void 0===n||null===(a=n.Media)||void 0===a||null===(i=a[E.GET_MEDIA_INDEX])||void 0===i?void 0:i.bitrate)>TE},GET_STREAMING_PROTOCOL:(e,E)=>E.IS_IN_BUGGY_CHROME_STATE?"hls":e.streamingProtocol,GET_PLEX_SERVER:(e,E,t,_)=>_["plexservers/GET_PLEX_SERVER"](_["plexclients/GET_ACTIVE_SERVER_ID"]),GET_PLEX_SERVER_ACCESS_TOKEN:(e,E)=>E.GET_PLEX_SERVER?E.GET_PLEX_SERVER.accessToken:void 0,GET_PLEX_SERVER_URL:(e,E)=>E.GET_PLEX_SERVER?E.GET_PLEX_SERVER.chosenConnection.uri:void 0,GET_PLEX_SERVER_LOCATION:(e,E)=>E.GET_PLEX_SERVER?"1"===E.GET_PLEX_SERVER.publicAddressMatches?"lan":"wan":void 0,GET_PART_ID:(e,E,t,_)=>_["plexclients/GET_ACTIVE_MEDIA_METADATA"]?_["plexclients/GET_ACTIVE_MEDIA_METADATA"].Media[E.GET_MEDIA_INDEX].Part[0].id:null,GET_DECISION_PART:(e,E)=>{var t,_,n,a,i,T;return null===(t=E.GET_PLEX_DECISION)||void 0===t||null===(_=t.MediaContainer)||void 0===_||null===(n=_.Metadata)||void 0===n||null===(a=n[0])||void 0===a||null===(i=a.Media)||void 0===i||null===(T=i[0].Part)||void 0===T?void 0:T[0]},IS_DECISION_DIRECT_PLAY:(e,E)=>{var t;return"directplay"===(null===(t=E.GET_DECISION_PART)||void 0===t?void 0:t.decision)},GET_SRC_PATH:(e,E)=>{var t;return E.IS_DECISION_DIRECT_PLAY?null===(t=E.GET_DECISION_PART)||void 0===t?void 0:t.key:"/video/:/transcode/universal/start."+We["a"][E.GET_STREAMING_PROTOCOL]},GET_SRC_URL:(e,E)=>i(`${E.GET_PLEX_SERVER_URL}${E.GET_SRC_PATH}`,E.GET_DECISION_AND_START_PARAMS),GET_SUBTITLE_BASE_URL:(e,E)=>E.CAN_DIRECT_PLAY_SUBTITLES?`${E.GET_PLEX_SERVER_URL}${E.GET_SUBTITLE_STREAM.key}`:E.GET_PLEX_SERVER_URL+"/video/:/transcode/universal/subtitles",GET_DECISION_URL:(e,E)=>E.GET_PLEX_SERVER_URL+"/video/:/transcode/universal/decision",GET_PART_URL:(e,E)=>`${E.GET_PLEX_SERVER_URL}/library/parts/${E.GET_PART_ID}`,GET_TIMELINE_URL:(e,E)=>E.GET_PLEX_SERVER_URL+"/:/timeline",GET_PART:(e,E,t,_)=>{var n,a,i,T;return null===(n=_["plexclients/GET_ACTIVE_MEDIA_METADATA"])||void 0===n||null===(a=n.Media)||void 0===a||null===(i=a[E.GET_MEDIA_INDEX])||void 0===i||null===(T=i.Part)||void 0===T?void 0:T[0]},GET_STREAMS:(e,E)=>{var t;return(null===(t=E.GET_PART)||void 0===t?void 0:t.Stream)||[]},GET_SELECTED_SUBTITLE_STREAM:(e,E)=>{var t;return null===(t=E.GET_STREAMS)||void 0===t?void 0:t.find(({streamType:e,selected:E})=>3===e&&E)},CAN_DIRECT_PLAY_SUBTITLES:(e,E)=>{if(E.SHOULD_FORCE_BURN_SUBTITLES)return!1;const{key:t,codec:_}=E.GET_SELECTED_SUBTITLE_STREAM;return t&&("srt"===_||"ass"===_)},CAN_DIRECT_PLAY:(e,E,t,_)=>{if(!_E(E.GET_PART))return console.log("CAN_DIRECT_PLAY: container not supported: "+E.GET_PART.container),!1;const n=E.GET_STREAMS.find(({streamType:e})=>1===e);if(_["settings/GET_SLPLAYERQUALITY"]&&_["settings/GET_SLPLAYERQUALITY"]<(null===n||void 0===n?void 0:n.bitrate))return console.debug("CAN_DIRECT_PLAY: false because video quality higher than desired"),!1;if(E.GET_SELECTED_SUBTITLE_STREAM){if(E.SHOULD_FORCE_BURN_SUBTITLES)return console.debug("CAN_DIRECT_PLAY: false because subtitles are set to be burned"),!1;if(!E.CAN_DIRECT_PLAY_SUBTITLES)return console.debug("CAN_DIRECT_PLAY: false because subtitles enabled with incompatible codec or embedded"),!1}if(!qe(n))return console.debug("CAN_DIRECT_PLAY: false video codec not supported"),!1;const a=E.GET_STREAMS.filter(({streamType:e})=>2===e),i=a.some(EE);return a.length>0&&!i?(console.debug("CAN_DIRECT_PLAY: false audio codec not supported"),!1):(console.debug("CAN_DIRECT_PLAY: true"),!0)},GET_DECISION_STREAMS:(e,E)=>{var t;return(null===(t=E.GET_DECISION_PART)||void 0===t?void 0:t.Stream)||[]},GET_SUBTITLE_STREAMS:(e,E)=>Array.of({id:0,text:"None"}).concat(E.GET_STREAMS.filter(({streamType:e})=>3===e).map(({id:e,displayTitle:E})=>({id:e,text:E}))),GET_AUDIO_STREAMS:(e,E)=>E.GET_STREAMS.filter(({streamType:e})=>2===e).map(({id:e,displayTitle:E})=>({id:e,text:E})),GET_MEDIA_LIST:(e,E,t,_)=>_["plexclients/GET_ACTIVE_MEDIA_METADATA"]?_["plexclients/GET_ACTIVE_MEDIA_METADATA"].Media.map(({videoResolution:e,bitrate:E},t)=>({index:t,text:`${Math.round(E/100)/10} Mbps, ${e}p`})):[],GET_QUALITIES:()=>iE,GET_AUDIO_STREAM_ID:(e,E)=>{const t=E.GET_DECISION_STREAMS.find(e=>"2"===e.streamType&&"1"===e.selected);return t?parseInt(t.id,10):0},GET_SUBTITLE_STREAM:(e,E)=>E.GET_DECISION_STREAMS.find(e=>"3"===e.streamType&&"1"===e.selected),GET_SUBTITLE_STREAM_ID:(e,E)=>E.GET_SUBTITLE_STREAM?parseInt(E.GET_SUBTITLE_STREAM.id,10):0,GET_MEDIA_INDEX:e=>e.mediaIndex,GET_RELATIVE_THUMB_URL:(e,E,t,_)=>_["plexclients/GET_ACTIVE_MEDIA_METADATA"]?_["plexclients/GET_ACTIVE_MEDIA_METADATA"].grandparentThumb||_["plexclients/GET_ACTIVE_MEDIA_METADATA"].thumb:null,GET_THUMB_URL:(e,E,t,_)=>E.GET_PLEX_SERVER?_["plexservers/GET_MEDIA_IMAGE_URL"]({machineIdentifier:_["plexclients/GET_ACTIVE_SERVER_ID"],mediaUrl:E.GET_RELATIVE_THUMB_URL,width:200,height:200}):null,GET_OFFSET_MS:e=>e.offsetMs,GET_PLAYER_STATE:e=>e.playerState,GET_TITLE:(e,E,t,_)=>_["plexclients/GET_ACTIVE_MEDIA_METADATA"]?re["a"].getTitle(_["plexclients/GET_ACTIVE_MEDIA_METADATA"]):null,GET_SECONDARY_TITLE:(e,E,t,_)=>_["plexclients/GET_ACTIVE_MEDIA_METADATA"]?re["a"].getSecondaryTitle(_["plexclients/GET_ACTIVE_MEDIA_METADATA"]):null,GET_PART_PARAMS:(e,E,t,_)=>_["plex/GET_PLEX_BASE_PARAMS"](E.GET_PLEX_SERVER_ACCESS_TOKEN),GET_PLEX_PROFILE_EXTRAS:(e,E,t,_)=>{const n=`append-transcode-target-codec(type=videoProfile&context=streaming&audioCodec=aac&protocol=${E.GET_STREAMING_PROTOCOL})`;return _["settings/GET_SLPLAYERQUALITY"]?`${n}+add-limitation(scope=videoCodec&scopeName=*&type=upperBound&name=video.bitrate&value=${_["settings/GET_SLPLAYERQUALITY"]}&replace=true)`:n},SHOULD_FORCE_BURN_SUBTITLES:(e,E)=>E.IS_IN_PICTURE_IN_PICTURE,GET_SUBTITLE_PARAMS:(e,E)=>!E.GET_SELECTED_SUBTITLE_STREAM||E.CAN_DIRECT_PLAY||E.CAN_DIRECT_PLAY_SUBTITLES?{subtitles:"none"}:E.SHOULD_FORCE_BURN_SUBTITLES?{subtitles:"burn"}:{subtitles:"auto",advancedSubtitles:"text"},GET_DECISION_AND_START_PARAMS:(e,E,t,_)=>({hasMDE:1,path:_["plexclients/GET_ACTIVE_MEDIA_METADATA"].key,mediaIndex:E.GET_MEDIA_INDEX,partIndex:0,protocol:E.GET_STREAMING_PROTOCOL,fastSeek:1,directPlay:E.CAN_DIRECT_PLAY?1:0,directStream:E.GET_FORCE_TRANSCODE?0:1,subtitleSize:100,audioBoost:100,location:E.GET_PLEX_SERVER_LOCATION,..._["settings/GET_SLPLAYERQUALITY"]&&{maxVideoBitrate:_["settings/GET_SLPLAYERQUALITY"]},addDebugOverlay:0,autoAdjustQuality:0,directStreamAudio:E.GET_FORCE_TRANSCODE?0:1,mediaBufferSize:102400,session:e.session,...E.GET_SUBTITLE_PARAMS,"Accept-Language":"en","X-Plex-Session-Identifier":E.GET_X_PLEX_SESSION_ID,"X-Plex-Client-Profile-Extra":E.GET_PLEX_PROFILE_EXTRAS,"X-Plex-Incomplete-Segments":1,..._["plex/GET_PLEX_BASE_PARAMS"](E.GET_PLEX_SERVER_ACCESS_TOKEN)}),ARE_PLAYER_CONTROLS_SHOWN:e=>e.playerControlsShown,GET_X_PLEX_SESSION_ID:e=>e.xplexsessionId,GET_PLEX_TIMELINE_UPDATER_CANCEL_TOKEN:e=>e.plexTimelineUpdaterCancelToken,GET_PLAYER_DESTROY_CANCEL_TOKEN:e=>e.playerDestroyCancelToken,GET_BUFFERING_EVENT_LISTENER:e=>e.bufferingEventListener,GET_CLICK_EVENT_LISTENER:e=>e.clickEventListener,GET_ERROR_EVENT_LISTENER:e=>e.errorEventListener,IS_PLAYER_INITIALIZED:e=>e.isPlayerInitialized,GET_PLAYER_INITIALIZED_DEFERRED_PROMISE:e=>e.playerInitializedDeferredPromise,GET_MASK_PLAYER_STATE:e=>e.maskPlayerState,IS_IN_PICTURE_IN_PICTURE:e=>e.isInPictureInPicture,GET_ORIGINAL_SUBTITLE_RESOLUTION_X_CACHE:e=>e.originalSubtitleResolutionXCache,GET_ORIGINAL_SUBTITLE_RESOLUTION_Y_CACHE:e=>e.originalSubtitleResolutionYCache,GET_SUBTITLE_SIZE:e=>e.subtitleSize,GET_SUBTITLE_POSITION:e=>e.subtitlePosition,GET_SUBTITLE_COLOR:e=>e.subtitleColor,IS_USING_NATIVE_SUBTITLES:(e,E)=>{var t;return E.GET_SUBTITLE_STREAM_ID&&!(null===(t=E.GET_SUBTITLE_STREAM)||void 0===t?void 0:t.burn)},GET_SUBTITLE_OFFSET:e=>e.subtitleOffset,IS_SUBTITLE_STREAM_NATIVE_SIDECAR:(e,E)=>{var t;return E.IS_USING_NATIVE_SUBTITLES&&(null===(t=E.GET_SUBTITLE_STREAM)||void 0===t?void 0:t.file)},GET_FORCE_TRANSCODE_RETRY:e=>e.forceTranscodeRetry,GET_FORCE_TRANSCODE:(e,E,t,_)=>E.GET_FORCE_TRANSCODE_RETRY||_["settings/GET_SLPLAYERFORCETRANSCODE"]},sE={namespaced:!0,state:Qe,getters:rE,mutations:$e,actions:Ke},oE={synclounge:X,plex:Te,plexclients:Se,plexservers:fe,settings:W,slplayer:sE};_["a"].use(n["a"]);const cE=Object(a["a"])({paths:["isLibraryListView","settings","plex.user","plex.plexAuthToken","plex.clientIdentifier","plex.areDevicesCached","plexclients.clients","plexservers.servers","plexservers.lastServerId","plexservers.blockedServerIds","synclounge.areNotificationsEnabled","synclounge.areSoundNotificationsEnabled","slplayer.subtitleSize","slplayer.subtitlePosition","slplayer.subtitleColor","slplayer.streamingProtocol"]}),lE=new n["a"].Store({strict:!1,state:d,mutations:u,actions:I,getters:N,modules:oE,plugins:[cE]});E["a"]=lE},"454e":function(e,E,t){"use strict";t.d(E,"e",(function(){return _})),t.d(E,"d",(function(){return n})),t.d(E,"f",(function(){return a})),t.d(E,"c",(function(){return i})),t.d(E,"a",(function(){return r})),t.d(E,"b",(function(){return s}));const _={preciseOutlines:!0},n={Top:8,Middle:5,Bottom:2},a={Tiny:.5,Small:.75,Normal:1,Large:1.25,Huge:2},i={White:"FFFFFF",Yellow:"FFEE00",Black:"000000",Cyan:"00FFFF",Blue:"0000FF",Green:"00FF00",Magenta:"EE00EE",Red:"FF0000",Gray:"808080"},T=(e,E,t)=>{const _=e/255,n=E/255,a=t/255,i=_<=.03928?_/12.92:((_+.055)/1.055)**2.4,T=n<=.03928?n/12.92:((n+.055)/1.055)**2.4,r=a<=.03928?a/12.92:((a+.055)/1.055)**2.4,s=.2126*i+.7152*T+.0722*r;return s},r=({red:e,green:E,blue:t})=>T(e,E,t)>.179?i.Black:i.White,s=async e=>{const E=await t.e("chunk-2d0c7b5d").then(t.t.bind(null,"527a",7)),_=e.match(/.{1,2}/g);return new E.parts.Color(parseInt(_[0],16),parseInt(_[1],16),parseInt(_[2],16),1)}},"48be":function(e,E,t){"use strict";t.d(E,"b",(function(){return _})),t.d(E,"a",(function(){return n}));const _=["dash","hls"],n={dash:"mpd",hls:"m3u8"}},"56d7":function(e,E,t){"use strict";t.r(E);var _=t("2b0e"),n=t("123d"),a=t.n(n),i=t("f309");_["a"].use(i["a"]);var T=new i["a"]({icons:{iconfont:"md"},theme:{dark:!0,options:{customProperties:!0},themes:{dark:{primary:"#e5a00d"}}}}),r=function(){var e=this,E=e.$createElement,_=e._self._c||E;return _("v-app",[_("TheSidebarLeft"),_("router-view",{attrs:{name:"rightSidebar"}}),_("v-app-bar",{staticStyle:{"z-index":"5"},attrs:{app:"","scroll-off-screen":"","scroll-threshold":1},scopedSlots:e._u([e.showAppBarExtension?{key:"extension",fn:function(){return[_("TheAppBarCrumbs"),_("v-spacer"),_("router-view",{staticStyle:{"max-width":"400px"},attrs:{name:"searchBar"}}),_("router-view",{attrs:{name:"appBarView"}})]},proxy:!0}:null],null,!0)},[_("v-app-bar-nav-icon",{on:{click:e.SET_LEFT_SIDEBAR_OPEN}}),_("router-link",{attrs:{to:{name:"RoomCreation"}}},[_("picture",[_("source",{attrs:{srcset:t("ef97"),media:e.smallLogoMedia}}),_("img",{staticStyle:{"vertical-align":"middle"},attrs:{height:"42",src:t("336e")}})])]),e.showNowPlaying?_("TheNowPlayingChip",{staticClass:"pl-4"}):e._e(),_("v-spacer"),_("v-toolbar-items",[e.inviteUrl?_("v-btn",{attrs:{color:"primary",raised:""},on:{click:function(E){return e.copyToClipboard(e.inviteUrl)}}},[e._v(" Invite ")]):e._e(),_("v-btn",{staticClass:"hidden-lg-and-up",attrs:{icon:""},on:{click:e.toggleFullScreen}},[_("v-icon",[e._v("fullscreen")])],1),e._l(e.links,(function(E){return _("v-btn",{key:E.title,staticClass:"hidden-sm-and-down",attrs:{small:"",tag:"a",text:"",href:E.href,target:E.target}},[e._v(" "+e._s(E.title)+" ")])})),_("DonateDialog",{scopedSlots:e._u([{key:"default",fn:function(E){var t=E.on,n=E.attrs;return[_("v-btn",e._g(e._b({staticClass:"hidden-sm-and-down",attrs:{small:"",text:""}},"v-btn",n,!1),t),[e._v(" Donate ♥ ")])]}}])})],2),_("router-view",{attrs:{name:"rightSidebarButton"}})],1),_("v-main",{staticClass:"main-content",attrs:{app:""}},[_("v-container",{staticClass:"pa-0",attrs:{align:"start",fluid:""}},[_("v-img",{attrs:{src:e.GET_BACKGROUND,height:e.bgHeight},on:{load:e.backgroundLoad,error:e.backgroundError}},[_("v-sheet",{staticClass:"overflow-y-auto pa-3",attrs:{color:e.sheetColor,height:e.bgHeight}},[e.GET_CONFIG?_("router-view"):_("v-container",{attrs:{"fill-height":""}},[_("v-row",{staticClass:"pt-4 text-center",attrs:{justify:"center",align:"center"}},[_("v-col",[_("v-progress-circular",{staticClass:"amber--text",attrs:{indeterminate:"",size:"60"}})],1)],1)],1),_("v-snackbar",{attrs:{value:e.GET_SNACKBAR_OPEN,color:e.GET_SNACKBAR_MESSAGE.color,bottom:"",timeout:"4000","content-class":"text-center"},on:{input:e.SET_SNACKBAR_OPEN}},[e._v(" "+e._s(e.GET_SNACKBAR_MESSAGE.text)+" ")]),e.GET_UP_NEXT_POST_PLAY_DATA?_("TheUpnextDialog"):e._e()],1)],1)],1)],1)],1)},s=[],o=(t("ddb0"),t("2b3d"),t("6672"),t("2f62")),c=t("acfb"),l=t("f168"),I=t("f8dc"),S=t("6827"),A={components:{TheSidebarLeft:()=>Promise.all([t.e("chunk-b26fb844"),t.e("chunk-7d3c7b07")]).then(t.bind(null,"7f4d")),TheUpnextDialog:()=>t.e("chunk-151b74e4").then(t.bind(null,"a578")),TheNowPlayingChip:()=>t.e("chunk-d79830a2").then(t.bind(null,"69d4")),DonateDialog:()=>Promise.all([t.e("chunk-b8319b1e"),t.e("chunk-692a6e88")]).then(t.bind(null,"418c")),TheAppBarCrumbs:()=>t.e("chunk-aa532ff8").then(t.bind(null,"b097"))},mixins:[c["a"],l["a"],I["a"]],data:()=>({numBackgroundErrors:0}),computed:{...Object(o["c"])(["GET_UP_NEXT_POST_PLAY_DATA","GET_CONFIG","GET_ACTIVE_METADATA","GET_SNACKBAR_MESSAGE","GET_SNACKBAR_OPEN","GET_BACKGROUND","GET_NAVIGATE_TO_PLAYER","GET_NAVIGATE_HOME"]),...Object(o["c"])("plex",["GET_PLEX_AUTH_TOKEN"]),...Object(o["c"])("plexclients",["GET_CHOSEN_CLIENT_ID","GET_ACTIVE_SERVER_ID","GET_PLEX_CLIENT_TIMELINE","GET_ACTIVE_MEDIA_METADATA"]),...Object(o["c"])("plexservers",["GET_PLEX_SERVER"]),...Object(o["c"])("synclounge",["IS_IN_ROOM","GET_ROOM","GET_SERVER"]),...Object(o["e"])(["repositoryUrl","discordUrl"]),links(){return[{title:"Github",href:this.repositoryUrl,target:"_blank"},{title:"Discord",target:"_blank",href:this.discordUrl}]},showNowPlaying(){return this.GET_ACTIVE_SERVER_ID&&this.GET_CHOSEN_CLIENT_ID!==S["a"]},showAppBarExtension(){return this.$route.meta.showAppBarExtension},smallLogoMedia(){return`(max-width: ${this.$vuetify.breakpoint.thresholds.xs}px)`},sheetColor(){return this.GET_BACKGROUND?"rgba(0,0,0,0.7)":"transparent"},bgHeight(){return this.$vuetify.breakpoint.height-this.$vuetify.application.top},inviteUrl(){if(this.GET_ROOM){var e;if(null===(e=this.GET_CONFIG)||void 0===e?void 0:e.autojoin)return window.location.origin;const E=this.$router.resolve({name:"RoomJoin",params:{room:this.GET_ROOM,...this.GET_SERVER&&{server:this.GET_SERVER}}}).href,t=new URL(window.location.pathname,window.location.origin);return new URL(E,t).toString()}return""}},watch:{GET_ACTIVE_MEDIA_METADATA(e){this.IS_IN_ROOM&&this.GET_CHOSEN_CLIENT_ID!==S["a"]&&(e?this.redirectToMediaPage():this.$router.push(this.linkWithRoom({name:"PlexHome"})))},GET_NAVIGATE_TO_PLAYER(e){e&&(this.$router.push(this.linkWithRoom({name:"WebPlayer"})),this.SET_NAVIGATE_TO_PLAYER(!1))},async GET_NAVIGATE_HOME(e){e&&(console.debug("NAVIGATE_HOME"),this.$router.push({name:"RoomCreation"}),this.SET_NAVIGATE_HOME(!1))}},async created(){if(this.GET_PLEX_AUTH_TOKEN){this.FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE();try{await Promise.all([this.FETCH_PLEX_USER(),this.FETCH_PLEX_DEVICES()])}catch(e){console.error(e),await this.DISPLAY_NOTIFICATION({text:"Failed to connect to Plex API. Try logging out and back in.",color:"error"})}}},mounted(){document.addEventListener("fullscreenchange",this.onFullScreenChange)},beforeDestroy(){document.removeEventListener("fullscreenchange",this.onFullScreenChange)},methods:{...Object(o["b"])(["DISPLAY_NOTIFICATION"]),...Object(o["b"])("plex",["FETCH_PLEX_DEVICES","FETCH_PLEX_USER"]),...Object(o["b"])("plexservers",["FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE"]),...Object(o["d"])(["SET_SNACKBAR_OPEN","SET_NAVIGATE_TO_PLAYER","SET_NAVIGATE_HOME","SET_LEFT_SIDEBAR_OPEN"]),backgroundLoad(){this.numBackgroundFailures=0},async backgroundError(e){this.numBackgroundFailures+=1,this.numBackgroundFailures>3?console.error(`Failed ${this.numBackgroundFailures} times finding a background. Giving up`):(console.warn("Error loading background, trying again",e),await this.FETCH_AND_SET_RANDOM_BACKGROUND_IMAGE())},onFullScreenChange(){document.body.classList.toggle("is-fullscreen",document.fullscreenElement)},toggleFullScreen(){document.fullscreenElement?document.exitFullscreen&&document.exitFullscreen():document.documentElement.requestFullscreen()}}},d=A,u=t("2877"),N=t("6544"),R=t.n(N),L=t("7496"),C=t("40dc"),O=t("5bc1"),D=t("8336"),P=t("62ad"),h=t("a523"),p=t("132d"),m=t("adda"),G=t("f6c4"),f=t("490a"),M=t("0fd9"),g=t("8dd9"),b=t("2db4"),U=t("2fa4"),y=t("2a7f"),v=Object(u["a"])(d,r,s,!1,null,null,null),w=v.exports;R()(v,{VApp:L["a"],VAppBar:C["a"],VAppBarNavIcon:O["a"],VBtn:D["a"],VCol:P["a"],VContainer:h["a"],VIcon:p["a"],VImg:m["a"],VMain:G["a"],VProgressCircular:f["a"],VRow:M["a"],VSheet:g["a"],VSnackbar:b["a"],VSpacer:U["a"],VToolbarItems:y["a"]});var H=t("8c4f");_["a"].use(H["a"]);const Y=()=>Promise.all([t.e("chunk-25fafa0f"),t.e("chunk-f1283e9c"),t.e("chunk-dd69c2f2"),t.e("chunk-7ea287e8")]).then(t.bind(null,"14ac")),k=()=>Promise.all([t.e("chunk-b26fb844"),t.e("chunk-28086afd")]).then(t.bind(null,"b34d")),V=()=>t.e("chunk-2d222010").then(t.bind(null,"cd81"));var F=new H["a"]({mode:"hash",routes:[{path:"/",name:"RoomCreation",component:()=>Promise.all([t.e("chunk-0c5f3f74"),t.e("chunk-302d318c")]).then(t.bind(null,"b156")),meta:{requiresAuth:!0}},{path:"*",redirect:{name:"RoomCreation"}},{path:"/signin",name:"SignIn",component:()=>Promise.all([t.e("chunk-0c5f3f74"),t.e("chunk-2d0c8842")]).then(t.bind(null,"54e2")),meta:{requiresNoAuth:!0}},{path:"/signout",name:"SignOut",component:()=>t.e("chunk-2d0c9594").then(t.bind(null,"5982")),meta:{requiresPlexToken:!0}},{path:"/join/:room/:server?",name:"RoomJoin",component:()=>Promise.all([t.e("chunk-0c5f3f74"),t.e("chunk-2e970619")]).then(t.bind(null,"a39d")),props:!0,meta:{requiresAuth:!0,redirectAfterAuth:!0}},{path:"/clientselect",name:"AdvancedRoomWalkthrough",component:()=>Promise.all([t.e("chunk-91dca3f0"),t.e("chunk-039f81d5")]).then(t.bind(null,"4087")),meta:{requiresAuth:!0}},{path:"/joinroom",name:"AdvancedRoomJoin",component:()=>Promise.all([t.e("chunk-25fafa0f"),t.e("chunk-5a6d5fba")]).then(t.bind(null,"26ec")),meta:{requiresAuth:!0}},{path:"/room/:room/player/:server?",name:"WebPlayer",components:{default:()=>t.e("chunk-b7cda9fa").then(t.bind(null,"c597")),rightSidebar:k,rightSidebarButton:V},meta:{requiresAuth:!0,protected:!0}},{path:"/room/:room/browse/:server?",name:"PlexHome",components:{default:()=>t.e("chunk-966029d8").then(t.bind(null,"c014")),searchBar:Y,rightSidebar:k,rightSidebarButton:V},meta:{requiresAuth:!0,protected:!0,showAppBarExtension:!0}},{path:"/room/:room/browse/server/:machineIdentifier/:server?",name:"PlexServer",components:{default:()=>t.e("chunk-784fb0b8").then(t.bind(null,"68d2")),searchBar:Y,rightSidebar:k,rightSidebarButton:V},props:{default:!0,searchBar:!0},meta:{requiresAuth:!0,protected:!0,showAppBarExtension:!0}},{path:"/room/:room/browse/server/:machineIdentifier/library/:sectionId/:server?",name:"PlexLibrary",components:{default:()=>Promise.all([t.e("chunk-25fafa0f"),t.e("chunk-f1283e9c"),t.e("chunk-dd69c2f2"),t.e("chunk-b26fb844"),t.e("chunk-84836d94")]).then(t.bind(null,"8a85")),searchBar:Y,appBarView:()=>t.e("chunk-2d213179").then(t.bind(null,"aacf")),rightSidebar:k,rightSidebarButton:V},props:{default:!0,searchBar:!0},meta:{requiresAuth:!0,protected:!0,showAppBarExtension:!0}},{path:"/room/:room/browse/server/:machineIdentifier/ratingKey/:ratingKey/:server?",name:"PlexMedia",components:{default:()=>t.e("chunk-2d0ba926").then(t.bind(null,"387b")),searchBar:Y,rightSidebar:k,rightSidebarButton:V},props:{default:!0,searchBar:!0},meta:{requiresAuth:!0,protected:!0,showAppBarExtension:!0}},{path:"/room/:room/search/:query/:server?",name:"PlexSearch",components:{default:()=>t.e("chunk-6459bb05").then(t.bind(null,"d95d")),searchBar:Y,rightSidebar:k,rightSidebarButton:V},props:{default:!0,searchBar:!0},meta:{requiresAuth:!0,protected:!0,showAppBarExtension:!0}}]}),x=t("4360");_["a"].use(a.a),_["a"].config.errorHandler=e=>{x["a"].dispatch("DISPLAY_NOTIFICATION",{text:e.message,color:"error"}),console.error(e)};const X=(e,E)=>e?e===E:!E,B=(e,E)=>e.room===E.room&&X(e,E);F.beforeEach(async(e,E,t)=>{x["a"].getters.GET_CONFIG||(await x["a"].dispatch("FETCH_CONFIG"),!x["a"].getters.GET_CONFIG.autojoin)?x["a"].getters["plex/IS_UNAUTHORIZED"]&&e.matched.some(e=>e.meta.requiresAuth)||!x["a"].getters["plex/GET_PLEX_AUTH_TOKEN"]&&e.matched.some(e=>e.meta.requiresPlexToken)?e.matched.some(e=>e.meta.redirectAfterAuth)?t({name:"SignIn",query:{redirect:e.fullPath}}):t({name:"SignIn"}):e.matched.some(e=>e.meta.requiresNoAuth)&&x["a"].getters["plex/GET_PLEX_AUTH_TOKEN"]&&x["a"].getters["plex/IS_USER_AUTHORIZED"]?t({name:"RoomCreation"}):!e.matched.some(e=>e.meta.protected)||x["a"].getters["synclounge/IS_IN_ROOM"]&&!B({server:x["a"].getters["synclounge/GET_SERVER"],room:x["a"].getters["synclounge/GET_ROOM"]},e.params)?t():e.params.room?t({name:"RoomJoin",params:{room:e.params.room,...e.params.server&&{server:e.params.server}}}):t({name:"RoomCreation"}):t({name:"RoomJoin",params:x["a"].getters.GET_CONFIG.autojoin})}),new _["a"]({router:F,store:x["a"],vuetify:T,render:e=>e(w)}).$mount("#app")},"5a05":function(e,E,t){e.exports=t.p+"media/notification_simple-01.27fbe8a5.wav"},6672:function(e,E,t){},6827:function(e,E,t){"use strict";t.d(E,"a",(function(){return _}));const _="PTPLAYER9PLUS10"},"9e3c":function(e,E,t){"use strict";var _=t("2aff");const n=(e,{machineIdentifier:E,ratingKey:t})=>Object(_["a"])(e,{name:"PlexMedia",params:{machineIdentifier:E,ratingKey:t}});E["a"]=n},"9eb5":function(e,E,t){"use strict";t.d(E,"b",(function(){return a})),t.d(E,"d",(function(){return i})),t.d(E,"a",(function(){return T})),t.d(E,"c",(function(){return r}));let _=null,n=null;const a=()=>_,i=e=>{_=e},T=()=>n,r=e=>{n=e}},acfb:function(e,E,t){"use strict";var _=t("9e3c");E["a"]={methods:{redirectToMediaPage(){this.$router.push(Object(_["a"])(this.$store.getters,this.$store.getters["plexclients/GET_ACTIVE_MEDIA_METADATA"]))}}}},ef97:function(e,E,t){e.exports=t.p+"img/logo-small-light.7480f594.png"},f168:function(e,E,t){"use strict";const _="position:fixed;pointer-events:none;z-index:-9999;opacity:0;",n=e=>"string"===typeof e||e instanceof String,a=e=>{const E=n(e)?e:JSON.stringify(e),t=document.createElement("textarea");if(t.value=E,t.setAttribute("readonly",""),t.style.cssText=_,document.body.appendChild(t),navigator.userAgent.match(/ipad|ipod|iphone/i)){t.contentEditable=!0,t.readOnly=!0;const e=document.createRange();e.selectNodeContents(t);const E=window.getSelection();E.removeAllRanges(),E.addRange(e),t.setSelectionRange(0,999999)}else t.select();try{document.execCommand("copy")}finally{document.body.removeChild(t)}};E["a"]={methods:{async copyToClipboard(e){try{await navigator.clipboard.writeText(e)}catch(E){console.warn(E)}a(e),await this.$store.dispatch("DISPLAY_NOTIFICATION",{text:"Copied to clipboard",color:"success"})}}}},f8dc:function(e,E,t){"use strict";var _=t("2aff");E["a"]={methods:{linkWithRoom(e){return Object(_["a"])(this.$store.getters,e)}}}}});
//# sourceMappingURL=app.d61a646e.js.map